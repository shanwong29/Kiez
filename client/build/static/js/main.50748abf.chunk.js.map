{"version":3,"sources":["services/auth.js","components/Navbar.js","components/events/EventOverview.js","services/general-functions.js","components/events/MyEvents.js","components/posts/AddPost.js","services/distance.js","components/posts/PostList.js","components/posts/Newsfeed.js","components/events/EventsGoing.js","components/events/NextEvents.js","components/Home.js","services/upload-img.js","components/events/EventPic.js","components/events/AddEvent.js","components/events/Guestlist.js","components/events/CommentList.js","components/events/AddComment.js","components/events/Comments.js","components/events/EventDetails.js","components/SearchResult.js","components/MessengerNav.js","components/ChatArea.js","components/Messenger.js","components/Signup.js","components/Login.js","components/profiles/AboutMe.js","components/profiles/ProfilePic.js","components/profiles/OfferService.js","components/profiles/OfferStuff.js","components/profiles/ReferenceCard.js","components/profiles/Reference.js","components/profiles/ProfileDetails.js","components/DeleteButton.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","street","houseNumber","city","postalCode","axios","post","then","response","console","log","data","catch","err","login","Navbar","props","className","to","id","onClick","handleChangeNav","showNewsfeed","showMyEvents","showEventsGoing","showNextEvents","user","Form","onSubmit","event","handleQuery","history","name","onChange","handleChange","value","selectInputfield","type","placeholder","searchInputfield","Button","variant","Fragment","delete","clearUser","EventOverview","numOfPplGoingDisplay","join","length","Container","Row","Col","src","imageUrl","width","alt","sm","_id","key","date","slice","time","address","formattedAddress","creater","height","getFormattedDate","queryDate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","futureEventCheck","dateFromDatabase","timeFromDatabase","isFutureEvent","eventDate","Date","eventTimeArr","split","hh","Number","setHours","MyEvents","myEvents","class","state","allEvents","filter","sort","a","b","map","pastEvents","AddPost","description","handleFormSubmit","e","preventDefault","trim","res","getAllEvents","setState","target","this","Group","Control","as","rows","Component","distance","coordinates1","coordinates2","dx","lng","dy","lat","Math","sqrt","toFixed","PostList","postList","coordinates","formattedDate","month","0","1","2","3","4","5","6","7","8","9","10","11","widht","item","index","Newsfeed","EventsGoing","eventsGoing","includes","NextEvents","nextEvents","Home","userChatMsg","chatNeighborId","chatMsg","lastMsg","el","sender","reciever","md","style","textAlign","handleUpload","theFile","EventPic","handleFileUpload","AddEvent","photoMessage","inputWarning","push","chosenFile","files","size","indexOf","uploadData","FormData","append","uploadOn","secure_url","Label","htmlFor","required","min","Guestlist","userJoins","handleClick","put","getSingleEvent","componentDidMount","joinedUsers","isHost","xs","CommentList","commentList","comments","comment","author","commentId","content","AddComment","eventId","Comments","EventDetails","editForm","dateForForm","timeForForm","params","match","get","responseFromApi","originalImage","deleteEvent","toggleEdit","canUpdate","allUsers","SearchResult","neighbor","loggedInUserLocation","otherUserLocation","sortedNeighbor","distanceA","distanceB","searchWord","searchInput","select","offerService","offerStuff","toLowerCase","displayService","displayOfferStuff","neighborCards","eachDistance","textDecoration","color","credits","offset","MessengerNav","navInfo","nameOrder","forEach","neighborId","msg","timeStamp","createdAt","monthEng","12","nameOrderUnique","Set","reverse","navDisplay","Array","from","monthNum","lastMessage","ChatArea","chatAreaMsg","chatAreaDisplay","message","neighborName","neighborPic","selectedUser","backgroundColor","handleChatInputSubmit","chatInput","Messenger","fluid","Signup","error","handleSubmit","isValidUserName","test","setUser","Alert","Login","AboutMe","sameUser","showAboutMeForm","toggleForm","updateAboutMe","aboutMe","cancel","ProfilePic","canUpdateImg","handleSubmitFile","OfferService","services","showOfferServiceForm","deleteService","listStyleType","handleSubmitOfferService","serviceInput","OfferStuff","stuff","showOfferStuffForm","deleteStuff","handleSubmitOfferStuff","stuffInput","ReferenceCard","reference","stars","repeat","rating","lg","fontStyle","fontSize","newRating","ratingChanged","Reference","showReferenceForm","showNotEnoughCredit","authorCredits","showNeedtoWriteSth","showReferenceAlert","addReference","profileOwner","handleCreditChange","creditInput","count","half","color2","handleRefChange","referenceInput","firstAddRef","cancelReferenceChange","ProfileDetails","following","showAddressForm","showDeleteAlert","addressInvalidMsg","getData","status","obj","updateAddress","deleteItem","parseInt","axiosCreateRef","axiosUpdateAuthorCredits","axiosUpdateProfileOwnerCredits","deleteAccount","toggleAlertFunction","cancelAddressChange","prevProps","Footer","rel","href","endpoint","process","PORT","socket","socketIOClient","App","recieverAction","object","getAllUser","getMsg","recieverId","send","on","render","routerProps","exact","path","setRecieverAction","React","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mQAEMA,EAAS,SAACC,EAAUC,EAAUC,EAAQC,EAAaC,EAAMC,GAC7D,OAAOC,IACJC,KAAK,mBAAoB,CACxBP,SAAUA,EACVC,SAAUA,EACVC,OAAQA,EACRC,YAAaA,EACbC,KAAMA,EACNC,WAAYA,IAEbG,MAAK,SAAAC,GAGJ,OAFAC,QAAQC,IAAIF,EAASG,MAEdH,EAASG,QAEjBC,OAAM,SAAAC,GACL,OAAOA,EAAIL,SAASG,SAIpBG,EAAQ,SAACf,EAAUC,GACvB,OAAOK,IACJC,KAAK,kBAAmB,CACvBP,SAAUA,EACVC,SAAUA,IAEXO,MAAK,SAAAC,GACJ,OAAOA,EAASG,QAEjBC,OAAM,SAAAC,GACL,OAAOA,EAAIL,SAASG,S,kBCwEXI,EAlGA,SAAAC,GACbP,QAAQC,IAAI,MAAOM,GAQnB,OACE,yBAAKC,UAAU,0DACb,kBAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,KAChC,4BACEC,GAAG,cACHC,QAAS,kBACPJ,EAAMK,gBAAgB,CACpBC,cAAc,EACdC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,MAPtB,SAeDT,EAAMU,KACL,yBAAKT,UAAU,aACb,kBAACU,EAAA,EAAD,CACEV,UAAU,wBACVW,SAAU,SAAAC,GAAK,OAAIb,EAAMc,YAAYD,EAAOb,EAAMe,WAElD,4BACEd,UAAU,gBACVe,KAAK,mBACLC,SAAUjB,EAAMkB,aAChBC,MAAOnB,EAAMoB,kBAEb,4BAAQD,MAAM,IAAd,iBACA,4BAAQA,MAAM,aAAd,oBACA,4BAAQA,MAAM,QAAd,kBAEF,2BACEE,KAAK,OACLpB,UAAU,eACVe,KAAK,mBACLM,YAAY,2BACZL,SAAUjB,EAAMkB,aAChBC,MAAOnB,EAAMuB,mBAGf,yBAAKtB,UAAU,aACb,kBAACuB,EAAA,EAAD,CAAQC,QAAQ,oBAAoBJ,KAAK,UAAzC,aAON,kBAAC,IAAMK,SAAP,MAGF,6BACG1B,EAAMU,KACL,oCACE,kBAAC,IAAD,CACET,UAAU,0BACVC,GAAE,WAAMF,EAAMU,KAAK3B,WAElBiB,EAAMU,KAAK3B,UAEd,kBAAC,IAAD,CAAMkB,UAAU,4BAA4BC,GAAG,kBAA/C,gBAGA,kBAAC,IAAD,CACEA,GAAG,IACHE,QA3ES,WD6BrBf,IAAMsC,OAAO,oBCzBX3B,EAAM4B,UAAU,OAwEN3B,UAAU,0BAHZ,WASF,kBAAC,IAAMyB,SAAP,KACE,kBAAC,IAAD,CAAMzB,UAAU,4BAA4BC,GAAG,WAA/C,UAGA,kBAAC,IAAD,CAAMD,UAAU,uBAAuBC,GAAG,UAA1C,a,kCC1CG2B,EAhDO,SAAA7B,GACpB,IAAI8B,EAAuB,GA4C3B,OA3CgC,IAA5B9B,EAAMa,MAAMkB,KAAKC,SACnBF,EAAoB,iBAAa9B,EAAMa,MAAMkB,KAAKC,OAA9B,4BAElBhC,EAAMa,MAAMkB,KAAKC,OAAS,IAC5BF,EAAoB,iBAAa9B,EAAMa,MAAMkB,KAAKC,OAA9B,6BAGpB,kBAACC,EAAA,EAAD,CAAWhC,UAAU,iBACnB,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKC,IAAKpC,EAAMa,MAAMwB,SAAUC,MAAM,MAAMC,IAAKvC,EAAMa,MAAMG,QAE/D,kBAACmB,EAAA,EAAD,CAAKK,GAAI,EAAGvC,UAAU,wBACpB,kBAAC,IAAD,CACEC,GAAE,kBAAaF,EAAMa,MAAM4B,KAC3BC,IAAK1C,EAAMa,MAAM4B,IACjBxC,UAAU,uBAEV,4BAAKD,EAAMa,MAAMG,MACjB,yBAAKf,UAAU,QACb,4BACGD,EAAMa,MAAM8B,KAAKC,MAAM,EAAG,IAD7B,OACsC5C,EAAMa,MAAMgC,MAElD,4BAAK7C,EAAMa,MAAMiC,QAAQC,mBAG3B,4BACE,yBACEX,IAAKpC,EAAMa,MAAMmC,QAAQX,SACzBC,MAAM,KACNW,OAAO,KACPhD,UAAU,gBACVsC,IAAKvC,EAAMa,MAAMmC,QAAQjE,WAE1BiB,EAAMa,MAAMmC,QAAQjE,SARvB,kBASG+C,QCzCXoB,EAAmB,SAAAC,GACrB,IAAIC,EAAKC,OAAOF,EAAUG,WAAWC,SAAS,EAAG,KAC7CC,EAAKH,OAAOF,EAAUM,WAAa,GAAGF,SAAS,EAAG,KAClDG,EAAOP,EAAUQ,cAIrB,OAFAR,EAAS,UAAMO,EAAN,YAAcF,EAAd,YAAoBJ,IAK3BQ,EAAmB,SAACC,EAAkBC,GACxC,IAAKD,IAAqBC,EACxB,OAAO,EAGT,IAAIC,GAAgB,EAChBC,EAAY,IAAIC,KAAKJ,GACrBK,EAAeJ,EAAiBK,MAAM,KACtCC,EAAKC,OAAOH,EAAa,IACzBV,EAAKa,OAAOH,EAAa,IAQ7B,OAPAF,EAAUM,SAASF,EAAIZ,EAAI,GAGvBQ,EAFc,IAAIC,OAGpBF,GAAgB,GAGXA,GC+BMQ,EAtDE,SAAAvE,GACf,IAAIwE,EACF,6BACE,iDACA,wBAAIC,MAAM,iBAAV,qBACCzE,EAAM0E,MAAMC,UACVC,QAAO,SAAA/D,GACN,IAAIkD,EAAgBH,EAAiB/C,EAAM8B,KAAM9B,EAAMgC,MACvD,OACEhC,EAAMmC,QAAQP,MAAQzC,EAAMU,KAAK+B,KACjCsB,GACe,UAAflD,EAAMQ,QAGTwD,MAAK,SAASC,EAAGC,GAChB,OAAO,IAAId,KAAKa,EAAEnC,MAAQ,IAAIsB,KAAKc,EAAEpC,SAEtCqC,KAAI,SAAAnE,GACH,OAAO,kBAAC,EAAD,CAAeA,MAAOA,QAKjCoE,EACF,6BACE,wBAAIR,MAAM,iBAAV,iBACCzE,EAAM0E,MAAMC,UACVC,QAAO,SAAA/D,GACN,IAAIkD,EAAgBH,EAAiB/C,EAAM8B,KAAM9B,EAAMgC,MACvD,OACEhC,EAAMmC,QAAQP,MAAQzC,EAAM0E,MAAMhE,KAAK+B,MACtCsB,GACc,UAAflD,EAAMQ,QAGTwD,MAAK,SAASC,EAAGC,GAEhB,OAAO,IAAId,KAAKc,EAAEpC,MAAQ,IAAIsB,KAAKa,EAAEnC,SAEtCqC,KAAI,SAAAnE,GACH,OAAO,kBAAC,EAAD,CAAeA,MAAOA,QAKrC,OACE,6BACE,6BACG2D,EADH,IACcS,KCqBLC,E,2MApEbR,MAAQ,CACNS,YAAa,GACb9C,SAAU,I,EAGZ+C,iBAAmB,SAAAC,GACjBA,EAAEC,iBACF,IAAMH,EAAc,EAAKT,MAAMS,YAEJ,KAAvBA,EAAYI,QAIhBlG,IACGC,KAAK,cAAe,CACnB6F,cACA9D,KAAM,OACNsB,KAAM,IAAIsB,KACVjB,QAAS,EAAKhD,MAAMU,KAAK+B,IACzBxD,OAAQ,EAAKe,MAAMU,KAAKoC,QAAQ7D,OAChCC,YAAa,EAAKc,MAAMU,KAAKoC,QAAQ5D,YACrCC,KAAM,EAAKa,MAAMU,KAAKoC,QAAQ3D,KAC9BC,WAAY,EAAKY,MAAMU,KAAKoC,QAAQ1D,WACpCiD,SAAU,EAAKqC,MAAMrC,WAEtB9C,MAAK,SAAAiG,GAAG,OAAI/F,QAAQC,IAAI,iBAAkB8F,MAC1CjG,KAAK,EAAKS,MAAMyF,cAChBlG,KAAK,EAAKmG,SAAS,CAAEP,YAAa,MAClCvF,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,O,EAIlBqB,aAAe,SAAAmE,GACb,IAAMF,EAAcE,EAAEM,OAAOxE,MAC7B,EAAKuE,SAAS,CACZP,YAAaA,K,wEAKf,OACE,oCACE,yBAAKlF,UAAU,aACb,kBAACU,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CAAMC,SAAUgF,KAAKR,kBACnB,kBAACzE,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACL0E,GAAG,WACHC,KAAK,IACLhF,KAAK,cACLC,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMS,YAClB7D,YAAY,iDAGhB,yBAAKrB,UAAU,8BACb,kBAACuB,EAAA,EAAD,CAAQH,KAAK,UAAb,iB,GA3DM4E,aCJhBC,EAAW,SAACC,EAAcC,GAC9B,IAAIC,EAAK,MAAQF,EAAaG,IAAMF,EAAaE,KAC7CC,EAAK,OAASJ,EAAaK,IAAMJ,EAAaI,KAClD,OAAOC,KAAKC,KAAKL,EAAKA,EAAKE,EAAKA,GAAII,QAAQ,ICyG/BC,EAtGE,SAAA5G,GACf,IAAI6G,EACF,oCACG7G,EAAM2E,UACJC,QACC,SAAAtF,GAAI,MACY,SAAdA,EAAK+B,MACL6E,EAAS5G,EAAKwD,QAAQgE,YAAa9G,EAAMU,KAAKoC,QAAQgE,aACpD,KAELjC,MAAK,SAASC,EAAGC,GAChB,OAAO,IAAId,KAAKc,EAAEpC,MAAQ,IAAIsB,KAAKa,EAAEnC,SAEtCqC,KAAI,SAAA1F,GACH,IAcIyH,EAAgB,IAAI9C,KAAK3E,EAAKqD,MAC9BA,EAAOoE,EAAczD,UAErB0D,EAjBW,CACbC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,OAISb,EAActD,YAmB7B,OAFAhE,QAAQC,IAAI,sBAAuBJ,EAAK0D,QAAQjE,UAG9C,yBAAK2D,IAAKpD,EAAKmD,IAAKxC,UAAU,QAC5B,6BACE,kBAAC,IAAD,CACEC,GAAE,WAAMZ,EAAK0D,QAAQjE,UACrBkB,UAAU,wBAEV,yBACEmC,IAAK9C,EAAK0D,QAAQX,SAClBpC,UAAU,WACVqC,MAAM,KACNW,OAAO,KACPV,IAAKjD,EAAKP,WAEZ,0BAAMkB,UAAU,YAAhB,WAAgCX,EAAK0D,QAAQjE,YAE/C,0BAAMkB,UAAU,QAAhB,aAA8B0C,EAA9B,aAAuCqE,EAAvC,MAEC1H,EAAK0D,QAAQjE,WAAaiB,EAAMU,KAAK3B,SACpC,4BACEkB,UAAU,MACV4H,MAAM,MACNzH,QAAS,kBAtCFD,EAsCmBb,EAAKmD,SAlCvCpD,IACGsC,OADH,sBACyBxB,IACtBZ,MAAK,SAAAiG,GACJxF,EAAMyF,kBAEP7F,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,MAVD,IAAAM,IAwCP,uBAAGsE,MAAM,sBAGX,+BAIJ,2BACGnF,EAAK6F,YACHI,OACApB,MAAM,MACNa,KAAI,SAAC8C,EAAMC,GACV,OACE,0BAAMrF,IAAKqF,GACRD,EAED,uCAUtB,OAAO,6BAAMjB,IC1FAmB,E,iLATX,OACE,oCACE,kBAAC,EAAD,CAAStH,KAAMkF,KAAK5F,MAAMU,KAAM+E,aAAcG,KAAK5F,MAAMyF,eACzD,kBAAC,EAAD,CAAUA,aAAcG,KAAK5F,MAAMyF,aAAcd,UAAWiB,KAAK5F,MAAM2E,UAAWjE,KAAMkF,KAAK5F,MAAMU,Y,GALpFuF,aC2BRgC,EA3BK,SAAAjI,GAClBP,QAAQC,IAAI,cAAeM,EAAM2E,UAAU,IAE3C,IAAIuD,EACF,6BACE,sDACClI,EAAM2E,UACJC,QAAO,SAAA/D,GACN,IAAIkD,EAAgBH,EAAiB/C,EAAM8B,KAAM9B,EAAMgC,MACvD,OACEhC,EAAMkB,KAAKoG,SAASnI,EAAMU,KAAK+B,MAChB,UAAf5B,EAAMQ,MACN0C,KAGHc,MAAK,SAASC,EAAGC,GAChB,OAAO,IAAId,KAAKa,EAAEnC,MAAQ,IAAIsB,KAAKc,EAAEpC,SAEtCqC,KAAI,SAAAnE,GACH,OAAO,kBAAC,EAAD,CAAeA,MAAOA,QAKrC,OAAO,6BAAMqH,ICSAE,EA9BI,SAAApI,GACjB,IAAIqI,EACF,oCACE,6BACE,oEAECrI,EAAM0E,MAAMC,UACVC,QAAO,SAAA/D,GACN,IAAIkD,EAAgBH,EAAiB/C,EAAM8B,KAAM9B,EAAMgC,MACvD,OACEqD,EACElG,EAAMU,KAAKoC,QAAQgE,YACnBjG,EAAMiC,QAAQgE,aACZ,GACJ/C,GACe,UAAflD,EAAMQ,QAGTwD,MAAK,SAASC,EAAGC,GAChB,OAAO,IAAId,KAAKa,EAAEnC,MAAQ,IAAIsB,KAAKc,EAAEpC,SAEtCqC,KAAI,SAAAnE,GACH,OAAO,kBAAC,EAAD,CAAeA,MAAOA,SAKvC,OAAO,6BAAMwH,IC1BMC,E,iLACT,IAAD,OACHC,EAAc,GACdC,EAAiB,GACrB,GAAI5C,KAAK5F,MAAMyI,QAAQzG,OAAQ,CAO7B,IAAI0G,GANJH,EAAc,YAAI3C,KAAK5F,MAAMyI,SAAS7D,QAAO,SAAA+D,GAC3C,OACEA,EAAGC,OAAOnG,MAAQ,EAAKzC,MAAMU,KAAK+B,KAClCkG,EAAGE,SAASpG,MAAQ,EAAKzC,MAAMU,KAAK+B,SAGX8F,EAAYA,EAAYvG,OAAS,GAC1D0G,IAEGF,EADLE,EAAQE,OAAOnG,MAAQmD,KAAK5F,MAAMU,KAAK+B,IACjBiG,EAAQE,OAAOnG,IACfiG,EAAQG,SAASpG,KAO3C,OAHAhD,QAAQC,IAAI,OAAQ6I,GAEpB9I,QAAQC,IAAIkG,KAAK5F,MAAMU,MAErB,kBAACuB,EAAA,EAAD,CAAW9B,GAAG,QACZ,kBAAC+B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK2G,GAAI,EAAGtG,GAAI,EAAGvC,UAAU,eAC3B,yBAAK8I,MAAO,CAAEC,UAAW,WACvB,yBACE5G,IAAG,UAAKwD,KAAK5F,MAAMU,KAAK2B,UACxBE,IAAG,UAAKqD,KAAK5F,MAAMU,KAAK3B,UACxBuD,MAAM,QACNW,OAAO,QACPhD,UAAU,WACVE,GAAG,2BAGP,yBAAKqC,GAAI,GACP,6BACG+F,EAAYvG,OAAS,GACpB,kBAAC,IAAD,CACE9B,GAAE,qBAAgBsI,GAClBvI,UAAU,8BACVE,GAAG,oBAEH,uBAAGF,UAAU,oBALf,eAUJ,6BACE,kBAACuB,EAAA,EAAD,CACEvB,UAAU,gBACVE,GAAG,mBACHsB,QAAQ,QACRrB,QAAS,WACP,EAAKJ,MAAMK,gBAAgB,CACzBC,cAAc,EACdC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,MATtB,sBAiBF,6BACE,kBAACe,EAAA,EAAD,CACEvB,UAAU,gBACVE,GAAG,mBACHsB,QAAQ,QACRrB,QAAS,kBACP,EAAKJ,MAAMK,gBAAgB,CACzBC,cAAc,EACdC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,MATtB,0BAiBF,6BACE,kBAACe,EAAA,EAAD,CACEvB,UAAU,gBACVE,GAAG,mBACHsB,QAAQ,QACRrB,QAAS,WACP,EAAKJ,MAAMK,gBAAgB,CACzBC,cAAc,EACdC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,MATtB,wBAmBN,kBAAC0B,EAAA,EAAD,CAAK2G,GAAI,EAAG3I,GAAG,YACZyF,KAAK5F,MAAMM,cACV,kBAAC,EAAD,CACEI,KAAMkF,KAAK5F,MAAMU,KACjBiE,UAAWiB,KAAK5F,MAAM2E,UACtBc,aAAcG,KAAK5F,MAAMyF,eAG5BG,KAAK5F,MAAMO,cACV,kBAAC,EAAD,CAAUmE,MAAOkB,KAAK5F,MAAM0E,MAAOhE,KAAMkF,KAAK5F,MAAMU,OAErDkF,KAAK5F,MAAMQ,iBACV,kBAAC,EAAD,CACEE,KAAMkF,KAAK5F,MAAMU,KACjBiE,UAAWiB,KAAK5F,MAAM2E,YAGzBiB,KAAK5F,MAAMS,gBACV,kBAAC,EAAD,CAAYiE,MAAOkB,KAAK5F,MAAM0E,MAAOhE,KAAMkF,KAAK5F,MAAMU,c,GA3HlCuF,aCN5BgD,EAAe,SAAAC,GAEnB,OADAzJ,QAAQC,IAAI,oBAAqBwJ,GAC1B7J,IACJC,KAAK,cAAe4J,GACpB3J,MAAK,SAAAC,GAAQ,OAAIA,EAASG,QAC1BC,OAAM,SAAAC,GAAG,OAAIA,EAAIL,SAASG,SCJVwJ,E,iLAEjB,OACE,kBAAC,WAAD,KACE,yBAAK/G,IAAKwD,KAAK5F,MAAMqC,SAAUE,IAAI,GAAGD,MAAM,QAC5C,2BAAOjB,KAAK,OAAOJ,SAAU2E,KAAK5F,MAAMoJ,wB,GALVnD,aC4PvBoD,E,2MAvPb3E,MAAQ,CACNrD,KAAM,QACNL,KAAM,GACN/B,OAAQ,GACRC,YAAa,GACbC,KAAM,GACNC,WAAY,GACZuD,KAAM,GACNE,KAAM,GACNsC,YAAa,GACb9C,SACE,+FACFiH,aAAc,KACdC,aAAc,M,EAGhBnE,iBAAmB,SAAAC,GACjBA,EAAEC,iBAEF,IAAIrG,EAAS,EAAKyF,MAAMzF,OAAOsG,OAC3BpG,EAAO,EAAKuF,MAAMvF,KAAKoG,OACvBrG,EAAc,EAAKwF,MAAMxF,YAAYqG,OACzC,GAAKpG,GAASF,GAAWC,EAAzB,CANsB,MAsBlB,EAAKwF,MAPP1D,EAfoB,EAepBA,KAEA5B,EAjBoB,EAiBpBA,WACAuD,EAlBoB,EAkBpBA,KACAE,EAnBoB,EAmBpBA,KACAR,EApBoB,EAoBpBA,SACA8C,EArBoB,EAqBpBA,YAGF9F,IACGC,KAAK,cAAe,CACnB+B,KAAM,QACNL,OACA/B,SACAC,cACAC,OACAC,aACAuD,OACAE,OACAR,WACA8C,gBAED5F,MAAK,SAAAiG,GACJ,EAAKxF,MAAMe,QAAQyI,KAAnB,kBAAmChE,EAAI7F,KAAK8C,SAE7ClD,KAAK,EAAKS,MAAMyF,cAChB7F,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,WAnCd,EAAK6F,SAAS,CACZ6D,aACE,+E,EAqCRrI,aAAe,SAAAmE,GAAM,IAAD,EACMA,EAAEM,OAAlB3E,EADU,EACVA,KAAMG,EADI,EACJA,MACd,EAAKuE,SAAL,eAAiB1E,EAAOG,K,EAG1BiI,iBAAmB,SAAA/D,GACjB,IAEIoE,EAAapE,EAAEM,OAAO+D,MAAM,GAEhC,GAAKD,EAQL,GAAIA,EAAWE,KAZI,IAajB,EAAKjE,SAAS,CACZ4D,aAAc,0CACdjH,SACE,sGAKN,GApBoB,CAAC,aAAc,aAoBjBuH,QAAQH,EAAWpI,MAAQ,EAC3C,EAAKqE,SAAS,CACZ4D,aAAc,0CACdjH,SACE,qGAJN,CASA,IAAMwH,EAAa,IAAIC,SACvBD,EAAWE,OAAO,WAAY1E,EAAEM,OAAO+D,MAAM,IAI7C,EAAKhE,SAAS,CAAEsE,UAAU,EAAMV,aAAc,KAC9CL,EAAaY,GACVtK,MAAK,SAAAC,GACJ,EAAKkG,SACH,CACErD,SAAU7C,EAASyK,WACnBD,UAAU,IAEZ,kBAAMvK,QAAQC,IAAI,WAAYF,SAGjCI,OAAM,SAAAC,GACLJ,QAAQC,IAAI,mCAAoCG,WA1ClD,EAAK6F,SAAS,CACZrD,SACE,kG,wEA6CN,OACE,kBAACJ,EAAA,EAAD,CAAWhC,UAAU,kCACnB,wBAAIA,UAAU,QAAd,yCACA,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK2G,GAAI,EAAG7I,UAAU,4BACpB,kBAAC,EAAD,CACEoC,SAAUuD,KAAKlB,MAAMrC,SACrB+G,iBAAkBxD,KAAKwD,mBAEzB,uBAAG3E,MAAM,WAAWmB,KAAKlB,MAAM4E,eAGjC,kBAACnH,EAAA,EAAD,CAAK2G,GAAI,GACP,kBAACnI,EAAA,EAAD,CAAMC,SAAUgF,KAAKR,iBAAkBnF,UAAU,WAC/C,kBAACU,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,UACnB2F,KAAKlB,MAAM6E,cACV,uBAAG9E,MAAM,WAAWmB,KAAKlB,MAAM6E,cAEjC,kBAAC5I,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,OACLb,GAAG,OACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAM1D,KAClBoJ,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,UAApB,YACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,SACLb,GAAG,SACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMzF,OAClBmL,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,eAApB,SACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,cACLb,GAAG,cACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMxF,YAClBkL,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,OACLb,GAAG,OACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMvF,KAClBiL,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,cAApB,gBACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,SACLL,KAAK,aACLqJ,IAAI,IACJlK,GAAG,aACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMtF,WAClBgL,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,OACLb,GAAG,OACHkK,IAAKnH,EAAiB,IAAIe,MAC1BhD,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAM/B,KAClByH,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,OACLb,GAAG,OACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAM7B,KAClBuH,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,UACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,eAApB,iBACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACL0E,GAAG,WACHC,KAAK,IACLhF,KAAK,cACLb,GAAG,cACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMS,eAItB,kBAAC3D,EAAA,EAAD,CAAQvB,UAAU,SAASoB,KAAK,UAAhC,2B,GA7OS4E,aCmGRqE,G,kNApGb5F,MAAQ,CACN6F,UAAW,M,EAGbC,YAAc,WACZ,EAAK9E,SACH,CACE6E,WAAY,EAAK7F,MAAM6F,YAEzB,WACElL,IACGoL,IAAI,0BAA2B,CAC9B5J,MAAO,EAAKb,MAAMa,MAClB0J,UAAW,EAAK7F,MAAM6F,YAEvBhL,MAAK,WACJ,EAAKS,MAAM0K,iBACX,EAAK1K,MAAMyF,sB,EAMrBkF,kBAAoB,WACF,EAAK3K,MAAM4K,YAAYhG,QAAO,SAAA+D,GAC5C,OAAOA,EAAGlG,MAAQ,EAAKzC,MAAMU,KAAK+B,OAGxBT,OACV,EAAK0D,SAAS,CAAE6E,WAAW,IAE3B,EAAK7E,SAAS,CAAE6E,WAAW,K,wEAK7B,IAAIM,GAAS,EAKb,OAJIjF,KAAK5F,MAAMa,MAAMmC,QAAQP,MAAQmD,KAAK5F,MAAMU,KAAK+B,MACnDoI,GAAS,GAIT,oCACE,kBAAC5I,EAAA,EAAD,KACE,qCACS,OACP,kBAAC,IAAD,CACE/B,GAAE,WAAM0F,KAAK5F,MAAMa,MAAMmC,QAAQjE,UACjCkB,UAAU,wBAEV,yBACEA,UAAU,WACVqC,MAAM,KACNW,OAAO,KACPb,IAAKwD,KAAK5F,MAAMa,MAAMmC,QAAQX,SAC9BE,IAAKqD,KAAK5F,MAAMa,MAAMmC,QAAQjE,WAC7B,IACH,0BAAMkB,UAAU,YACb2F,KAAK5F,MAAMa,MAAMmC,QAAQjE,SAAU,QAIxC8L,GAAUjF,KAAK5F,MAAM+D,eACrB,kBAACvC,EAAA,EAAD,CACEC,QAAQ,QACRrB,QAASwF,KAAK4E,YACdrK,GAAE,UAAKyF,KAAKlB,MAAM6F,UAAY,gBAAkB,gBAE/C3E,KAAKlB,MAAM6F,UACV,uBAAGtK,UAAU,wBAEb,uBAAGA,UAAU,oBACZ,IACF2F,KAAKlB,MAAM6F,UAAY,SAAW,QAGvC,kBAACrI,EAAA,EAAD,KACG0D,KAAK5F,MAAM4K,YAAY5F,KAAI,SAAA2D,GAC1B,OACE,kBAACxG,EAAA,EAAD,CAAK2I,GAAI,EAAG7K,UAAU,QAAQyC,IAAKiG,EAAGlG,KACpC,kBAAC,IAAD,CAAMvC,GAAE,WAAMyI,EAAG5J,UAAYkB,UAAU,wBACrC,yBACEA,UAAU,WACVqC,MAAM,KACNW,OAAO,KACPb,IAAKuG,EAAGtG,SACRE,IAAKoG,EAAG5J,WACP,IACH,uBAAGkB,UAAU,YAAY0I,EAAG5J,sB,GAzFxBkH,cCkET8E,EAnEK,SAAA/K,GAClB,IAAIgL,EACF,oCACGhL,EAAMa,MAAMoK,SACVpG,MAAK,SAASC,EAAGC,GAChB,OAAO,IAAId,KAAKa,EAAEnC,MAAQ,IAAIsB,KAAKc,EAAEpC,SAEtCqC,KAAI,SAAAkG,GAUH,OACE,yBAAKxI,IAAKwI,EAAQzI,IAAKxC,UAAU,eAC/B,6BACE,kBAAC,IAAD,CACEC,GAAE,WAAMgL,EAAQC,OAAOpM,UACvBkB,UAAU,wBAEV,yBACEmC,IAAK8I,EAAQC,OAAO9I,SACpBpC,UAAU,WACVqC,MAAM,KACNW,OAAO,KACPV,IAAK2I,EAAQC,OAAOpM,WACnB,IACH,0BAAMkB,UAAU,YAAYiL,EAAQC,OAAOpM,WAE5CmM,EAAQC,OAAOpM,WAAaiB,EAAMU,KAAK3B,SACtC,4BACEkB,UAAU,MACV4H,MAAM,MACNzH,QAAS,kBA7BCgL,EA6BmBF,EAAQzI,SA5B7CpD,IACGoL,IADH,wBACwBzK,EAAMa,MAAM4B,KAAO,CAAE2I,UAAWA,IACrD7L,MAAK,WACJS,EAAM0K,iBACN1K,EAAMyF,kBALQ,IAAA2F,IA+BV,uBAAG3G,MAAM,sBAGX,+BAGJ,2BACGyG,EAAQG,QACN9F,OACApB,MAAM,MACNa,KAAI,SAAC8C,EAAMC,GACV,OACE,0BAAMrF,IAAKqF,GACRD,EAED,uCAWtB,OAAO9H,EAAMa,MAAQ,6BAAMmK,GAAqB,+BCLnCM,E,2MA3Db5G,MAAQ,CACN2G,QAAS,I,EAGXnK,aAAe,SAAAmE,GACb,IAAMgG,EAAUhG,EAAEM,OAAOxE,MACzB,EAAKuE,SAAS,CACZ2F,QAASA,K,EAIbjG,iBAAmB,SAAAC,GACjBA,EAAEC,iBACF,IAAM+F,EAAU,EAAK3G,MAAM2G,QAAQ9F,OAE9B8F,GAILhM,IACGC,KADH,wBACyB,EAAKU,MAAMuL,SAAW,CAC3CF,UACA1I,KAAM,IAAIsB,KACVkH,OAAQ,EAAKnL,MAAMU,KAAK+B,MAEzBlD,MAAK,SAAAiG,GAAG,OAAI/F,QAAQC,IAAI,iBAAkB8F,MAC1CjG,KAAK,EAAKS,MAAMyF,cAChBlG,KAAK,EAAKmG,SAAS,CAAE2F,QAAS,MAC9B9L,MAAK,WACJ,EAAKS,MAAM0K,iBACX,EAAK1K,MAAMyF,kBAEZ7F,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,O,wEAKhB,OACE,6BACE,kBAACc,EAAA,EAAD,CAAMC,SAAUgF,KAAKR,kBACnB,kBAACzE,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACL0E,GAAG,WACHC,KAAK,IACLhF,KAAK,UACLC,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAM2G,QAClB/J,YAAY,iCAGhB,kBAACE,EAAA,EAAD,CAAQH,KAAK,UAAb,c,GArDe4E,aCqBVuF,E,iLAnBX,OACE,oCACE,kBAAC,EAAD,CACE9K,KAAMkF,KAAK5F,MAAMU,KACjBG,MAAO+E,KAAK5F,MAAMa,MAClB6J,eAAgB9E,KAAK5F,MAAM0K,eAC3BjF,aAAcG,KAAK5F,MAAMyF,eAE3B,kBAAC,EAAD,CACE/E,KAAMkF,KAAK5F,MAAMU,KACjB6K,QAAS3F,KAAK5F,MAAMuL,QACpBb,eAAgB9E,KAAK5F,MAAM0K,eAC3BjF,aAAcG,KAAK5F,MAAMyF,oB,GAdZQ,aCicRwF,E,2MAvbb/G,MAAQ,CACNgH,UAAU,EACV7K,MAAO,GAEPG,KAAM,GACN8B,QAAS,KACTT,SAAU,GACVpD,OAAQ,GACRC,YAAa,GACbC,KAAM,GACNC,WAAY,GACZuD,KAAM,GACNE,KAAM,GACNsC,YAAa,GAEbwG,YAAa,GACbC,YAAa,GACbtC,aAAc,KACdC,aAAc,M,EAGhBmB,eAAiB,WAAO,IACdmB,EAAW,EAAK7L,MAAM8L,MAAtBD,OACRxM,IACG0M,IADH,sBACsBF,EAAO1L,KAC1BZ,MAAK,SAAAyM,GACJ,IAAI9H,EAAe8H,EAAgBrM,KAAKkD,KAAKsB,MAAM,KAC/CC,EAAKF,EAAa,GAClBV,EAAKU,EAAa,GAElB0H,EAAW,UAAMxH,EAAN,YAAYZ,EAAZ,OAEf,EAAKkC,SAAS,CACZ7E,MAAOmL,EAAgBrM,KACvBqB,KAAMgL,EAAgBrM,KAAKqB,KAC3B8B,QAASkJ,EAAgBrM,KAAKmD,QAC9B7D,OAAQ+M,EAAgBrM,KAAKmD,QAAQ7D,OACrCC,YAAa8M,EAAgBrM,KAAKmD,QAAQ5D,YAC1CC,KAAM6M,EAAgBrM,KAAKmD,QAAQ3D,KACnCC,WAAY4M,EAAgBrM,KAAKmD,QAAQ1D,WACzCuD,KAAMqJ,EAAgBrM,KAAKgD,KAC3BE,KAAMmJ,EAAgBrM,KAAKkD,KAC3BR,SAAU2J,EAAgBrM,KAAK0C,SAC/B8C,YAAa6G,EAAgBrM,KAAKwF,YAClC8G,cAAeD,EAAgBrM,KAAK0C,SACpCsJ,YAAazI,EAAiB,IAAIe,KAAK+H,EAAgBrM,KAAKgD,OAC5DiJ,mBAGHhM,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,O,EAQlBqM,YAAc,WACZ,IAAM/L,EAAK,EAAKuE,MAAM7D,MAAM4B,IAC5BpD,IACGsC,OADH,sBACyBxB,IACtBZ,MAAK,SAAAC,GACJ,EAAKQ,MAAMe,QAAQyI,KAAK,QAEzBjK,KAAK,EAAKS,MAAMyF,cAChB7F,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,O,EAIlBsM,WAAa,WACX,EAAKzG,SAAS,CACZgG,UAAW,EAAKhH,MAAMgH,Y,EAI1BxK,aAAe,SAAAmE,GACb,EAAKK,SAAL,eACGL,EAAEM,OAAO3E,KAAOqE,EAAEM,OAAOxE,S,EAI9BiI,iBAAmB,SAAA/D,GACjB,IAEIoE,EAAapE,EAAEM,OAAO+D,MAAM,GAEhC,GAAKD,EAOL,GAAIA,EAAWE,KAXI,IAYjB,EAAKjE,SAAS,CACZ4D,aAAc,0CACdjH,SAAU,EAAKqC,MAAMuH,qBAKzB,GAlBoB,CAAC,aAAc,aAkBjBrC,QAAQH,EAAWpI,MAAQ,EAC3C,EAAKqE,SAAS,CACZ4D,aAAc,0CACdjH,SAAU,EAAKqC,MAAMuH,oBAHzB,CAOA,IAAMpC,EAAa,IAAIC,SACvBD,EAAWE,OAAO,WAAY1E,EAAEM,OAAO+D,MAAM,IAC7C,EAAKhE,SAAS,CAAEsE,UAAU,EAAMV,aAAc,KAC9CL,EAAaY,GACVtK,MAAK,SAAAC,GACJ,EAAKkG,SACH,CACErD,SAAU7C,EAASyK,WACnBD,UAAU,IAEZ,kBAAMvK,QAAQC,IAAI,WAAYF,SAGjCI,OAAM,SAAAC,GACLJ,QAAQC,IAAI,mCAAoCG,WAnClD,EAAK6F,SAAS,CACZrD,SAAU,EAAKqC,MAAMuH,iB,EAsC3B7G,iBAAmB,SAAAC,GACjBA,EAAEC,iBAEF,IAAMnF,EAAK,EAAKH,MAAM8L,MAAMD,OAAO1L,GAC7BwC,EAAO,EAAK+B,MAAMiH,YAClB9I,EAAO,EAAK6B,MAAMkH,YAEpB3M,EAAS,EAAKyF,MAAMzF,OAAOsG,OAC3BrG,EAAc,EAAKwF,MAAMxF,YAAYqG,OACrCpG,EAAO,EAAKuF,MAAMvF,KAAKoG,OAC3B,GAAKtG,GAAWE,GAASD,EAAzB,CAVsB,MAwBlB,EAAKwF,MALP1D,EAnBoB,EAmBpBA,KAEA5B,EArBoB,EAqBpBA,WACAiD,EAtBoB,EAsBpBA,SACA8C,EAvBoB,EAuBpBA,YAGF9F,IACGoL,IADH,sBACsBtK,GAAM,CACxBa,OACA/B,SACAC,cACAC,OACAC,aACAiD,WACAM,OACAE,OACAsC,gBAED5F,MAAK,SAAAC,GAAa,IAAD,EAQZA,EAASG,KANXqB,EAFc,EAEdA,KACA8B,EAHc,EAGdA,QACAT,EAJc,EAIdA,SACAM,EALc,EAKdA,KACAE,EANc,EAMdA,KACAsC,EAPc,EAOdA,YAGF,EAAKO,SACH,CACEgG,UAAU,EACV7K,MAAOrB,EAASG,KAChBqB,OACA8B,UACAT,WACAM,OACAE,OACAsC,cACAoE,aAAc,GACdD,aAAc,KAEhB,WACE,EAAKoB,uBAKV9K,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,WAzDd,EAAK6F,SAAS,CACZ6D,aACE,+E,mFAtFN3D,KAAK8E,mB,+BAkJL,IAAK9E,KAAKlB,MAAM/B,KACd,OAAO,qCAET,GAA8B,UAA1BiD,KAAKlB,MAAM7D,MAAMQ,KACnB,OACE,yBAAKoD,MAAM,gBACT,iEACA,mGAON,IAAKmB,KAAKlB,MAAM7D,MAAO,OAAO,8BAE9B,IAAIsE,EAAcS,KAAKlB,MAAMS,YAEzBpB,EAAgBH,EAAiBgC,KAAKlB,MAAM/B,KAAMiD,KAAKlB,MAAM7B,MAE7DuJ,GAAY,EAQhB,OANErI,GACA6B,KAAKlB,MAAM7D,MAAMmC,QAAQP,MAAQmD,KAAK5F,MAAM0E,MAAMhE,KAAK+B,MAEvD2J,GAAY,IAGc,IAAxBxG,KAAKlB,MAAMgH,SAEX,oCACE,kBAACzJ,EAAA,EAAD,CAAWhC,UAAU,iBAClBmM,GACC,yBAAKnM,UAAU,mCACb,oCACE,kBAACuB,EAAA,EAAD,CACEC,QAAQ,eACRxB,UAAU,OACVG,QAASwF,KAAKuG,YAHhB,wBAOA,kBAAC3K,EAAA,EAAD,CAAQC,QAAQ,iBAAiBrB,QAASwF,KAAKsG,aAA/C,4BAMN,kBAAChK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBACEC,IAAKwD,KAAKlB,MAAMrC,SAChBC,MAAM,MACNC,IAAKqD,KAAKlB,MAAM1D,QAGpB,kBAACmB,EAAA,EAAD,CAAKK,GAAI,EAAGvC,UAAU,wBACpB,4BAAK2F,KAAKlB,MAAM1D,MAChB,wBAAIf,UAAU,QACX2F,KAAKlB,MAAM/B,KAAKC,MAAM,EAAG,IAD5B,OACqCgD,KAAKlB,MAAM7B,MAEhD,wBAAI5C,UAAU,QAAQ2F,KAAKlB,MAAM5B,QAAQC,kBACzC,2BACGoC,EACEI,OACApB,MAAM,MACNa,KAAI,SAAC8C,EAAMC,GACV,OACE,0BAAMrF,IAAKqF,GACRD,EAED,qCASd,kBAAC7F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CACEtB,MAAO+E,KAAKlB,MAAM7D,MAClB+J,YAAahF,KAAKlB,MAAM7D,MAAMkB,KAC9BrB,KAAMkF,KAAK5F,MAAMU,KACjB2L,SAAUzG,KAAK5F,MAAMqM,SACrB3B,eAAgB9E,KAAK8E,eACrBjF,aAAcG,KAAK5F,MAAMyF,aACzB1B,cAAeA,KAGnB,kBAAC5B,EAAA,EAAD,KACE,kBAAC,EAAD,CACEzB,KAAMkF,KAAK5F,MAAMU,KACjB6K,QAAS3F,KAAK5F,MAAM8L,MAAMD,OAAO1L,GACjCU,MAAO+E,KAAKlB,MAAM7D,MAClB6J,eAAgB9E,KAAK8E,eACrBjF,aAAcG,KAAK5F,MAAMyF,oBAUb,IAAxBG,KAAKlB,MAAMgH,SAEX,kBAACzJ,EAAA,EAAD,CAAWhC,UAAU,uCACnB,0CACA,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK2G,GAAI,EAAG7I,UAAU,4BACpB,kBAAC,EAAD,CACEoC,SAAUuD,KAAKlB,MAAMrC,SACrB+G,iBAAkBxD,KAAKwD,mBAEzB,uBAAG3E,MAAM,WAAWmB,KAAKlB,MAAM4E,eAGjC,kBAACnH,EAAA,EAAD,CAAK2G,GAAI,GACP,kBAACnI,EAAA,EAAD,CAAMC,SAAUgF,KAAKR,iBAAkBnF,UAAU,WAC/C,kBAACU,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,UACnB2F,KAAKlB,MAAM6E,cACV,uBAAG9E,MAAM,WAAWmB,KAAKlB,MAAM6E,cAEjC,kBAAC5I,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,OACLb,GAAG,OACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAM1D,KAClBoJ,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,UAApB,YACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,SACLb,GAAG,SACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMzF,OAClBmL,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,eAApB,SACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,cACLb,GAAG,cACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMxF,YAClBkL,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,OACLb,GAAG,OACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMvF,KAClBiL,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,cAApB,gBACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,SACLL,KAAK,aACLb,GAAG,aACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMtF,WAClBiL,IAAI,IACJD,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,cACLb,GAAG,OACHkK,IAAKnH,EAAiB,IAAIe,MAC1BhD,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMiH,YAClBvB,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,cACLb,GAAG,OACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMkH,YAClBxB,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,UACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,eAApB,iBACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACL0E,GAAG,WACHC,KAAK,IACLhF,KAAK,cACLb,GAAG,cACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMS,eAItB,kBAAC3D,EAAA,EAAD,CAAQvB,UAAU,SAASoB,KAAK,UAAhC,yBArHZ,M,GAvTuB4E,aCyIZqG,EAjJM,SAAAtM,GACnB,IAIIuM,EAFAC,EAAuBxM,EAAMU,KAAKoC,QAAQgE,YAI9CyF,EAAW,YAAIvM,EAAMqM,UAAUzH,QAAO,SAAA+D,GACpC,IAAI8D,EAAoB9D,EAAG7F,QAAQgE,YAEnC,OACEZ,EAASsG,EAAsBC,IAVhB,GAWf9D,EAAG5J,WAAaiB,EAAMU,KAAK3B,YAI/B,IAAI2N,EAAiB,YAAIH,GAAU1H,MAAK,SAACC,EAAGC,GAC1C,IAAI4H,EAAYzG,EAASsG,EAAsB1H,EAAEhC,QAAQgE,aACrD8F,EAAY1G,EAASsG,EAAsBzH,EAAEjC,QAAQgE,aACzD,OAAI6F,EAAYC,GACN,EAGND,EAAYC,EACP,EAGF,KAGLC,EAAa7M,EAAM8M,YAAYvH,OAEd,SAAjBvF,EAAM+M,QAAqBF,IAC7BH,EAAiBA,EAAe9H,QAAO,SAAA+D,GACrC,OACEA,EAAGqE,aAAapD,QAAQiD,IAAe,GACvClE,EAAGsE,WAAWrD,QAAQiD,IAAe,MAKtB,cAAjB7M,EAAM+M,QAA0BF,IAClCH,EAAiBA,EAAe9H,QAAO,SAAA+D,GACrC,OAAOA,EAAG5J,SAASmO,cAAc/E,SAAS0E,EAAWK,mBAIzD,IAAIC,EAAiB,GACjBC,EAAoB,GAEpBC,EAAgB,YAAIX,GAAgB1H,KAAI,SAAC2D,EAAIZ,GAC3CY,EAAGqE,eACLG,EAAiBxE,EAAGqE,aAAahI,KAAI,SAAA2D,GAEnC,OADAlJ,QAAQC,WAAWiJ,GAEjB,kBAACxG,EAAA,EAAD,CAAKO,IAAKqF,EAAO+C,GAAI,EAAGhC,GAAI,GAC1B,0BAAM7I,UAAU,mBACd,uBAAGA,UAAU,kBAEf,8BAAO0I,QAMXA,EAAGsE,aACLG,EAAoBzE,EAAGsE,WAAWjI,KAAI,SAAC2D,EAAIZ,GACzC,OACE,kBAAC5F,EAAA,EAAD,CAAKO,IAAKqF,EAAO+C,GAAI,EAAGhC,GAAI,GAC1B,0BAAM7I,UAAU,gBACd,uBAAGA,UAAU,mBAAsB,KAErC,8BAAO0I,QAKf,IAAI2E,EAAepH,EAASsG,EAAsB7D,EAAG7F,QAAQgE,aAE7D,OADArH,QAAQC,IAAI4N,GAEV,kBAACrL,EAAA,EAAD,CAAWS,IAAKqF,EAAO9H,UAAU,sBAC/B,yBAAKA,UAAU,aACb,kBAAC,IAAD,CACEC,GAAE,WAAMyI,EAAG5J,UACXgK,MAAO,CAAEwE,eAAgB,OAAQC,MAAO,UAExC,kBAACtL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK2I,GAAI,GAAIhC,GAAI,GACf,yBACE1G,IAAKuG,EAAGtG,SACRC,MAAM,MACNW,OAAO,MACPhD,UAAU,aAGZ,4BAAKqN,EAAL,OACA,uCAAa3E,EAAG8E,UAElB,kBAACtL,EAAA,EAAD,CAAK2I,GAAI,GAAIhC,GAAI,GACf,4BAAKH,EAAG5J,UACPqO,GACC,oCACE,wBAAInN,UAAU,OAAO8I,MAAO,CAAEyE,MAAO,SAArC,eAEM,IACN,kBAACtL,EAAA,EAAD,KAAMkL,IAGTD,GACC,oCACE,wBAAIlN,UAAU,OAAO8I,MAAO,CAAEyE,MAAO,SAArC,cACc,KAEd,kBAACtL,EAAA,EAAD,KAAMiL,YAWxB,OACE,oCACE,kBAAChL,EAAA,EAAD,KACE,wBAAIlC,UAAU,yBAAd,yCAIDoN,EAAcrL,OAAS,EACtB,yBAAK/B,UAAU,iBAAiBoN,GAEhC,oCACG,IACD,kBAAClL,EAAA,EAAD,CAAK2G,GAAI,CAAE4E,OAAQ,IACjB,wBAAIzN,UAAU,yBAAd,iBCnCG0N,EAxGM,SAAA3N,GACnB,IAAIuI,EAAc,GACdvI,EAAMyI,QAAQzG,SAChBuG,EAAc,YAAIvI,EAAMyI,SAAS7D,QAAO,SAAA+D,GACtC,OACEA,EAAGC,OAAOnG,MAAQzC,EAAMU,KAAK+B,KAAOkG,EAAGE,SAASpG,MAAQzC,EAAMU,KAAK+B,QAKzE,IAAImL,EAAU,GACVC,EAAY,GAEhB,YAAItF,GAAauF,SAAQ,SAAAnF,GAEnBA,EAAGC,OAAOnG,MAAQzC,EAAMU,KAAK+B,KAC/BmL,EAAQjF,EAAGC,OAAO7J,UAAY,CAC5BgP,WAAYpF,EAAGC,OAAOnG,IACtBmG,OAAQD,EAAGC,OAAOnG,IAClBuL,IAAKrF,EAAGF,QACRwF,UAAWtF,EAAGuF,UACd7L,SAAUsG,EAAGC,OAAOvG,UAEtBwL,EAAUrE,KAAKb,EAAGC,OAAO7J,YAGzB6O,EAAQjF,EAAGE,SAAS9J,UAAY,CAC9BgP,WAAYpF,EAAGE,SAASpG,IACxBmG,OAAQD,EAAGC,OAAOnG,IAClBuL,IAAKrF,EAAGF,QACRwF,UAAWtF,EAAGuF,UACd7L,SAAUsG,EAAGE,SAASxG,UAExBwL,EAAUrE,KAAKb,EAAGE,SAAS9J,cAI/B,IAAIoP,EAAW,CACbjH,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,EAAG,MACHC,GAAI,MACJC,GAAI,MACJwG,GAAI,OAGFC,EAAkB,IAAIC,IAAIT,EAAUU,WAEpCC,EAAaC,MAAMC,KAAKL,GA+C5B,OA7CAG,EAAaA,EAAWxJ,KAAI,SAAC2D,EAAIZ,GAC/B,IAAIhB,EAAgB,IAAI9C,KAAK2J,EAAQjF,GAAIsF,WACrCtL,EAAOoE,EAAczD,UACrBqL,EAAW5H,EAActD,WACzBuD,EAAQmH,EAASQ,EAAW,GAC5BC,EAAchB,EAAQjF,GAAIqF,IAAIpL,MAAM,EAAG,IAE3C,OACE,kBAAC,IAAD,CACEF,IAAKqF,EACL7H,GAAE,qBAAgB0N,EAAQjF,GAAIoF,YAC9BhF,MAAO,CAAEwE,eAAgB,OAAQC,MAAO,SACxCvN,UAAU,qBAEV,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,QACb,yBACEmC,IAAKwL,EAAQjF,GAAItG,SACjBE,IAAI,oBACJD,MAAM,KACNW,OAAO,KACPhD,UAAU,cAGd,6BACE,yBAAKA,UAAU,OACb,gCAAS0I,GAAa,IACtB,0BAAMI,MAAO,CAAEyE,MAAO,SAAtB,iBACa7K,EADb,YACqBqE,EADrB,aAIF,yBAAK/G,UAAU,OACZ2N,EAAQjF,GAAIC,SAAW5I,EAAMU,KAAK+B,IACjC,uCAEA,qCAEF,0BAAMsG,MAAO,CAAEyE,MAAO,SAAWoB,UAQtC,8BAAOJ,ICSDK,EA7GE,SAAA7O,GACf,IAAI+N,EAAa/N,EAAM8L,MAAMD,OAAOkC,WAEhCe,EAAc,GACd9O,EAAMyI,QAAQzG,SAChB8M,EAAc,YAAI9O,EAAMyI,SAAS8F,UAAU3J,QAAO,SAAA+D,GAChD,OACGA,EAAGC,OAAOnG,MAAQzC,EAAMU,KAAK+B,KAAOkG,EAAGE,SAASpG,MAAQsL,GACxDpF,EAAGE,SAASpG,MAAQzC,EAAMU,KAAK+B,KAAOkG,EAAGC,OAAOnG,MAAQsL,MAK/D,IAAIgB,EAAkB,YAAID,GAAa9J,KAAI,SAAC2D,EAAIZ,GAC9C,IAAIiH,EAAUrG,EAAGF,QACdlD,OACApB,MAAM,MACNa,KAAI,SAAC8C,EAAMC,GACV,OACE,0BAAMrF,IAAKqF,GACRD,EACD,iCAKR,OAAIa,EAAGC,OAAOnG,MAAQzC,EAAMU,KAAK+B,IAE7B,yBAAKC,IAAKqF,EAAO9H,UAAU,gCACzB,yBAAKA,UAAU,eACb,uBAAG8I,MAAO,CAAEyE,MAAO,YAAc7E,EAAGC,OAAO7J,UAC3C,2BAAIiQ,KAMV,yBAAKtM,IAAKqF,EAAO9H,UAAU,+BACzB,yBAAKA,UAAU,eACb,uBAAG8I,MAAO,CAAEyE,MAAO,YAAnB,OACA,2BAAIwB,QAMRC,EAAe,GACfC,EAAc,GAClB,GAAIJ,EAAY,GACVA,EAAY,GAAGlG,OAAO7J,WAAaiB,EAAMU,KAAK3B,UAChDkQ,EAAeH,EAAY,GAAGlG,OAAO7J,SACrCmQ,EAAcJ,EAAY,GAAGlG,OAAOvG,WAEpC4M,EAAeH,EAAY,GAAGjG,SAAS9J,SACvCmQ,EAAcJ,EAAY,GAAGjG,SAASxG,eAEnC,GAAIyM,EAAa,CACtB,IAAIK,EAAe,YAAInP,EAAMqM,UAAUzH,QAAO,SAAA+D,GAC5C,OAAOA,EAAGlG,MAAQsL,KAGpBkB,EAAeE,EAAa,GAAGpQ,SAC/BmQ,EAAcC,EAAa,GAAG9M,SAGhC,OACE,kBAAC,WAAD,KACE,yBAAKpC,UAAU,aACb,yBACEA,UAAU,oCACV8I,MAAO,CAAEqG,gBAAiB,YAE1B,yBAAKhN,IAAK8M,EAAa5M,MAAM,KAAKW,OAAO,KAAKhD,UAAU,aACxD,wBAAIA,UAAU,QACZ,kBAAC,IAAD,CACE8I,MAAO,CAAEwE,eAAgB,OAAQC,MAAO,SACxCtN,GAAE,WAAM+O,IAEPA,KAIP,yBAAKhP,UAAU,6BAA6B8O,GAC5C,6BACE,kBAACpO,EAAA,EAAD,CACEC,SAAU,SAAAyE,GACRrF,EAAMqP,sBAAsBhK,EAAG0I,KAGjC,kBAACpN,EAAA,EAAKmF,QAAN,CACEC,GAAG,WACHC,KAAK,IACLhF,KAAK,YACLC,SAAUjB,EAAMkB,aAChBC,MAAOnB,EAAMsP,UACbhO,YAAY,iBAEd,yBAAKrB,UAAU,8BACb,kBAACuB,EAAA,EAAD,CAAQvB,UAAU,OAAOoB,KAAK,SAASI,QAAQ,mBAA/C,cC9FO8N,E,8NAIjB,OACE,kBAACtN,EAAA,EAAD,CAAWuN,OAAO,GAChB,kBAACtN,EAAA,EAAD,KACE,yBAAKjC,UAAU,cACb,yCACA,yBAAKA,UAAU,qBACb,kBAAC,EAAD,CACES,KAAMkF,KAAK5F,MAAMU,KACjB+H,QAAS7C,KAAK5F,MAAMyI,YAK1B,kBAAC,EAAD,eACE/H,KAAMkF,KAAK5F,MAAMU,KACjB+H,QAAS7C,KAAK5F,MAAMyI,QACpB6G,UAAW1J,KAAK5F,MAAMsP,UACtBpO,aAAc0E,KAAK5F,MAAMkB,aACzBmO,sBAAuBzJ,KAAK5F,MAAMqP,sBAClChD,SAAUzG,KAAK5F,MAAMqM,UACjBzG,KAAK5F,c,GAxBkBiG,a,SC4KxBwJ,E,2MA/Kb/K,MAAQ,CACN3F,SAAU,GACVE,OAAQ,GACRC,YAAa,GACbC,KAAM,GACNC,WAAY,GACZJ,SAAU,GACV0Q,MAAO,I,EAGTxO,aAAe,SAAAL,GACb,EAAK6E,SAAL,eACG7E,EAAM8E,OAAO3E,KAAOH,EAAM8E,OAAOxE,S,EAItCwO,aAAe,SAAA9O,GACbA,EAAMyE,iBAEN,IAAIvG,EAAW,EAAK2F,MAAM3F,SAEtB6Q,EADQ,eACgBC,KAAK9Q,GAE7BC,EAAW,EAAK0F,MAAM1F,SAEtBC,EAAS,EAAKyF,MAAMzF,OAAOsG,OAC3BpG,EAAO,EAAKuF,MAAMvF,KAAKoG,OACvBrG,EAAc,EAAKwF,MAAMxF,YAAYqG,OAEpCqK,EAOD5Q,EAASgD,OAAS,EACpB,EAAK0D,SAAS,CACZgK,MAAO,kDAKNzQ,GAAWE,GAASD,EAQzBJ,EACEC,EACAC,EACAC,EACAC,EACAC,EACA,EAAKuF,MAAMtF,YACXG,MAAK,SAAAI,GACDA,EAAKqP,QAEP,EAAKtJ,SAAS,CACZgK,MAAO/P,EAAKqP,WAGd,EAAKhP,MAAM8P,QAAQnQ,GAEnB,EAAKK,MAAMe,QAAQyI,KAAK,SAvB1B,EAAK9D,SAAS,CACZgK,MACE,6EAhBJ,EAAKhK,SAAS,CACZgK,MAAO,0D,wEA0CX,OACE,yBAAKzP,UAAU,oBACb,yBAAKA,UAAU,UACb,kBAACgC,EAAA,EAAD,KACE,sCAEA,kBAACtB,EAAA,EAAD,CAAMC,SAAUgF,KAAK+J,cACnB,kBAACzN,EAAA,EAAD,KACE,kBAACvB,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,WACLb,GAAG,WACHgB,MAAOyE,KAAKlB,MAAM3F,SAClBkC,SAAU2E,KAAK1E,aACfkJ,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,WACLL,KAAK,WACLb,GAAG,WACHmB,YAAY,oBACZH,MAAOyE,KAAKlB,MAAM1F,SAClBiC,SAAU2E,KAAK1E,aACfkJ,UAAU,MAKhB,kBAAClI,EAAA,EAAD,KACE,kBAACvB,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,UACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,UAApB,YACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,SACLb,GAAG,SACHgB,MAAOyE,KAAKlB,MAAMzF,OAClBgC,SAAU2E,KAAK1E,aACfkJ,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,UACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,eAApB,SACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,cACLb,GAAG,cACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMxF,YAClBkL,UAAU,MAKhB,kBAAClI,EAAA,EAAD,KACE,kBAACvB,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,aAAahK,GAAG,eAApC,cACc,KAEd,kBAACQ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,SACLL,KAAK,aACLb,GAAG,aACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMtF,WAClBiL,IAAI,IACJD,UAAU,KAGd,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,OACLb,GAAG,OACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMvF,KAClBiL,UAAU,MAKfxE,KAAKlB,MAAMgL,OACV,kBAACK,EAAA,EAAD,CAAOtO,QAAQ,UAAUmE,KAAKlB,MAAMgL,OAEtC,kBAAClO,EAAA,EAAD,CAAQC,QAAQ,SAASJ,KAAK,UAA9B,mB,GArKO4E,aCuEN+J,E,2MAtEbtL,MAAQ,CACN3F,SAAU,GACVC,SAAU,GACV0Q,MAAO,I,EAGTxO,aAAe,SAAAL,GACb,EAAK6E,SAAL,eACG7E,EAAM8E,OAAO3E,KAAOH,EAAM8E,OAAOxE,S,EAItCwO,aAAe,SAAA9O,GACbA,EAAMyE,iBAENxF,EAAM,EAAK4E,MAAM3F,SAAU,EAAK2F,MAAM1F,UAAUO,MAAK,SAAAI,GAC/CA,EAAKqP,QAEP,EAAKtJ,SAAS,CACZgK,MAAO/P,EAAKqP,WAKd,EAAKhP,MAAM8P,QAAQnQ,GAEnB,EAAKK,MAAMe,QAAQyI,KAAK,U,wEAM5B,OACE,yBAAKvJ,UAAU,oBACb,yBAAKA,UAAU,cACb,qCACA,kBAACU,EAAA,EAAD,CAAMC,SAAUgF,KAAK+J,cACnB,kBAAChP,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,WACLb,GAAG,WACHgB,MAAOyE,KAAKlB,MAAM3F,SAClBkC,SAAU2E,KAAK1E,gBAGnB,kBAACP,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,YAApB,cACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,WACLL,KAAK,WACLb,GAAG,WACHgB,MAAOyE,KAAKlB,MAAM1F,SAClBiC,SAAU2E,KAAK1E,gBAGlB0E,KAAKlB,MAAMgL,OACV,kBAACK,EAAA,EAAD,CAAOtO,QAAQ,UAAUmE,KAAKlB,MAAMgL,OAEtC,kBAAClO,EAAA,EAAD,CAAQC,QAAQ,SAASJ,KAAK,UAA9B,iB,GA7DQ4E,aCDCgK,E,iLACT,IAAD,OACP,OACE,oCACE,wBACEhQ,UAAU,sCACV8I,MAAO,CAAEyE,MAAO,SAFlB,WAIW,KACR5H,KAAK5F,MAAMkQ,WAAatK,KAAK5F,MAAM0E,MAAMyL,iBACxC,kBAAC3O,EAAA,EAAD,CACEpB,QAAS,kBACP,EAAKJ,MAAMoQ,WAAW,CACpBD,iBAAkB,EAAKnQ,MAAM0E,MAAMyL,mBAGvC1O,QAAQ,gBANV,WAWHmE,KAAK5F,MAAM0E,MAAMyL,iBAChB,kBAACxP,EAAA,EAAD,CAAMC,SAAUgF,KAAK5F,MAAMqQ,eACzB,kBAAC1P,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,QAAN,CACEC,GAAG,WACHC,KAAK,IACLhF,KAAK,UACLC,SAAU2E,KAAK5F,MAAMkB,aACrBC,MAAOyE,KAAK5F,MAAM0E,MAAM4L,WAG5B,yBAAKrQ,UAAU,8BACb,kBAACuB,EAAA,EAAD,CAAQH,KAAK,SAASI,QAAQ,kBAAkBxB,UAAU,QAA1D,OAGA,kBAACuB,EAAA,EAAD,CAAQpB,QAASwF,KAAK5F,MAAMuQ,OAAQ9O,QAAQ,kBAA5C,aAMJmE,KAAK5F,MAAM0E,MAAMyL,iBACjB,uBAAGlQ,UAAU,gBACV2F,KAAK5F,MAAM0E,MAAM4L,SAChB1K,KAAK5F,MAAM0E,MAAM4L,QACd/K,OACApB,MAAM,MACNa,KAAI,SAAC8C,EAAMC,GACV,OACE,0BAAMrF,IAAKqF,GACRD,EACD,uC,GApDe7B,aCAhBuK,E,iLAEjB,OACE,oCACE,yBAAK/L,MAAM,8BACT,yBAAKxE,UAAU,WAAWmC,IAAKwD,KAAK5F,MAAMqC,SAAUE,IAAI,KACvDqD,KAAK5F,MAAMyQ,cAAgB,0CAE7B7K,KAAK5F,MAAMkQ,UACV,0BAAMtP,SAAUgF,KAAK5F,MAAM0Q,kBACzB,2BACErP,KAAK,OACLlB,GAAG,YACHc,SAAU2E,KAAK5F,MAAMoJ,mBAEtBxD,KAAK5F,MAAMyQ,cACV,kBAACjP,EAAA,EAAD,CAAQH,KAAK,SAASI,QAAQ,gBAA9B,WAMLmE,KAAK5F,MAAMsJ,cACV,uBAAGP,MAAO,CAAEyE,MAAO,QAAU5H,KAAK5F,MAAMsJ,mB,GAvBVrD,aCAnB0K,G,iLACT,IAAD,OACHC,EAAW,qCA8Bf,OA3BIhL,KAAK5F,MAAMgN,eACb4D,EAAW,YAAIhL,KAAK5F,MAAMgN,cAAchI,KAAI,SAAC2D,EAAIZ,GAC/C,OACE,kBAAC,WAAD,CAAUrF,IAAKqF,GACb,kBAAC7F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BACG,IACD,0BAAMlC,UAAU,mBACd,uBAAGA,UAAU,kBAEf,8BAAO0I,KAGV,EAAK3I,MAAM6Q,sBACV,kBAAC1O,EAAA,EAAD,KACE,4BACE/B,QAAS,kBAAM,EAAKJ,MAAM8Q,cAAcnI,KAD1C,eAYZ,yBAAK1I,UAAU,WACb,wBAAIwE,MAAM,0BAAV,gBACgB,IACbmB,KAAK5F,MAAMkQ,WAAatK,KAAK5F,MAAM6Q,sBAClC,kBAACrP,EAAA,EAAD,CACEpB,QAAS,kBACP,EAAKJ,MAAMoQ,WAAW,CACpBS,sBAAuB,EAAK7Q,MAAM6Q,wBAGtCpP,QAAQ,gBANV,mBAaJ,wBAAIsH,MAAO,CAAEgI,cAAe,SAAWH,GAEtChL,KAAK5F,MAAM6Q,sBACV,kBAAClQ,EAAA,EAAD,CAAMC,SAAUgF,KAAK5F,MAAMgR,0BACzB,kBAACrQ,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,QAAN,CACE3F,GAAG,aACHkB,KAAK,OACLL,KAAK,eACLC,SAAU2E,KAAK5F,MAAMkB,aACrBC,MAAOyE,KAAK5F,MAAMiR,gBAGtB,yBAAKhR,UAAU,yBACb,kBAACuB,EAAA,EAAD,CAAQH,KAAK,SAASI,QAAQ,kBAAkBxB,UAAU,QAA1D,OAGA,kBAACuB,EAAA,EAAD,CACEpB,QAAS,kBACP,EAAKJ,MAAMoQ,WAAW,CACpBS,sBAAuB,EAAK7Q,MAAM6Q,wBAGtCpP,QAAQ,gBANV,e,GAnE4BwE,aCgF3BiL,GAhFI,SAAAlR,GACjB,IAAImR,EAAQ,qCA2BZ,OA1BInR,EAAMiN,aACRkE,EAAQ,YAAInR,EAAMiN,YAAYjI,KAAI,SAAC2D,EAAIZ,GACrC,OACE,kBAAC,WAAD,CAAUrF,IAAKqF,GACb,kBAAC7F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BACE,0BAAMlC,UAAU,gBACd,uBAAGA,UAAU,mBAAsB,KAC7B,IACR,8BAAO0I,KAGV3I,EAAMoR,oBACL,kBAACjP,EAAA,EAAD,KACE,4BAAQ/B,QAAS,kBAAMJ,EAAMqR,YAAY1I,KAAzC,eAYZ,yBAAK1I,UAAU,WACb,wBAAIwE,MAAM,0BAAV,gBACgB,IACbzE,EAAMkQ,WAAalQ,EAAMoR,oBACxB,kBAAC5P,EAAA,EAAD,CACEpB,QAAS,kBACPJ,EAAMoQ,WAAW,CACfgB,oBAAqBpR,EAAMoR,sBAG/B3P,QAAQ,gBANV,mBAaJ,wBAAIsH,MAAO,CAAEgI,cAAe,SAAWI,GAEtCnR,EAAMoR,oBACL,kBAACzQ,EAAA,EAAD,CAAMC,SAAUZ,EAAMsR,wBACpB,kBAAC3Q,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,aACLb,GAAG,cACHc,SAAUjB,EAAMkB,aAChBC,MAAOnB,EAAMuR,cAGjB,yBAAKtR,UAAU,yBACb,kBAACuB,EAAA,EAAD,CAAQH,KAAK,SAASI,QAAQ,kBAAkBxB,UAAU,QAA1D,OAGA,kBAACuB,EAAA,EAAD,CACEpB,QAAS,kBACPJ,EAAMoQ,WAAW,CACfgB,oBAAqBpR,EAAMoR,sBAG/B3P,QAAQ,gBANV,Y,oBCVG+P,GApDO,SAAAxR,GAiDpB,OAhDoB,YAAIA,EAAMyR,WAAWzM,KAAI,SAAC2D,EAAIZ,GAChD,IAAIsD,EAAU1C,EAAG0C,QAAQlH,MAAM,MAAMa,KAAI,SAAS8C,EAAMpF,GACtD,OACE,0BAAMA,IAAKA,GACRoF,EACD,iCAKF4J,EAAQ,SAASC,OAAOhJ,EAAGiJ,QAE/B,OACE,kBAAC,WAAD,CAAUlP,IAAKqF,GACb,kBAAC7F,EAAA,EAAD,CAAKjC,UAAU,QACb,kBAACkC,EAAA,EAAD,CAAKlC,UAAU,OAAO6K,GAAI,EAAG+G,GAAI,GAC9BlJ,EAAGwC,OAAO9I,UACT,yBACEpC,UAAU,gBACVmC,IAAKuG,EAAGwC,OAAO9I,SACfE,IAAI,eACJD,MAAM,KACNW,OAAO,QAIb,kBAACd,EAAA,EAAD,KACGwG,EAAGwC,OAAOpM,SACT,kBAAC,IAAD,CACEgK,MAAO,CAAEwE,eAAgB,OAAQC,MAAO,SACxCtN,GAAE,WAAMyI,EAAGwC,OAAOpM,WAElB,gCAAS4J,EAAGwC,OAAOpM,WAGrB,4BAAQgK,MAAO,CAAEyE,MAAO,OAAQsE,UAAW,WAA3C,WAIF,uBAAG7R,UAAU,OAAO8I,MAAO,CAAEyE,MAAO,UAAWuE,SAAU,KACtDL,GAEH,2BAAIrG,UC1CZ2G,GAAY,EAEVC,GAAgB,SAAAL,GACpBnS,QAAQC,IAAI,4BAA6BkS,GACzCI,GAAYJ,GAiJCM,GA9IG,SAAAlS,GAChB,OACE,oCACE,wBAAIC,UAAU,6BAAd,YACY,KACRD,EAAMkQ,WAAalQ,EAAMmS,mBAAqBnS,EAAMU,MACpD,kBAACc,EAAA,EAAD,CACEpB,QAAS,kBACPJ,EAAMoQ,WAAW,CACf+B,mBAAoBnS,EAAMmS,qBAG9B1Q,QAAQ,gBANV,8BAYJ,kBAACQ,EAAA,EAAD,KACGjC,EAAMmS,oBAAsBnS,EAAMkQ,UACjC,kBAAC,WAAD,KACGlQ,EAAMoS,qBACL,kBAACrC,EAAA,EAAD,CAAOtO,QAAQ,WAAf,gBACgBzB,EAAMqS,cACpB,6BAFF,6CAODrS,EAAMsS,oBACL,kBAACvC,EAAA,EAAD,CAAOtO,QAAQ,WAAf,gCAGF,kBAACS,EAAA,EAAD,CAAKjC,UAAU,QACb,kBAACkC,EAAA,EAAD,CAAKlC,UAAU,OAAO6K,GAAI,EAAG+G,GAAI,GAC/B,yBACE5R,UAAU,gBACVmC,IAAKpC,EAAMU,KAAK2B,SAChBE,IAAI,eACJD,MAAM,KACNW,OAAO,QAGX,kBAACd,EAAA,EAAD,KACE,kBAACxB,EAAA,EAAD,KAEGX,EAAMuS,oBACL,kBAACxC,EAAA,EAAD,CAAOtO,QAAQ,UAAf,cAEE,6BAFF,kDAIE,6BAJF,qDAME,6BAEA,kBAACD,EAAA,EAAD,CACEpB,QAAS,kBAAMJ,EAAMwS,aAAaR,KAClCvQ,QAAQ,kBACRxB,UAAU,QAHZ,WAOA,kBAACuB,EAAA,EAAD,CACEpB,QAAS,kBACPJ,EAAMoQ,WAAW,CAAEmC,oBAAoB,KAEzC9Q,QAAQ,iBACRxB,UAAU,aALZ,WAYJ,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK2G,GAAI,GACP,kBAACnI,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKuJ,MAAN,wBACkB,gCAASlK,EAAMyS,cAAuB,IADxD,gBAIA,kBAAC9R,EAAA,EAAKmF,QAAN,CACEzE,KAAK,SACLL,KAAK,cACLM,YAAY,iBACZL,SAAUjB,EAAM0S,mBAChBvR,MAAOnB,EAAM2S,gBAInB,kBAACxQ,EAAA,EAAD,CAAK2G,GAAI,IACT,kBAAC3G,EAAA,EAAD,CAAK2G,GAAI,GACP,kBAACnI,EAAA,EAAKuJ,MAAN,iBACA,kBAAC,KAAD,CACE/I,MAAOnB,EAAM4R,OACbgB,MAAO,EAEP3R,SAAUgR,GACVtI,KAAM,GACNkJ,MAAM,EACNC,OAAQ,cAId,kBAACnS,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,QAAN,CACEC,GAAG,WACHC,KAAK,IACLhF,KAAK,iBACLC,SAAUjB,EAAM+S,gBAChB5R,MAAOnB,EAAMgT,eACb1R,YAAY,gCAGdtB,EAAMuS,oBACN,yBAAKtS,UAAU,8BACb,kBAACuB,EAAA,EAAD,CACEpB,QAAS,kBAAMJ,EAAMiT,YAAYjB,KACjCvQ,QAAQ,mBAFV,OAMA,kBAACD,EAAA,EAAD,CACEpB,QAASJ,EAAMkT,sBACfzR,QAAQ,iBACRxB,UAAU,QAHZ,eAcd,kBAAC,GAAD,CAAewR,UAAWzR,EAAMyR,eCoiBzB0B,ICrrB2BlN,Y,2MDUxCvB,MAAQ,CACNjC,IAAK,KACL1D,SAAU,GACV+D,QAAS,GACT7D,OAAQ,GACRC,YAAa,GACbC,KAAM,GACNC,WAAY,GACZ6N,WAAY,GACZD,aAAc,GACd3K,SAAU,GACViO,QAAS,GACTmB,UAAW,GACXhE,QAAS,GACT5M,MAAO,GACPuS,UAAW,GACXjD,iBAAiB,EAEjBkD,iBAAiB,EAEjBxC,sBAAsB,EACtBO,oBAAoB,EACpBe,mBAAmB,EACnBI,oBAAoB,EACpBtB,aAAc,GACdM,WAAY,GACZyB,eAAgB,GAChBL,YAAa,GACbN,cAAe,EAAKrS,MAAMU,KAAK+M,QAC/BmE,OAAQ,EACR0B,iBAAiB,EACjBhK,aAAc,KACd8I,qBAAqB,EACrBE,oBAAoB,EACpB7B,cAAc,EACd8C,kBAAmB,M,EAcrBC,QAAU,WACR,IAAMzU,EAAW,EAAKiB,MAAM8L,MAAMD,OAAO9M,SAEzCM,IACG0M,IADH,oBACoBhN,IACjBQ,MAAK,SAAAC,GACJ,EAAKkG,SAAS,CACZjD,IAAKjD,EAASG,KAAK8C,IACnB1D,SAAUS,EAASG,KAAKZ,SACxB+D,QAAStD,EAASG,KAAKmD,QACvB7D,OAAQO,EAASG,KAAKmD,QAAQ7D,OAC9BC,YAAaM,EAASG,KAAKmD,QAAQ5D,YACnCC,KAAMK,EAASG,KAAKmD,QAAQ3D,KAC5BC,WAAYI,EAASG,KAAKmD,QAAQ1D,WAClC6N,WAAYzN,EAASG,KAAKsN,WAC1BD,aAAcxN,EAASG,KAAKqN,aAC5B3K,SAAU7C,EAASG,KAAK0C,SACxBiO,QAAS9Q,EAASG,KAAK2Q,QACvBmB,UAAWjS,EAASG,KAAK8R,UAAUlD,UACnCd,QAASjO,EAASG,KAAK8N,QACvB5M,MAAOrB,EAASG,KAAKkB,MACrBuS,UAAW5T,EAASG,KAAKyT,eAI5BxT,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,GACgB,MAAxBA,EAAIL,SAASiU,QACf,EAAK/N,SAAS,CACZgK,MAAO7P,EAAIL,SAASG,KAAKqP,c,EAMnC9N,aAAe,SAAAL,GACb,EAAK6E,SAAL,eACG7E,EAAM8E,OAAO3E,KAAOH,EAAM8E,OAAOxE,S,EAItCuR,mBAAqB,SAAA7R,GAAU,IAAD,EAC5B,EAAK6E,UAAL,mBACG7E,EAAM8E,OAAO3E,KAAOH,EAAM8E,OAAOxE,OADpC,qCAEuB,GAFvB,K,EAMF4R,gBAAkB,SAAAlS,GAAU,IAAD,EACzB,EAAK6E,UAAL,mBACG7E,EAAM8E,OAAO3E,KAAOH,EAAM8E,OAAOxE,OADpC,oCAEsB,GAFtB,K,EAMFiP,WAAa,SAAAsD,GACX,EAAKhO,SAASgO,I,EAIhBC,cAAgB,SAAA9S,GACdA,EAAMyE,iBAEN,IAAIrG,EAAS,EAAKyF,MAAMzF,OAAOsG,OAC3BpG,EAAO,EAAKuF,MAAMvF,KAAKoG,OACvBrG,EAAc,EAAKwF,MAAMxF,YAAYqG,OACpCtG,GAAWE,GAASD,EAQzBG,IACGoL,IADH,4BAC4B,EAAK/F,MAAM3F,UAAY,CAC/CE,OAAQ,EAAKyF,MAAMzF,OACnBC,YAAa,EAAKwF,MAAMxF,YACxBC,KAAM,EAAKuF,MAAMvF,KACjBC,WAAY,EAAKsF,MAAMtF,aAExBG,MAAK,SAAAC,GACJ,EAAKkG,SACH,CACE5C,QAAStD,EAASG,KAAKmD,QACvB7D,OAAQO,EAASG,KAAKmD,QAAQ7D,OAC9BC,YAAaM,EAASG,KAAKmD,QAAQ5D,YACnCC,KAAMK,EAASG,KAAKmD,QAAQ3D,KAC5BC,WAAYI,EAASG,KAAKmD,QAAQ1D,WAClCmU,kBAAmB,KAErB,WAEE,EAAKnD,WAAW,CAAEiD,iBAAkB,EAAK3O,MAAM2O,wBAIpDzT,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,MA9B1B,EAAK6F,SAAS,CACZ6N,kBACE,8E,EAgCRlD,cAAgB,SAAAxP,GACdA,EAAMyE,iBACNjG,IACGoL,IADH,oBACoB,EAAK/F,MAAM3F,UAAY,CAAEuR,QAAS,EAAK5L,MAAM4L,UAC9D/Q,MAAK,SAAAC,GACJ,EAAKkG,SACH,CACE4K,QAAS9Q,EAASG,KAAK2Q,UAEzB,WAEE,EAAKF,WAAW,CAAED,iBAAkB,EAAKzL,MAAMyL,wBAIpDvQ,OAAM,SAAA8P,GAAK,OAAIjQ,QAAQC,IAAIgQ,O,EAGhCa,OAAS,WACP,EAAKiD,UACL,EAAKpD,WAAW,CAAED,iBAAkB,EAAKzL,MAAMyL,mB,EAIjD/G,iBAAmB,SAAA/D,GACjB,IAEIoE,EAAapE,EAAEM,OAAO+D,MAAM,GAEhC,IAAKD,EAKH,OAJA,EAAK+J,eACL,EAAK9N,SAAS,CACZ+K,cAAc,IAKlB,GAAIhH,EAAWE,KAZI,IAkBjB,OALA,EAAK6J,eACL,EAAK9N,SAAS,CACZ+K,cAAc,EACdnH,aAAc,0CAKlB,GApBoB,CAAC,aAAc,aAoBjBM,QAAQH,EAAWpI,MAAQ,EAM3C,OALA,EAAKmS,eACL,EAAK9N,SAAS,CACZ+K,cAAc,EACdnH,aAAc,0CAKlB,IAAMO,EAAa,IAAIC,SACvBD,EAAWE,OAAO,WAAY1E,EAAEM,OAAO+D,MAAM,IAI7C,EAAKhE,SAAS,CAAEsE,UAAU,EAAMV,aAAc,KAE9CL,EAAaY,GACVtK,MAAK,SAAAC,GACJ,EAAKkG,SAAS,CACZrD,SAAU7C,EAASyK,WACnBD,UAAU,EACVyG,cAAc,EACdnH,aAAc,QAGjB1J,OAAM,SAAAC,GACLJ,QAAQC,IAAI,mCAAoCG,O,EAKtD6Q,iBAAmB,SAAArL,GACjBA,EAAEC,iBAEE,EAAKZ,MAAMsF,UACf3K,IACGoL,IADH,gCACgC,EAAK/F,MAAM3F,UAAY,CACnDsD,SAAU,EAAKqC,MAAMrC,WAEtB9C,MAAK,SAAAC,GACJ,EAAKkG,SAAS,CACZrD,SAAU7C,EAASG,KAAK0C,SACxBiH,aAAc,sCACdmH,cAAc,OAGjB7Q,OAAM,SAAA8P,GAAK,OAAIjQ,QAAQC,IAAIgQ,O,EAIhCsB,yBAA2B,SAAA3L,GACzBA,EAAEC,iBAC8B,KAA5B,EAAKZ,MAAMuM,cACb5R,IACGoL,IADH,kCACkC,EAAK/F,MAAM3F,UAAY,CACrDiO,aAAc,EAAKtI,MAAMuM,eAE1B1R,MAAK,SAAAC,GACJ,EAAKkG,SACH,CACEsH,aAAcxN,EAASG,KAAKqN,aAC5BiE,aAAc,QAOnBrR,OAAM,SAAA8P,GAAK,OAAIjQ,QAAQC,IAAIgQ,O,EAIlCoB,cAAgB,SAAA8C,GACdvU,IACGoL,IADH,yCACyC,EAAK/F,MAAM3F,UAAY,CAC5DiO,aAAc4G,IAEfrU,MAAK,SAAAC,GACJ,EAAKkG,SACH,CACEsH,aAAcxN,EAASG,KAAKgR,eAE9B,WACE,EAAK6C,gBAIV5T,OAAM,SAAA8P,GAAK,OAAIjQ,QAAQC,IAAIgQ,O,EAIhC4B,uBAAyB,SAAAjM,GACvBA,EAAEC,iBACE,EAAKZ,MAAM6M,YACblS,IAEGoL,IAFH,gCAEgC,EAAK/F,MAAM3F,UAAY,CACnDkO,WAAY,EAAKvI,MAAM6M,aAExBhS,MAAK,SAAAC,GACJ,EAAKkG,SACH,CACEuH,WAAYzN,EAASG,KAAKsN,WAC1BsE,WAAY,QAOjB3R,OAAM,SAAA8P,GAAK,OAAIjQ,QAAQC,IAAIgQ,O,EAIlC2B,YAAc,SAAAuC,GACZvU,IACGoL,IADH,uCACuC,EAAK/F,MAAM3F,UAAY,CAC1DkO,WAAY2G,IAEbrU,MAAK,SAAAC,GACJ,EAAKkG,SACH,CACEuH,WAAYzN,EAASG,KAAKsN,aAE5B,WACE,EAAKuG,gBAIV5T,OAAM,SAAA8P,GAAK,OAAIjQ,QAAQC,IAAIgQ,O,EAIhCuD,YAAc,SAAAvB,GACZ,KAAI,EAAKhN,MAAMiO,YAAc,GAG7B,GACEkB,SAAS,EAAKnP,MAAM2N,cAAe,IACjCwB,SAAS,EAAKnP,MAAMiO,YAAa,IACnC,EAEA,EAAKjN,SAAS,CAAE0M,qBAAqB,SAGvC,GAAK,EAAK1N,MAAMsO,eAAhB,CAKAvT,QAAQC,IAAI,kCAAmCgS,GAE/CjS,QAAQC,IAAI,uBAAwBgS,GAEpC,EAAKtB,WAAW,CAAEmC,oBAAoB,IACtC,EAAK7M,SAAS,CAAEkM,OAAQF,IACxBjS,QAAQC,IAAI,gCAAiC,EAAKgF,MAAMkN,aAVtD,EAAKlM,SAAS,CAAE4M,oBAAoB,K,EAaxCY,sBAAwB,WACtB,EAAKM,UACL,EAAKpD,WAAW,CAAEmC,oBAAoB,EAAOJ,mBAAmB,IAChE,EAAKzM,SAAS,CACZkM,OAAQ,EACRoB,eAAgB,GAChBL,YAAa,GACbP,qBAAqB,EACrBE,oBAAoB,K,EAIxBwB,eAAiB,WACfzU,IACGC,KAAK,gBAAiB,CACrB+L,QAAS,EAAK3G,MAAMsO,eACpB7H,OAAQ,EAAKnL,MAAMU,KAAK+B,IACxBmP,OAAQ,EAAKlN,MAAMkN,OACnBa,aAAc,EAAK/N,MAAMjC,MAE1BlD,MAAK,SAAAC,GACJ,EAAKkG,SAAS,CACZsN,eAAgB,KAElB,EAAKQ,aAEN5T,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,O,EAG9BkU,yBAA2B,WACzB1U,IACGoL,IAAI,+BAAgC,CACnCU,OAAQ,EAAKnL,MAAMU,KAAK+B,IACxB4P,cACEwB,SAAS,EAAKnP,MAAM2N,cAAe,IACnCwB,SAAS,EAAKnP,MAAMiO,YAAa,MAEpCpT,MAAK,SAAAC,GACJ,EAAKkG,SAAS,CACZiN,YAAa,GACbf,OAAQ,IAEV,EAAK4B,aAEN5T,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,O,EAG9BmU,+BAAiC,WAC/B3U,IACGoL,IAAI,sCAAuC,CAC1C1L,SAAU,EAAK2F,MAAM3F,SACrB0O,QACEoG,SAAS,EAAKnP,MAAM+I,QAAS,IAC7BoG,SAAS,EAAKnP,MAAMiO,YAAa,MAEpCpT,MAAK,SAAAC,GACJ,EAAKgU,aAEN5T,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,O,EAG9B2S,aAAe,SAAAd,GAGb,EAAKhM,SAAS,CAAEkM,OAAQF,IACxBjS,QAAQC,IAAI,OAAQ,EAAKgF,MAAMkN,QAC/B,EAAKkC,iBACL,EAAKC,2BACL,EAAKC,iCACL,EAAKtO,SAAS,CACZ6M,oBAAoB,K,EAKxB0B,cAAgB,WACd5U,IACGsC,OADH,oBACuB,EAAK+C,MAAMjC,KAAO,CAAEtC,GAAI,EAAKuE,MAAMjC,MACvDlD,MAAK,SAAAiG,GACJ,EAAKxF,MAAMe,QAAQyI,KAAK,QAEzB5J,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,O,EAG9BqU,oBAAsB,WACpB,EAAKxO,SAAS,CAAE4N,iBAAkB,EAAK5O,MAAM4O,mB,EAG/Ca,oBAAsB,WACpB,EAAKzO,SAAS,CAAE2N,iBAAiB,K,kFAtZhBe,GACbA,IAAcxO,KAAK5F,OACrB4F,KAAK4N,Y,0CAKP5N,KAAK4N,Y,+BAkZG,IAAD,OAQHtD,GANF,0CACc,6BADd,mDAMa,GAKf,OAJItK,KAAKlB,MAAMjC,MAAQmD,KAAK5F,MAAMU,KAAK+B,MACrCyN,GAAW,GAGTtK,KAAKlB,MAAMgL,MAEX,6BACE,2BAAI9J,KAAKlB,MAAMgL,QAKnB,kBAACzN,EAAA,EAAD,CAAWhC,UAAU,mBASnB,kBAACiC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK2G,GAAI,EAAG7I,UAAU,OAAOE,GAAG,8BAC9B,kBAAC,EAAD,CACEO,KAAMkF,KAAK5F,MAAMU,KACjBwP,SAAUA,EACV7N,SAAUuD,KAAKlB,MAAMrC,SACrB+G,iBAAkBxD,KAAKwD,iBACvBsH,iBAAkB9K,KAAK8K,iBACvBpH,aAAc1D,KAAKlB,MAAM4E,aACzBmH,aAAc7K,KAAKlB,MAAM+L,eAG1BP,GACC,oCACE,wBAAInH,MAAO,CAAEyE,MAAO,QAAUvN,UAAU,QAAxC,WACW,MACP2F,KAAKlB,MAAM2O,iBACX,kBAAC7R,EAAA,EAAD,CACEpB,QAAS,kBACP,EAAKgQ,WAAW,CACdiD,iBAAkB,EAAK3O,MAAM2O,mBAGjC5R,QAAQ,gBANV,WAWHmE,KAAKlB,MAAM2O,iBACV,kBAAC1S,EAAA,EAAD,CAAMC,SAAUgF,KAAK+N,eACnB,kBAACzR,EAAA,EAAD,KACG0D,KAAKlB,MAAM6O,mBACV,uBAAG9O,MAAM,kBAAT,KACKmB,KAAKlB,MAAM6O,mBAIlB,kBAAC5S,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,UAApB,YACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,SACLb,GAAG,SACHgB,MAAOyE,KAAKlB,MAAMzF,OAClBgC,SAAU2E,KAAK1E,aACfkJ,UAAU,KAId,kBAACzJ,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,eAApB,SACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,cACLb,GAAG,cACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMxF,YAClBkL,UAAU,MAKhB,kBAAClI,EAAA,EAAD,KACE,kBAACvB,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,cAApB,cACc,KAEd,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,SACLL,KAAK,aACLb,GAAG,aACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMtF,WAClBgL,UAAU,EACVC,IAAI,OAGR,kBAAC1J,EAAA,EAAKkF,MAAN,CAAY5F,UAAU,SACpB,kBAACU,EAAA,EAAKuJ,MAAN,CAAYC,QAAQ,QAApB,UACA,kBAACxJ,EAAA,EAAKmF,QAAN,CACEzE,KAAK,OACLL,KAAK,OACLb,GAAG,OACHc,SAAU2E,KAAK1E,aACfC,MAAOyE,KAAKlB,MAAMvF,KAClBiL,UAAU,MAKfxE,KAAKlB,MAAMgL,OACV,kBAACK,EAAA,EAAD,CAAOtO,QAAQ,UAAUmE,KAAKlB,MAAMgL,OAGtC,kBAAClO,EAAA,EAAD,CACEC,QAAQ,kBACRJ,KAAK,SACLpB,UAAU,QAHZ,QAOA,kBAACuB,EAAA,EAAD,CACEC,QAAQ,iBACRrB,QAASwF,KAAKuO,qBAFhB,YASFvO,KAAKlB,MAAM2O,iBACX,oCACE,uBAAGpT,UAAU,QACV2F,KAAKlB,MAAM5B,QAAQC,kBAEtB,uBAAGgG,MAAO,CAAEyE,MAAO,OAAQsE,UAAW,WAAtC,qCAQR,wBAAI7R,UAAU,OAAO8I,MAAO,CAAEyE,MAAO,SAArC,UACU,IACR,0BAAMzE,MAAO,CAAEyE,MAAO,UAAY5H,KAAKlB,MAAM+I,WAIjD,kBAACtL,EAAA,EAAD,CAAK2G,GAAI,EAAG7I,UAAU,WACpB,4BACG2F,KAAKlB,MAAM3F,SACX,MACCmR,GAAYtK,KAAK5F,MAAMU,MACvB,kBAAC,IAAD,CACER,GAAE,qBAAgB0F,KAAKlB,MAAMjC,KAC7BxC,UAAU,wBAFZ,yBASJ,kBAAC,EAAD,CACEiQ,SAAUA,EACVxP,KAAMkF,KAAK5F,MAAMU,KACjBgE,MAAOkB,KAAKlB,MACZ0L,WAAYxK,KAAKwK,WACjBlP,aAAc0E,KAAK1E,aACnBqP,OAAQ3K,KAAK2K,OACbF,cAAezK,KAAKyK,iBAIxB,kBAAClO,EAAA,EAAD,CAAK2G,GAAI,GACP,kBAAC,GAAD,CACEoH,SAAUA,EACVjD,WAAYrH,KAAKlB,MAAMuI,WACvBmE,mBAAoBxL,KAAKlB,MAAM0M,mBAC/BhB,WAAYxK,KAAKwK,WACjBlP,aAAc0E,KAAK1E,aACnBqQ,WAAY3L,KAAKlB,MAAM6M,WACvBD,uBAAwB1L,KAAK0L,uBAC7BD,YAAazL,KAAKyL,cAEpB,uBAAGpR,UAAU,YACb,kBAAC,GAAD,CACEiQ,SAAUA,EACVlD,aAAcpH,KAAKlB,MAAMsI,aACzB6D,qBAAsBjL,KAAKlB,MAAMmM,qBACjCT,WAAYxK,KAAKwK,WACjBlP,aAAc0E,KAAK1E,aACnB+P,aAAcrL,KAAKlB,MAAMuM,aACzBD,yBAA0BpL,KAAKoL,yBAC/BF,cAAelL,KAAKkL,iBAGxB,kBAAC3O,EAAA,EAAD,CAAK2G,GAAI,GACP,kBAAC,GAAD,CACEoH,SAAUA,EACVxP,KAAMkF,KAAK5F,MAAMU,KACjB0P,WAAYxK,KAAKwK,WACjBlP,aAAc0E,KAAK1E,aACnBgS,sBAAuBtN,KAAKsN,sBAC5BD,YAAarN,KAAKqN,YAClBT,aAAc5M,KAAK4M,aACnBL,kBAAmBvM,KAAKlB,MAAMyN,kBAC9BI,mBAAoB3M,KAAKlB,MAAM6N,mBAC/BX,OAAQhM,KAAKlB,MAAMkN,OACnBoB,eAAgBpN,KAAKlB,MAAMsO,eAC3BL,YAAa/M,KAAKlB,MAAMiO,YACxBlB,UAAW7L,KAAKlB,MAAM+M,UACtBW,oBAAqBxM,KAAKlB,MAAM0N,oBAChCE,mBAAoB1M,KAAKlB,MAAM4N,mBAC/BD,cAAezM,KAAKlB,MAAM2N,cAC1BI,aAAc7M,KAAKlB,MAAM3F,SACzBgU,gBAAiBnN,KAAKmN,gBACtBL,mBAAoB9M,KAAK8M,4B,GAnqBVzM,cEVRoO,G,iLAEjB,OACE,gCACE,iDAEE,uBACEpU,UAAU,cACVqU,IAAI,sBACJC,KAAK,gDACL5O,OAAO,UAEP,uBAAG1F,UAAU,oBANf,qBAFF,WAWE,uBACEA,UAAU,cACVqU,IAAI,sBACJC,KAAK,0CACL5O,OAAO,UAEP,uBAAG1F,UAAU,oBANf,mBASF,mDAC0B,IACxB,uBACEA,UAAU,cACVqU,IAAI,sBACJC,KAAK,qCACL5O,OAAO,UAEP,uBAAG1F,UAAU,kBANf,4B,GA1B0BgG,a,oBCmB9BuO,GAAWC,8CAAYC,KACvBC,GAASC,KAAeJ,IA6TfK,G,2MA1TbnQ,MAAQ,CACNhE,KAAM,EAAKV,MAAMU,KACjB2L,SAAU,GAEV1H,UAAW,GAEXoI,OAAQ,GACRD,YAAa,GACb1L,iBAAkB,GAClBG,iBAAkB,GAClBjB,cAAc,EACdC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAEhBmI,OAAQ,EAAK5I,MAAMU,KAAK+B,IACxBoG,SAAU,GACVJ,QAAS,GAET6G,UAAW,GACXwF,eAAgB,I,EAGlBzU,gBAAkB,SAAA0U,GAChB,EAAKrP,SAASqP,GACd,EAAKC,aACL,EAAKvP,gB,EAGPqK,QAAU,SAAApP,GACR,EAAKgF,SAAS,CACZhF,KAAMA,K,EAUVQ,aAAe,SAAAmE,GACb,EAAKK,SAAL,eAAiBL,EAAEM,OAAO3E,KAAOqE,EAAEM,OAAOxE,S,EAiB5C6T,WAAa,WACX3V,IACG0M,IAAI,aACJxM,MAAK,SAAAC,GACJ,EAAKkG,SAAS,CACZ2G,SAAU7M,EAASG,OAErBF,QAAQC,IAAIF,MAEbI,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,O,EAIlB4F,aAAe,WACbpG,IACG0M,IAAI,wBACJxM,MAAK,SAAAC,GACJ,EAAKkG,SAAS,CACZf,UAAWnF,EAASG,UAGvBC,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,O,EAIlBoV,OAAS,WACP5V,IACG0M,IAAI,sBACJxM,MAAK,SAAAC,GACJ,EAAKkG,SACH,CACE+C,QAASjJ,EAASG,KAClB2P,UAAW,KAGb,kBAAM7P,QAAQC,IAAI,sBAAuB,EAAKgF,MAAM+D,eAGvD7I,OAAM,SAAAC,GACLJ,QAAQC,IAAIG,O,EAIlBwP,sBAAwB,SAAChK,EAAG6P,GAC1B7P,EAAEC,iBACG,EAAKZ,MAAM4K,WAGhBjQ,IACGC,KAAK,qBAAsB,CAC1BmJ,QAAS,EAAK/D,MAAM4K,UAEpBzG,SAAUqM,IAEX3V,MAAK,SAAAiG,GACJmP,GAAOQ,KAAK3P,EAAI7F,MAChB,EAAKsV,YAKNrV,OAAM,SAAAC,GAAG,OAAIJ,QAAQC,IAAIG,O,EAe9BiB,YAAc,SAACuE,EAAGtE,GAChBsE,EAAEC,iBACG,EAAKZ,MAAMtD,mBAGhB,EAAK4T,aACL,EAAKtP,SAAS,CACZoH,YAAa,EAAKpI,MAAMnD,iBACxBwL,OAAQ,EAAKrI,MAAMtD,mBAGjBL,IACFtB,QAAQC,IAAIqB,GACZA,EAAQyI,KAAK,qB,mFAzGI,IAAD,OAClB5D,KAAKoP,aACLpP,KAAKH,eACLG,KAAKqP,SAELN,GAAOS,GAAG,WAAW,SAAAzV,GACnBF,QAAQC,IAAI,+BAAgCC,GAI5C,EAAKsV,c,+BAmGC,IAAD,OAEP,OADAxV,QAAQC,IAAI,aAAckG,KAAKlB,MAAMhE,MAEnC,yBAAKT,UAAU,OACb,kBAAC,IAAD,CACEoV,OAAQ,SAAAC,GAEN,OADA7V,QAAQC,IAAI4V,GAEV,kBAAC,EAAD,CACE5U,KAAM,EAAKgE,MAAMhE,KACjBkB,UAAW,EAAKkO,QAChB/C,OAAQ,EAAKrI,MAAMqI,OACnBD,YAAa,EAAKpI,MAAMoI,YACxB1L,iBAAkB,EAAKsD,MAAMtD,iBAC7BG,iBAAkB,EAAKmD,MAAMnD,iBAC7BL,aAAc,EAAKA,aACnBJ,YAAa,EAAKA,YAClBkU,WAAY,EAAKA,WACjBjU,QAASuU,EAAYvU,QACrBV,gBAAiB,EAAKA,gBACtBC,aAAc,EAAKoE,MAAMpE,aACzBC,aAAc,EAAKmE,MAAMnE,aACzBC,gBAAiB,EAAKkE,MAAMlE,gBAC5BC,eAAgB,EAAKiE,MAAMjE,oBAMnC,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8U,OAAK,EACLC,KAAK,IACLH,OAAQ,SAAArV,GACgB,IAAD,EAArB,OAAI,EAAK0E,MAAMhE,KAEX,kBAAC,EAAD,iBACMV,GADN,GAEEU,KAAM,EAAKgE,MAAMhE,KACjB+E,aAAc,EAAKA,aACnBd,UAAW,EAAKD,MAAMC,UACtBD,MAAO,EAAKA,OALd,0BAMa,EAAKA,MAAMC,WANxB,6BAOgB,EAAKD,MAAMpE,cAP3B,6BAQgB,EAAKoE,MAAMnE,cAR3B,gCASmB,EAAKmE,MAAMlE,iBAT9B,+BAUkB,EAAKkE,MAAMjE,gBAV7B,gCAWmB,EAAKJ,iBAXxB,wBAYW,EAAKqE,MAAM+D,SAZtB,KAgBK,kBAAC,IAAD,CAAUvI,GAAG,eAK1B,kBAAC,IAAD,CACEqV,OAAK,EACLC,KAAK,iBACLH,OAAQ,SAAAC,GAAW,OACjB,kBAAC,EAAD,iBACMA,EADN,CAEE5U,KAAM,EAAKgE,MAAMhE,KACjB2L,SAAU,EAAK3H,MAAM2H,SACrBU,OAAQ,EAAKrI,MAAMqI,OACnBD,YAAa,EAAKpI,MAAMoI,kBAM9B,kBAAC,IAAD,CACEyI,OAAK,EACLC,KAAK,yBACLH,OAAQ,SAAArV,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEEqM,SAAU,EAAK3H,MAAM2H,SACrB3L,KAAM,EAAKgE,MAAMhE,KACjB+H,QAAS,EAAK/D,MAAM+D,QACpB6G,UAAW,EAAK5K,MAAM4K,UACtBpO,aAAc,EAAKA,aACnBmO,sBAAuB,EAAKA,sBAC5B4F,OAAQ,EAAKA,OACbQ,kBAAmB,EAAKA,wBAK9B,kBAAC,IAAD,CACEF,OAAK,EACLC,KAAK,UACLH,OAAQ,SAAArV,GAAK,OAAI,kBAAC,EAAD,iBAAYA,EAAZ,CAAmB8P,QAAS,EAAKA,cAEpD,kBAAC,IAAD,CACEyF,OAAK,EACLC,KAAK,SACLH,OAAQ,SAAArV,GAAK,OAAI,kBAAC,EAAD,iBAAWA,EAAX,CAAkB8P,QAAS,EAAKA,cAGnD,kBAAC,IAAD,CACEyF,OAAK,EACLC,KAAK,aACLH,OAAQ,SAAArV,GAAK,OACX,kBAAC,GAAD,iBACMA,EADN,CAEEU,KAAM,EAAKgE,MAAMhE,KACjB2L,SAAU,EAAK3H,MAAM2H,eAK3B,kBAAC,IAAD,CACEkJ,OAAK,EACLC,KAAK,iBACLH,OAAQ,SAAArV,GAAK,OACX,kBAAC,EAAD,iBAAcA,EAAd,CAAqByF,aAAc,EAAKA,mBAsB5C,kBAAC,IAAD,CACE8P,OAAK,EACLC,KAAK,cACLH,OAAQ,SAAArV,GAAK,OACX,kBAAC,EAAD,iBACMA,EADN,CAEE0E,MAAO,EAAKA,MACZhE,KAAM,EAAKgE,MAAMhE,KACjB2L,SAAU,EAAK3H,MAAM2H,SACrB5G,aAAc,EAAKA,oBAM3B,kBAAC,GAAD,W,GArTUiQ,IAAMzP,WCZJ0P,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShK,MACvB,2DCTNzM,IAAM0M,IAAI,sBAAsBxM,MAAK,SAAAC,GACnC,IAAMkB,EAAOlB,EAASG,KAEtBoW,IAASV,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAK3U,KAAMA,KAEbsV,SAASC,eAAe,YDiHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7W,MAAK,SAAA8W,GACjCA,EAAaC,iB","file":"static/js/main.50748abf.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst signup = (username, password, street, houseNumber, city, postalCode) => {\n  return axios\n    .post(\"/api/auth/signup\", {\n      username: username,\n      password: password,\n      street: street,\n      houseNumber: houseNumber,\n      city: city,\n      postalCode: postalCode\n    })\n    .then(response => {\n      console.log(response.data);\n\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", {\n      username: username,\n      password: password\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  axios.delete(\"/api/auth/logout\");\n};\n\nexport { signup, login, logout };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { logout } from \"../services/auth\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst Navbar = props => {\n  console.log(\"nav\", props);\n  const handleLogout = () => {\n    // destroys the session on the server\n    logout();\n    // updates the `user` state in App\n    props.clearUser(null);\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light nav-menu\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        <button\n          id=\"logo-button\"\n          onClick={() =>\n            props.handleChangeNav({\n              showNewsfeed: true,\n              showMyEvents: false,\n              showEventsGoing: false,\n              showNextEvents: false\n            })\n          }\n        >\n          KieZ\n        </button>\n      </Link>\n\n      {props.user ? (\n        <div className=\"searchRow\">\n          <Form\n            className=\"input-group btn-group\"\n            onSubmit={event => props.handleQuery(event, props.history)}\n          >\n            <select\n              className=\"custom-select\"\n              name=\"selectInputfield\"\n              onChange={props.handleChange}\n              value={props.selectInputfield}\n            >\n              <option value=\"\">Select Option</option>\n              <option value=\"Neighbors\">Find by Username</option>\n              <option value=\"Help\">Find by items</option>\n            </select>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"searchInputfield\"\n              placeholder=\"Find your Neighbors here\"\n              onChange={props.handleChange}\n              value={props.searchInputfield}\n            />\n\n            <div className=\"btn-group\">\n              <Button variant=\"outline-secondary\" type=\"submit\">\n                Search\n              </Button>\n            </div>\n          </Form>\n        </div>\n      ) : (\n        <React.Fragment />\n      )}\n\n      <div>\n        {props.user ? (\n          <>\n            <Link\n              className=\"btn btn-outline-success\"\n              to={`/${props.user.username}`}\n            >\n              {props.user.username}\n            </Link>\n            <Link className=\"btn btn-outline-info mx-3\" to=\"/events/create\">\n              Create Event\n            </Link>\n            <Link\n              to=\"/\"\n              onClick={handleLogout}\n              className=\"btn btn-outline-danger\"\n            >\n              Logout\n            </Link>\n          </>\n        ) : (\n          <React.Fragment>\n            <Link className=\"btn btn-outline-info mr-3\" to=\"/signup\">\n              Signup\n            </Link>\n            <Link className=\"btn btn-outline-info\" to=\"/login\">\n              Login\n            </Link>\n          </React.Fragment>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst EventOverview = props => {\n  let numOfPplGoingDisplay = \"\";\n  if (props.event.join.length === 1) {\n    numOfPplGoingDisplay = `\\u2022 ${props.event.join.length} person is going \\u2022`;\n  }\n  if (props.event.join.length > 1) {\n    numOfPplGoingDisplay = `\\u2022 ${props.event.join.length} people are going \\u2022`;\n  }\n  let eventOverview = (\n    <Container className=\"event-details\">\n      <Row>\n        <Col>\n          <img src={props.event.imageUrl} width=\"80%\" alt={props.event.name} />\n        </Col>\n        <Col sm={6} className=\"event-info-container\">\n          <Link\n            to={`/events/${props.event._id}`}\n            key={props.event._id}\n            className=\"event-overview-text\"\n          >\n            <h2>{props.event.name}</h2>\n            <div className=\"date\">\n              <h5>\n                {props.event.date.slice(0, 10)} at {props.event.time}\n              </h5>\n              <h5>{props.event.address.formattedAddress}</h5>\n            </div>\n\n            <h5>\n              <img\n                src={props.event.creater.imageUrl}\n                width=\"30\"\n                height=\"30\"\n                className=\"user-pic mx-1\"\n                alt={props.event.creater.username}\n              />\n              {props.event.creater.username} is hosting&nbsp;\n              {numOfPplGoingDisplay}\n            </h5>\n          </Link>\n        </Col>\n      </Row>\n    </Container>\n  );\n\n  return eventOverview;\n};\n\nexport default EventOverview;\n","let getFormattedDate = queryDate => {\n  let dd = String(queryDate.getDate()).padStart(2, \"0\");\n  let mm = String(queryDate.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  let yyyy = queryDate.getFullYear();\n\n  queryDate = `${yyyy}-${mm}-${dd}`;\n\n  return queryDate;\n};\n\nlet futureEventCheck = (dateFromDatabase, timeFromDatabase) => {\n  if (!dateFromDatabase || !timeFromDatabase) {\n    return false;\n  }\n\n  let isFutureEvent = false;\n  let eventDate = new Date(dateFromDatabase);\n  let eventTimeArr = timeFromDatabase.split(\":\");\n  let hh = Number(eventTimeArr[0]);\n  let mm = Number(eventTimeArr[1]);\n  eventDate.setHours(hh, mm, 0);\n  let currentDate = new Date();\n\n  if (eventDate > currentDate) {\n    isFutureEvent = true;\n  }\n\n  return isFutureEvent;\n};\n\nexport { getFormattedDate, futureEventCheck };\n","import React from \"react\";\nimport EventOverview from \"./EventOverview\";\nimport { futureEventCheck } from \"../../services/general-functions.js\";\n\nconst MyEvents = props => {\n  let myEvents = (\n    <div>\n      <h1>My Created Events</h1>\n      <h3 class=\"event-list-h3\">Upcoming Events: </h3>\n      {props.state.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            event.creater._id === props.user._id &&\n            isFutureEvent &&\n            event.type === \"event\"\n          );\n        })\n        .sort(function(a, b) {\n          return new Date(a.date) - new Date(b.date);\n        })\n        .map(event => {\n          return <EventOverview event={event} />;\n        })}\n    </div>\n  );\n\n  let pastEvents = (\n    <div>\n      <h3 class=\"event-list-h3\">Past Events: </h3>\n      {props.state.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            event.creater._id === props.state.user._id &&\n            !isFutureEvent &&\n            event.type === \"event\"\n          );\n        })\n        .sort(function(a, b) {\n          //console.log(\"DATE:\", new Date(a.date), new Date(a.date) - new Date(b.date));\n          return new Date(b.date) - new Date(a.date);\n        })\n        .map(event => {\n          return <EventOverview event={event} />;\n        })}\n    </div>\n  );\n\n  return (\n    <div>\n      <div>\n        {myEvents} {pastEvents}\n      </div>\n    </div>\n  );\n};\n\nexport default MyEvents;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\n\nclass AddPost extends Component {\n  state = {\n    description: \"\",\n    imageUrl: \"\" //for future, if we want to add image to post\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const description = this.state.description;\n\n    if (description.trim() === \"\") {\n      return;\n    }\n\n    axios\n      .post(\"/api/events\", {\n        description,\n        type: \"post\",\n        date: new Date(),\n        creater: this.props.user._id,\n        street: this.props.user.address.street,\n        houseNumber: this.props.user.address.houseNumber,\n        city: this.props.user.address.city,\n        postalCode: this.props.user.address.postalCode,\n        imageUrl: this.state.imageUrl\n      })\n      .then(res => console.log(\"RESPONSE POST:\", res))\n      .then(this.props.getAllEvents)\n      .then(this.setState({ description: \"\" }))\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChange = e => {\n    const description = e.target.value;\n    this.setState({\n      description: description\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"post-form\">\n          <Form>\n            <Form onSubmit={this.handleFormSubmit}>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  as=\"textarea\"\n                  rows=\"3\"\n                  name=\"description\"\n                  onChange={this.handleChange}\n                  value={this.state.description}\n                  placeholder=\"What do you want to tell to your neighbors?\"\n                />\n              </Form.Group>\n              <div className=\"d-flex justify-content-end\">\n                <Button type=\"submit\">Post</Button>\n              </div>\n            </Form>\n          </Form>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AddPost;\n","const distance = (coordinates1, coordinates2) => {\n  let dx = 71.5 * (coordinates1.lng - coordinates2.lng);\n  let dy = 111.3 * (coordinates1.lat - coordinates2.lat);\n  return Math.sqrt(dx * dx + dy * dy).toFixed(1);\n};\n\nexport { distance };\n\n// // Example:\n// distance(\n//   { lat: 52.5023865, lng: 13.4062956 },\n//   { lat: 52.503706, lng: 13.410135 }\n// );\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport { distance } from \"../../services/distance\";\n\nconst PostList = props => {\n  let postList = (\n    <>\n      {props.allEvents\n        .filter(\n          post =>\n            post.type === \"post\" &&\n            distance(post.address.coordinates, props.user.address.coordinates) <\n              3\n        )\n        .sort(function(a, b) {\n          return new Date(b.date) - new Date(a.date);\n        })\n        .map(post => {\n          let monthEng = {\n            0: \"Jan\",\n            1: \"Feb\",\n            2: \"Mar\",\n            3: \"Apr\",\n            4: \"May\",\n            5: \"Jun\",\n            6: \"Jul\",\n            7: \"Aug\",\n            8: \"Sep\",\n            9: \"Oct\",\n            10: \"Nov\",\n            11: \"Dec\"\n          };\n          let formattedDate = new Date(post.date);\n          let date = formattedDate.getDate();\n          let monthNum = formattedDate.getMonth();\n          let month = monthEng[monthNum];\n\n          let deletePost = id => {\n            {\n              /* const id= post._id; */\n            }\n            axios\n              .delete(`/api/events/${id}`)\n              .then(res => {\n                props.getAllEvents();\n              })\n              .catch(err => {\n                console.log(err);\n              });\n          };\n\n          console.log(\"CREATER Username?: \", post.creater.username);\n\n          return (\n            <div key={post._id} className=\"post\">\n              <div>\n                <Link\n                  to={`/${post.creater.username}`}\n                  className=\"text-decoration-none\"\n                >\n                  <img\n                    src={post.creater.imageUrl}\n                    className=\"user-pic\"\n                    width=\"34\"\n                    height=\"34\"\n                    alt={post.username}\n                  />\n                  <span className=\"username\">{` ${post.creater.username}`}</span>\n                </Link>\n                <span className=\"date\">{`   ${date}. ${month} `}</span>\n\n                {post.creater.username === props.user.username ? (\n                  <button\n                    className=\"bin\"\n                    widht=\"20%\"\n                    onClick={() => deletePost(post._id)}\n                  >\n                    <i class=\"fas fa-trash-alt\"></i>\n                  </button>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n\n              <p>\n                {post.description\n                  .trim()\n                  .split(\"\\n\")\n                  .map((item, index) => {\n                    return (\n                      <span key={index}>\n                        {item}\n\n                        <br />\n                      </span>\n                    );\n                  })}\n              </p>\n            </div>\n          );\n        })}\n    </>\n  );\n  return <div>{postList}</div>;\n};\n\nexport default PostList;\n","import React, { Component } from \"react\";\nimport AddPost from \"../posts/AddPost\";\nimport PostList from \"../posts/PostList\";\n\nclass Newsfeed extends Component {\n  render() {\n    return (\n      <>\n        <AddPost user={this.props.user} getAllEvents={this.props.getAllEvents}/>\n        <PostList getAllEvents={this.props.getAllEvents} allEvents={this.props.allEvents} user={this.props.user}/>\n      </>\n    );\n  }\n}\n\nexport default Newsfeed;\n","import React from \"react\";\nimport EventOverview from \"./EventOverview\";\nimport { futureEventCheck } from \"../../services/general-functions.js\";\n\nconst EventsGoing = props => {\n  console.log(\"ALL EVENTS:\", props.allEvents[0]);\n\n  let eventsGoing = (\n    <div>\n      <h1>Events I´m joining:</h1>\n      {props.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            event.join.includes(props.user._id) &&\n            event.type === \"event\" &&\n            isFutureEvent\n          );\n        })\n        .sort(function(a, b) {\n          return new Date(a.date) - new Date(b.date);\n        })\n        .map(event => {\n          return <EventOverview event={event} />;\n        })}\n    </div>\n  );\n\n  return <div>{eventsGoing}</div>;\n};\n\nexport default EventsGoing;\n","import React from \"react\";\nimport EventOverview from \"./EventOverview\";\nimport { distance } from \"../../services/distance\";\nimport { futureEventCheck } from \"../../services/general-functions.js\";\n\n//// Filter for distaance!!!!!!!!!!!!!!!!!!!!\n\nconst NextEvents = props => {\n  let nextEvents = (\n    <>\n      <div>\n        <h1>Upcoming events in your neighborhood</h1>\n\n        {props.state.allEvents\n          .filter(event => {\n            let isFutureEvent = futureEventCheck(event.date, event.time);\n            return (\n              distance(\n                props.user.address.coordinates,\n                event.address.coordinates\n              ) < 3 &&\n              isFutureEvent &&\n              event.type === \"event\"\n            );\n          })\n          .sort(function(a, b) {\n            return new Date(a.date) - new Date(b.date);\n          })\n          .map(event => {\n            return <EventOverview event={event} />;\n          })}\n      </div>\n    </>\n  );\n  return <div>{nextEvents}</div>;\n};\n\nexport default NextEvents;\n","import React, { Component } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MyEvents from \"./events/MyEvents\";\nimport Newsfeed from \"./posts/Newsfeed\";\nimport EventsGoing from \"./events/EventsGoing\";\nimport NextEvents from \"./events/NextEvents\";\n\nexport default class Home extends Component {\n  render() {\n    let userChatMsg = \"\";\n    let chatNeighborId = \"\";\n    if (this.props.chatMsg.length) {\n      userChatMsg = [...this.props.chatMsg].filter(el => {\n        return (\n          el.sender._id === this.props.user._id ||\n          el.reciever._id === this.props.user._id\n        );\n      });\n      let lastMsg = userChatMsg && userChatMsg[userChatMsg.length - 1];\n      if (lastMsg) {\n        lastMsg.sender._id !== this.props.user._id\n          ? (chatNeighborId = lastMsg.sender._id)\n          : (chatNeighborId = lastMsg.reciever._id);\n      }\n    }\n\n    console.log(\"Home\", userChatMsg);\n\n    console.log(this.props.user);\n    return (\n      <Container id=\"home\">\n        <Row>\n          <Col md={3} sm={5} className=\"home-navbar\">\n            <div style={{ textAlign: \"center\" }}>\n              <img\n                src={`${this.props.user.imageUrl}`}\n                alt={`${this.props.user.username}`}\n                width=\"150vw\"\n                height=\"150vw\"\n                className=\"user-pic\"\n                id=\"main-page-profile-pic\"\n              />\n            </div>\n            <div sm={5}>\n              <div>\n                {userChatMsg.length > 0 && (\n                  <Link\n                    to={`/messenger/${chatNeighborId}`}\n                    className=\"btn btn-light home-side-nav\"\n                    id=\"home-nav-button4\"\n                  >\n                    <i className=\"fas fa-envelope\"></i> Messenger\n                  </Link>\n                )}\n              </div>\n\n              <div>\n                <Button\n                  className=\"home-side-nav\"\n                  id=\"home-nav-button1\"\n                  variant=\"light\"\n                  onClick={() => {\n                    this.props.handleChangeNav({\n                      showNewsfeed: false,\n                      showMyEvents: true,\n                      showEventsGoing: false,\n                      showNextEvents: false\n                    });\n                  }}\n                >\n                  My created events\n                </Button>\n              </div>\n\n              <div>\n                <Button\n                  className=\"home-side-nav\"\n                  id=\"home-nav-button2\"\n                  variant=\"light\"\n                  onClick={() =>\n                    this.props.handleChangeNav({\n                      showNewsfeed: false,\n                      showMyEvents: false,\n                      showEventsGoing: true,\n                      showNextEvents: false\n                    })\n                  }\n                >\n                  Events I´m joining\n                </Button>\n              </div>\n\n              <div>\n                <Button\n                  className=\"home-side-nav\"\n                  id=\"home-nav-button3\"\n                  variant=\"light\"\n                  onClick={() => {\n                    this.props.handleChangeNav({\n                      showNewsfeed: false,\n                      showMyEvents: false,\n                      showEventsGoing: false,\n                      showNextEvents: true\n                    });\n                  }}\n                >\n                  All future events\n                </Button>\n              </div>\n            </div>\n          </Col>\n\n          <Col md={9} id=\"newsfeed\">\n            {this.props.showNewsfeed && (\n              <Newsfeed\n                user={this.props.user}\n                allEvents={this.props.allEvents}\n                getAllEvents={this.props.getAllEvents}\n              />\n            )}\n            {this.props.showMyEvents && (\n              <MyEvents state={this.props.state} user={this.props.user} />\n            )}\n            {this.props.showEventsGoing && (\n              <EventsGoing\n                user={this.props.user}\n                allEvents={this.props.allEvents}\n              />\n            )}\n            {this.props.showNextEvents && (\n              <NextEvents state={this.props.state} user={this.props.user} />\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import axios from \"axios\";\n\nconst handleUpload = theFile => {\n  console.log(\"file in service: \", theFile);\n  return axios\n    .post(\"/api/upload\", theFile)\n    .then(response => response.data)\n    .catch(err => err.response.data);\n};\n\nexport { handleUpload };\n","import React, { Component, Fragment } from \"react\";\n// import { Button } from \"react-bootstrap\";\n\nexport default class EventPic extends Component {\n  render() {\n    return (\n      <Fragment>\n        <img src={this.props.imageUrl} alt=\"\" width=\"300\" />\n        <input type=\"file\" onChange={this.props.handleFileUpload} />\n      </Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { handleUpload } from \"../../services/upload-img\";\nimport EventPic from \"./EventPic\";\nimport { getFormattedDate } from \"../../services/general-functions.js\";\n\nclass AddEvent extends Component {\n  state = {\n    type: \"event\",\n    name: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    date: \"\",\n    time: \"\",\n    description: \"\",\n    imageUrl:\n      \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\",\n    photoMessage: null,\n    inputWarning: null\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    let street = this.state.street.trim();\n    let city = this.state.city.trim();\n    let houseNumber = this.state.houseNumber.trim();\n    if (!city || !street || !houseNumber) {\n      this.setState({\n        inputWarning:\n          \"* The street, city and house number input should contain valid characters\"\n      });\n      return;\n    }\n\n    const {\n      name,\n\n      postalCode,\n      date,\n      time,\n      imageUrl,\n      description\n    } = this.state;\n\n    axios\n      .post(\"/api/events\", {\n        type: \"event\",\n        name,\n        street,\n        houseNumber,\n        city,\n        postalCode,\n        date,\n        time,\n        imageUrl,\n        description\n      })\n      .then(res => {\n        this.props.history.push(`/events/${res.data._id}`); // Redirect\n      })\n      .then(this.props.getAllEvents) // to update the eventslist -> so we have the new created event there\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFileUpload = e => {\n    let imgSizeLimit = 5000000; //5MB\n    let allowedFormat = [\"image/jpeg\", \"image/png\"];\n    let chosenFile = e.target.files[0];\n\n    if (!chosenFile) {\n      this.setState({\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\"\n      });\n      return;\n    }\n\n    if (chosenFile.size > imgSizeLimit) {\n      this.setState({\n        photoMessage: \"* Size of image should be less than 5MB\",\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\"\n      });\n      return;\n    }\n\n    if (allowedFormat.indexOf(chosenFile.type) < 0) {\n      this.setState({\n        photoMessage: \"* Format of image should be jpeg or png\",\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\"\n      });\n      return;\n    }\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n    this.setState({ uploadOn: true, photoMessage: \"\" });\n    handleUpload(uploadData)\n      .then(response => {\n        this.setState(\n          {\n            imageUrl: response.secure_url,\n            uploadOn: false\n          },\n          () => console.log(\"response\", response)\n        );\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  render() {\n    return (\n      <Container className=\"container event-form-container\">\n        <h1 className=\"mt-2\">Create an event for your neighborhood</h1>\n        <Row>\n          <Col md={4} className=\"event-form-img-container\">\n            <EventPic\n              imageUrl={this.state.imageUrl}\n              handleFileUpload={this.handleFileUpload}\n            />\n            <p class=\"warning\">{this.state.photoMessage}</p>\n          </Col>\n\n          <Col md={8}>\n            <Form onSubmit={this.handleFormSubmit} className=\"row m-5\">\n              <Form.Group className=\"col-12\">\n                {this.state.inputWarning && (\n                  <p class=\"warning\">{this.state.inputWarning}</p>\n                )}\n                <Form.Label htmlFor=\"name\">Name: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.handleChange}\n                  value={this.state.name}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-8\">\n                <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"street\"\n                  id=\"street\"\n                  onChange={this.handleChange}\n                  value={this.state.street}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-4\">\n                <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"houseNumber\"\n                  id=\"houseNumber\"\n                  onChange={this.handleChange}\n                  value={this.state.houseNumber}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-8\">\n                <Form.Label htmlFor=\"city\">City: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  id=\"city\"\n                  onChange={this.handleChange}\n                  value={this.state.city}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-4\">\n                <Form.Label htmlFor=\"postalCode\">Postalcode: </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"postalCode\"\n                  min=\"0\"\n                  id=\"postalCode\"\n                  onChange={this.handleChange}\n                  value={this.state.postalCode}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-6\">\n                <Form.Label htmlFor=\"date\">Date: </Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"date\"\n                  id=\"date\"\n                  min={getFormattedDate(new Date())}\n                  onChange={this.handleChange}\n                  value={this.state.date}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-6\">\n                <Form.Label htmlFor=\"time\">Time: </Form.Label>\n                <Form.Control\n                  type=\"time\"\n                  name=\"time\"\n                  id=\"time\"\n                  onChange={this.handleChange}\n                  value={this.state.time}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-12\">\n                <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  as=\"textarea\"\n                  rows=\"3\"\n                  name=\"description\"\n                  id=\"description\"\n                  onChange={this.handleChange}\n                  value={this.state.description}\n                />\n              </Form.Group>\n\n              <Button className=\"col-12\" type=\"submit\">\n                Create an Event\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AddEvent;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nclass Guestlist extends Component {\n  state = {\n    userJoins: null\n  };\n\n  handleClick = () => {\n    this.setState(\n      {\n        userJoins: !this.state.userJoins\n      },\n      () => {\n        axios\n          .put(\"/api/events/eventUpdate\", {\n            event: this.props.event,\n            userJoins: this.state.userJoins\n          })\n          .then(() => {\n            this.props.getSingleEvent();\n            this.props.getAllEvents();\n          });\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    const inEvent = this.props.joinedUsers.filter(el => {\n      return el._id === this.props.user._id;\n    });\n\n    if (inEvent.length) {\n      this.setState({ userJoins: true });\n    } else {\n      this.setState({ userJoins: false });\n    }\n  };\n\n  render() {\n    let isHost = false;\n    if (this.props.event.creater._id === this.props.user._id) {\n      isHost = true;\n    }\n\n    return (\n      <>\n        <Container>\n          <h4>\n            Host: {\"    \"}\n            <Link\n              to={`/${this.props.event.creater.username}`}\n              className=\"text-decoration-none\"\n            >\n              <img\n                className=\"user-pic\"\n                width=\"50\"\n                height=\"50\"\n                src={this.props.event.creater.imageUrl}\n                alt={this.props.event.creater.username}\n              />{\" \"}\n              <span className=\"username\">\n                {this.props.event.creater.username}{\" \"}\n              </span>\n            </Link>\n          </h4>\n          {!isHost && this.props.isFutureEvent && (\n            <Button\n              variant=\"light\"\n              onClick={this.handleClick}\n              id={`${this.state.userJoins ? \"joined-button\" : \"join-button\"}`}\n            >\n              {this.state.userJoins ? (\n                <i className=\"fas fa-user-friends\"></i>\n              ) : (\n                <i className=\"fas fa-user-alt\"></i>\n              )}{\" \"}\n              {this.state.userJoins ? \"Joined\" : \"Join\"}\n            </Button>\n          )}\n          <Row>\n            {this.props.joinedUsers.map(el => {\n              return (\n                <Col xs={2} className=\"guest\" key={el._id}>\n                  <Link to={`/${el.username}`} className=\"text-decoration-none\">\n                    <img\n                      className=\"user-pic\"\n                      width=\"50\"\n                      height=\"50\"\n                      src={el.imageUrl}\n                      alt={el.username}\n                    />{\" \"}\n                    <p className=\"username\">{el.username}</p>\n                  </Link>\n                </Col>\n              );\n            })}\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Guestlist;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst CommentList = props => {\n  let commentList = (\n    <>\n      {props.event.comments\n        .sort(function(a, b) {\n          return new Date(a.date) - new Date(b.date);\n        })\n        .map(comment => {\n          let deleteComment = commentId => {\n            axios\n              .put(`/api/comments/${props.event._id}`, { commentId: commentId })\n              .then(() => {\n                props.getSingleEvent();\n                props.getAllEvents();\n              });\n          };\n\n          return (\n            <div key={comment._id} className=\"comment-box\">\n              <div>\n                <Link\n                  to={`/${comment.author.username}`}\n                  className=\"text-decoration-none\"\n                >\n                  <img\n                    src={comment.author.imageUrl}\n                    className=\"user-pic\"\n                    width=\"40\"\n                    height=\"40\"\n                    alt={comment.author.username}\n                  />{\" \"}\n                  <span className=\"username\">{comment.author.username}</span>\n                </Link>\n                {comment.author.username === props.user.username ? (\n                  <button\n                    className=\"bin\"\n                    widht=\"20%\"\n                    onClick={() => deleteComment(comment._id)}\n                  >\n                    <i class=\"fas fa-trash-alt\"></i>\n                  </button>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              <p>\n                {comment.content\n                  .trim()\n                  .split(\"\\n\")\n                  .map((item, index) => {\n                    return (\n                      <span key={index}>\n                        {item}\n\n                        <br />\n                      </span>\n                    );\n                  })}\n              </p>\n            </div>\n          );\n        })}\n    </>\n  );\n\n  return props.event ? <div>{commentList}</div> : <div></div>;\n};\nexport default CommentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\n\nclass AddComment extends Component {\n  state = {\n    content: \"\"\n  };\n\n  handleChange = e => {\n    const content = e.target.value;\n    this.setState({\n      content: content\n    });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const content = this.state.content.trim();\n\n    if (!content) {\n      return;\n    }\n\n    axios\n      .post(`/api/comments/${this.props.eventId}`, {\n        content,\n        date: new Date(),\n        author: this.props.user._id\n      })\n      .then(res => console.log(\"RESPONSE POST:\", res))\n      .then(this.props.getAllEvents)\n      .then(this.setState({ content: \"\" }))\n      .then(() => {\n        this.props.getSingleEvent();\n        this.props.getAllEvents();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleFormSubmit}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              as=\"textarea\"\n              rows=\"3\"\n              name=\"content\"\n              onChange={this.handleChange}\n              value={this.state.content}\n              placeholder=\"write a comment or question\"\n            />\n          </Form.Group>\n          <Button type=\"submit\">Send</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddComment;\n","import React, { Component } from \"react\";\nimport CommentList from \"./CommentList\";\nimport AddComment from \"./AddComment\";\n\nclass Comments extends Component {\n  render() {\n    return (\n      <>\n        <CommentList\n          user={this.props.user}\n          event={this.props.event}\n          getSingleEvent={this.props.getSingleEvent}\n          getAllEvents={this.props.getAllEvents}\n        />\n        <AddComment\n          user={this.props.user}\n          eventId={this.props.eventId}\n          getSingleEvent={this.props.getSingleEvent}\n          getAllEvents={this.props.getAllEvents}\n        />\n      </>\n    );\n  }\n}\n\nexport default Comments;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { handleUpload } from \"../../services/upload-img\";\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\nimport EventPic from \"./EventPic\";\nimport Guestlist from \"./Guestlist\";\nimport Comments from \"./Comments\";\nimport {\n  getFormattedDate,\n  futureEventCheck\n} from \"../../services/general-functions.js\";\n\nclass EventDetails extends Component {\n  state = {\n    editForm: false,\n    event: {},\n\n    name: \"\",\n    address: null,\n    imageUrl: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    date: \"\",\n    time: \"\",\n    description: \"\",\n\n    dateForForm: \"\",\n    timeForForm: \"\",\n    photoMessage: null,\n    inputWarning: null\n  };\n\n  getSingleEvent = () => {\n    const { params } = this.props.match;\n    axios\n      .get(`/api/events/${params.id}`)\n      .then(responseFromApi => {\n        let eventTimeArr = responseFromApi.data.time.split(\":\");\n        let hh = eventTimeArr[0];\n        let mm = eventTimeArr[1];\n\n        let timeForForm = `${hh}:${mm}:00`;\n\n        this.setState({\n          event: responseFromApi.data,\n          name: responseFromApi.data.name,\n          address: responseFromApi.data.address,\n          street: responseFromApi.data.address.street,\n          houseNumber: responseFromApi.data.address.houseNumber,\n          city: responseFromApi.data.address.city,\n          postalCode: responseFromApi.data.address.postalCode,\n          date: responseFromApi.data.date,\n          time: responseFromApi.data.time,\n          imageUrl: responseFromApi.data.imageUrl,\n          description: responseFromApi.data.description,\n          originalImage: responseFromApi.data.imageUrl,\n          dateForForm: getFormattedDate(new Date(responseFromApi.data.date)),\n          timeForForm\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getSingleEvent();\n  }\n\n  deleteEvent = () => {\n    const id = this.state.event._id;\n    axios\n      .delete(`/api/events/${id}`)\n      .then(response => {\n        this.props.history.push(\"/\");\n      })\n      .then(this.props.getAllEvents)\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  toggleEdit = () => {\n    this.setState({\n      editForm: !this.state.editForm\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleFileUpload = e => {\n    let imgSizeLimit = 5000000; //5MB\n    let allowedFormat = [\"image/jpeg\", \"image/png\"];\n    let chosenFile = e.target.files[0];\n\n    if (!chosenFile) {\n      this.setState({\n        imageUrl: this.state.originalImage\n      });\n      return;\n    }\n\n    if (chosenFile.size > imgSizeLimit) {\n      this.setState({\n        photoMessage: \"* Size of image should be less than 5MB\",\n        imageUrl: this.state.originalImage\n      });\n      return;\n    }\n\n    if (allowedFormat.indexOf(chosenFile.type) < 0) {\n      this.setState({\n        photoMessage: \"* Format of image should be jpeg or png\",\n        imageUrl: this.state.originalImage\n      });\n      return;\n    }\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.setState({ uploadOn: true, photoMessage: \"\" });\n    handleUpload(uploadData)\n      .then(response => {\n        this.setState(\n          {\n            imageUrl: response.secure_url,\n            uploadOn: false\n          },\n          () => console.log(\"response\", response)\n        );\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    const id = this.props.match.params.id;\n    const date = this.state.dateForForm;\n    const time = this.state.timeForForm;\n\n    let street = this.state.street.trim();\n    let houseNumber = this.state.houseNumber.trim();\n    let city = this.state.city.trim();\n    if (!street || !city || !houseNumber) {\n      this.setState({\n        inputWarning:\n          \"* The street, city and house number input should contain valid characters\"\n      });\n      return;\n    }\n\n    const {\n      name,\n\n      postalCode,\n      imageUrl,\n      description\n    } = this.state;\n\n    axios\n      .put(`/api/events/${id}`, {\n        name,\n        street,\n        houseNumber,\n        city,\n        postalCode,\n        imageUrl,\n        date,\n        time,\n        description\n      })\n      .then(response => {\n        const {\n          name,\n          address,\n          imageUrl,\n          date,\n          time,\n          description\n        } = response.data;\n\n        this.setState(\n          {\n            editForm: false,\n            event: response.data,\n            name,\n            address,\n            imageUrl,\n            date,\n            time,\n            description,\n            inputWarning: \"\",\n            photoMessage: \"\"\n          },\n          () => {\n            this.getSingleEvent();\n          }\n        );\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (!this.state.date) {\n      return <></>;\n    }\n    if (this.state.event.type !== \"event\") {\n      return (\n        <div class=\"bad-link-msg\">\n          <h1>Sorry, this page isn't available.</h1>\n          <p>\n            The link you used may be broken, or the page may have been removed.\n          </p>\n        </div>\n      );\n    }\n\n    if (!this.state.event) return <div></div>;\n\n    let description = this.state.description;\n\n    let isFutureEvent = futureEventCheck(this.state.date, this.state.time);\n\n    let canUpdate = false;\n    if (\n      isFutureEvent &&\n      this.state.event.creater._id === this.props.state.user._id\n    ) {\n      canUpdate = true;\n    }\n\n    if (this.state.editForm === false) {\n      return (\n        <>\n          <Container className=\"event-details\">\n            {canUpdate && (\n              <div className=\"d-flex justify-content-end mb-5\">\n                <>\n                  <Button\n                    variant=\"outline-info\"\n                    className=\"mx-2\"\n                    onClick={this.toggleEdit}\n                  >\n                    {`\\u270E`} Edit event\n                  </Button>\n                  <Button variant=\"outline-danger\" onClick={this.deleteEvent}>\n                    {`\\u2715`} Delete event\n                  </Button>\n                </>\n              </div>\n            )}\n            <Row>\n              <Col>\n                <img\n                  src={this.state.imageUrl}\n                  width=\"80%\"\n                  alt={this.state.name}\n                />\n              </Col>\n              <Col sm={6} className=\"event-info-container\">\n                <h1>{this.state.name}</h1>\n                <h5 className=\"date\">\n                  {this.state.date.slice(0, 10)} at {this.state.time}\n                </h5>\n                <h5 className=\"date\">{this.state.address.formattedAddress}</h5>\n                <p>\n                  {description\n                    .trim()\n                    .split(\"\\n\")\n                    .map((item, index) => {\n                      return (\n                        <span key={index}>\n                          {item}\n\n                          <br />\n                        </span>\n                      );\n                    })}\n                </p>\n              </Col>\n            </Row>\n          </Container>\n          {\n            <Container>\n              <Row>\n                <Col>\n                  <Guestlist\n                    event={this.state.event}\n                    joinedUsers={this.state.event.join}\n                    user={this.props.user}\n                    allUsers={this.props.allUsers}\n                    getSingleEvent={this.getSingleEvent}\n                    getAllEvents={this.props.getAllEvents}\n                    isFutureEvent={isFutureEvent}\n                  />\n                </Col>\n                <Col>\n                  <Comments\n                    user={this.props.user}\n                    eventId={this.props.match.params.id}\n                    event={this.state.event}\n                    getSingleEvent={this.getSingleEvent}\n                    getAllEvents={this.props.getAllEvents}\n                  />\n                </Col>\n              </Row>\n            </Container>\n          }\n        </>\n      );\n    }\n\n    if (this.state.editForm === true) {\n      return (\n        <Container className=\"container event-form-container mt-2\">\n          <h1>Edit event</h1>\n          <Row>\n            <Col md={4} className=\"event-form-img-container\">\n              <EventPic\n                imageUrl={this.state.imageUrl}\n                handleFileUpload={this.handleFileUpload}\n              />\n              <p class=\"warning\">{this.state.photoMessage}</p>\n            </Col>\n\n            <Col md={8}>\n              <Form onSubmit={this.handleFormSubmit} className=\"row m-5\">\n                <Form.Group className=\"col-12\">\n                  {this.state.inputWarning && (\n                    <p class=\"warning\">{this.state.inputWarning}</p>\n                  )}\n                  <Form.Label htmlFor=\"name\">Name: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    onChange={this.handleChange}\n                    value={this.state.name}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-8\">\n                  <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"street\"\n                    id=\"street\"\n                    onChange={this.handleChange}\n                    value={this.state.street}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-4\">\n                  <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"houseNumber\"\n                    id=\"houseNumber\"\n                    onChange={this.handleChange}\n                    value={this.state.houseNumber}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-8\">\n                  <Form.Label htmlFor=\"city\">City: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"city\"\n                    onChange={this.handleChange}\n                    value={this.state.city}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-4\">\n                  <Form.Label htmlFor=\"postalCode\">Postalcode: </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    name=\"postalCode\"\n                    id=\"postalCode\"\n                    onChange={this.handleChange}\n                    value={this.state.postalCode}\n                    min=\"0\"\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"date\">Date: </Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    name=\"dateForForm\"\n                    id=\"date\"\n                    min={getFormattedDate(new Date())}\n                    onChange={this.handleChange}\n                    value={this.state.dateForForm}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"time\">Time: </Form.Label>\n                  <Form.Control\n                    type=\"time\"\n                    name=\"timeForForm\"\n                    id=\"time\"\n                    onChange={this.handleChange}\n                    value={this.state.timeForForm}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-12\">\n                  <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    as=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    id=\"description\"\n                    onChange={this.handleChange}\n                    value={this.state.description}\n                  />\n                </Form.Group>\n\n                <Button className=\"col-12\" type=\"submit\">\n                  Save changes\n                </Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default EventDetails;\n","import React, { Fragment } from \"react\";\nimport { distance } from \"../../src/services/distance\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchResult = props => {\n  const circleSize = 3;\n\n  let loggedInUserLocation = props.user.address.coordinates;\n\n  let neighbor = \"\";\n\n  neighbor = [...props.allUsers].filter(el => {\n    let otherUserLocation = el.address.coordinates;\n\n    return (\n      distance(loggedInUserLocation, otherUserLocation) <= circleSize &&\n      el.username !== props.user.username\n    );\n  });\n\n  let sortedNeighbor = [...neighbor].sort((a, b) => {\n    let distanceA = distance(loggedInUserLocation, a.address.coordinates);\n    let distanceB = distance(loggedInUserLocation, b.address.coordinates);\n    if (distanceA < distanceB) {\n      return -1;\n    }\n\n    if (distanceA > distanceB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  let searchWord = props.searchInput.trim();\n\n  if (props.select === \"Help\" && searchWord) {\n    sortedNeighbor = sortedNeighbor.filter(el => {\n      return (\n        el.offerService.indexOf(searchWord) >= 0 ||\n        el.offerStuff.indexOf(searchWord) >= 0\n      );\n    });\n  }\n\n  if (props.select === \"Neighbors\" && searchWord) {\n    sortedNeighbor = sortedNeighbor.filter(el => {\n      return el.username.toLowerCase().includes(searchWord.toLowerCase());\n    });\n  }\n\n  let displayService = \"\";\n  let displayOfferStuff = \"\";\n\n  let neighborCards = [...sortedNeighbor].map((el, index) => {\n    if (el.offerService) {\n      displayService = el.offerService.map(el => {\n        console.log(typeof el);\n        return (\n          <Col key={index} xs={6} md={3}>\n            <span className=\"mr-2 help-item \">\n              <i className=\"fas fa-icons\"></i>\n            </span>\n            <span>{el}</span>\n          </Col>\n        );\n      });\n    }\n\n    if (el.offerStuff) {\n      displayOfferStuff = el.offerStuff.map((el, index) => {\n        return (\n          <Col key={index} xs={6} md={3}>\n            <span className=\"mr-2 toolbox\">\n              <i className=\"fas fa-toolbox\"></i>{\" \"}\n            </span>\n            <span>{el}</span>\n          </Col>\n        );\n      });\n    }\n    let eachDistance = distance(loggedInUserLocation, el.address.coordinates);\n    console.log(eachDistance);\n    return (\n      <Container key={index} className=\"each-neighbor-card\">\n        <div className=\"py-2 px-3\">\n          <Link\n            to={`/${el.username}`}\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            <Row>\n              <Col xs={12} md={4}>\n                <img\n                  src={el.imageUrl}\n                  width=\"150\"\n                  height=\"150\"\n                  className=\"user-pic\"\n                />\n\n                <h6>{eachDistance} km</h6>\n                <h6>Credit: {el.credits}</h6>\n              </Col>\n              <Col xs={12} md={8}>\n                <h3>{el.username}</h3>\n                {displayOfferStuff && (\n                  <>\n                    <h5 className=\"mt-4\" style={{ color: \"grey\" }}>\n                      I can lend:\n                    </h5>{\" \"}\n                    <Row>{displayOfferStuff}</Row>\n                  </>\n                )}\n                {displayService && (\n                  <>\n                    <h5 className=\"mt-4\" style={{ color: \"grey\" }}>\n                      I can help:{\" \"}\n                    </h5>\n                    <Row>{displayService}</Row>\n                  </>\n                )}\n              </Col>\n            </Row>\n          </Link>\n        </div>\n      </Container>\n    );\n  });\n\n  return (\n    <>\n      <Col>\n        <h1 className=\"search-result-heading\">\n          Neighbors around you ( within 3 km )\n        </h1>\n      </Col>\n      {neighborCards.length > 0 ? (\n        <div className=\"neighbor-card\">{neighborCards}</div>\n      ) : (\n        <>\n          {\" \"}\n          <Col md={{ offset: 1 }}>\n            <h3 className=\"search-result-heading\">No Result</h3>\n          </Col>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SearchResult;\n","import React, { Fragment } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst MessengerNav = props => {\n  let userChatMsg = \"\";\n  if (props.chatMsg.length) {\n    userChatMsg = [...props.chatMsg].filter(el => {\n      return (\n        el.sender._id === props.user._id || el.reciever._id === props.user._id\n      );\n    });\n  }\n\n  let navInfo = {};\n  let nameOrder = [];\n\n  [...userChatMsg].forEach(el => {\n    // current user is reciever\n    if (el.sender._id !== props.user._id) {\n      navInfo[el.sender.username] = {\n        neighborId: el.sender._id,\n        sender: el.sender._id,\n        msg: el.chatMsg,\n        timeStamp: el.createdAt,\n        imageUrl: el.sender.imageUrl\n      };\n      nameOrder.push(el.sender.username);\n    } else {\n      // current user is the sender\n      navInfo[el.reciever.username] = {\n        neighborId: el.reciever._id,\n        sender: el.sender._id,\n        msg: el.chatMsg,\n        timeStamp: el.createdAt,\n        imageUrl: el.reciever.imageUrl\n      };\n      nameOrder.push(el.reciever.username);\n    }\n  });\n\n  let monthEng = {\n    1: \"Jan\",\n    2: \"Feb\",\n    3: \"Mar\",\n    4: \"Apr\",\n    5: \"May\",\n    6: \"Jun\",\n    7: \"Jul\",\n    8: \"Aug\",\n    9: \"Sep\",\n    10: \"Oct\",\n    11: \"Nov\",\n    12: \"Dec\"\n  };\n\n  let nameOrderUnique = new Set(nameOrder.reverse());\n\n  let navDisplay = Array.from(nameOrderUnique);\n\n  navDisplay = navDisplay.map((el, index) => {\n    let formattedDate = new Date(navInfo[el].timeStamp);\n    let date = formattedDate.getDate();\n    let monthNum = formattedDate.getMonth();\n    let month = monthEng[monthNum + 1];\n    let lastMessage = navInfo[el].msg.slice(0, 25);\n\n    return (\n      <NavLink\n        key={index}\n        to={`/messenger/${navInfo[el].neighborId}`}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n        className=\" message-selector\"\n      >\n        <div className=\"flex-display-container px-2 py-3\">\n          <div className=\"pr-2\">\n            <img\n              src={navInfo[el].imageUrl}\n              alt=\"chat-neighbor-pic\"\n              width=\"50\"\n              height=\"50\"\n              className=\"user-pic\"\n            />\n          </div>\n          <div>\n            <div className=\"m-0\">\n              <strong>{el}</strong>{\" \"}\n              <span style={{ color: \"grey\" }}>\n                {`\\u2022 ${date} ${month} \\u2022`}\n              </span>\n            </div>\n            <div className=\"m-0\">\n              {navInfo[el].sender === props.user._id ? (\n                <span>You: </span>\n              ) : (\n                <></>\n              )}\n              <span style={{ color: \"grey\" }}>{lastMessage}</span>\n            </div>\n          </div>\n        </div>\n      </NavLink>\n    );\n  });\n\n  return <span>{navDisplay}</span>;\n};\n\nexport default MessengerNav;\n","import React, { Fragment } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatArea = props => {\n  let neighborId = props.match.params.neighborId;\n\n  let chatAreaMsg = \"\";\n  if (props.chatMsg.length) {\n    chatAreaMsg = [...props.chatMsg].reverse().filter(el => {\n      return (\n        (el.sender._id === props.user._id && el.reciever._id === neighborId) ||\n        (el.reciever._id === props.user._id && el.sender._id === neighborId)\n      );\n    });\n  }\n\n  let chatAreaDisplay = [...chatAreaMsg].map((el, index) => {\n    let message = el.chatMsg\n      .trim()\n      .split(\"\\n\")\n      .map((item, index) => {\n        return (\n          <span key={index}>\n            {item}\n            <br />\n          </span>\n        );\n      });\n\n    if (el.sender._id !== props.user._id) {\n      return (\n        <div key={index} className=\"d-flex justify-content-start\">\n          <div className=\"chat-bubble\">\n            <b style={{ color: \"#66AD93\" }}>{el.sender.username}</b>\n            <p>{message}</p>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div key={index} className=\"d-flex justify-content-end \">\n        <div className=\"chat-bubble\">\n          <b style={{ color: \"#FF8C00\" }}>You</b>\n          <p>{message}</p>\n        </div>\n      </div>\n    );\n  });\n\n  let neighborName = \"\";\n  let neighborPic = \"\";\n  if (chatAreaMsg[0]) {\n    if (chatAreaMsg[0].sender.username !== props.user.username) {\n      neighborName = chatAreaMsg[0].sender.username;\n      neighborPic = chatAreaMsg[0].sender.imageUrl;\n    } else {\n      neighborName = chatAreaMsg[0].reciever.username;\n      neighborPic = chatAreaMsg[0].reciever.imageUrl;\n    }\n  } else if (chatAreaMsg) {\n    let selectedUser = [...props.allUsers].filter(el => {\n      return el._id === neighborId;\n    });\n\n    neighborName = selectedUser[0].username;\n    neighborPic = selectedUser[0].imageUrl;\n  }\n\n  return (\n    <Fragment>\n      <div className=\"col-9 p-0\">\n        <div\n          className=\"flex-display-container  px-2 py-2\"\n          style={{ backgroundColor: \"#D5F2E3\" }}\n        >\n          <img src={neighborPic} width=\"40\" height=\"40\" className=\"user-pic\" />\n          <h3 className=\"px-2\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"black\" }}\n              to={`/${neighborName}`}\n            >\n              {neighborName}\n            </Link>\n          </h3>\n        </div>\n        <div className=\"p-4 chat-area-msg-display\">{chatAreaDisplay}</div>\n        <div>\n          <Form\n            onSubmit={e => {\n              props.handleChatInputSubmit(e, neighborId);\n            }}\n          >\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              name=\"chatInput\"\n              onChange={props.handleChange}\n              value={props.chatInput}\n              placeholder=\"Text here...\"\n            />\n            <div className=\"d-flex justify-content-end\">\n              <Button className=\"mx-2\" type=\"submit\" variant=\"outline-success\">\n                Send\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ChatArea;\n","import React, { Component } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport MessengerNav from \"./MessengerNav\";\nimport ChatArea from \"./ChatArea\";\n\n// import axios from \"axios\";\n// import { SystemFeedback, socketIn, socketOut } from \"../socket/socket-io\";\n\nexport default class Messenger extends Component {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <Container fluid={true}>\n        <Row>\n          <div className=\"col-3 pr-0\">\n            <h2>Messenger</h2>\n            <div className=\"p-0 messenger-nav\">\n              <MessengerNav\n                user={this.props.user}\n                chatMsg={this.props.chatMsg}\n              />\n            </div>\n          </div>\n\n          <ChatArea\n            user={this.props.user}\n            chatMsg={this.props.chatMsg}\n            chatInput={this.props.chatInput}\n            handleChange={this.props.handleChange}\n            handleChatInputSubmit={this.props.handleChatInputSubmit}\n            allUsers={this.props.allUsers}\n            {...this.props}\n          />\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { signup } from \"../services/auth\";\nimport { Alert, Form, Button, Container, Row, Col } from \"react-bootstrap\";\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let username = this.state.username;\n    let regex = /^[a-z0-9]+$/i;\n    let isValidUserName = regex.test(username);\n\n    let password = this.state.password;\n\n    let street = this.state.street.trim();\n    let city = this.state.city.trim();\n    let houseNumber = this.state.houseNumber.trim();\n\n    if (!isValidUserName) {\n      this.setState({\n        error: \"Username can contain only english letters or numbers\"\n      });\n      return;\n    }\n\n    if (password.length < 8) {\n      this.setState({\n        error: \"Password should contain at least 8 characters\"\n      });\n      return;\n    }\n\n    if (!street || !city || !houseNumber) {\n      this.setState({\n        error:\n          \"The street, city and house number input should contain valid characters \"\n      });\n      return;\n    }\n\n    signup(\n      username,\n      password,\n      street,\n      houseNumber,\n      city,\n      this.state.postalCode\n    ).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        this.props.setUser(data);\n\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"background-image\">\n        <div className=\"signup\">\n          <Container>\n            <h2>Signup</h2>\n\n            <Form onSubmit={this.handleSubmit}>\n              <Row>\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"username\">Username: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"password\">Password: </Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"min. 8 characters\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    required={true}\n                  />\n                </Form.Group>\n              </Row>\n\n              <Row>\n                <Form.Group className=\"col-8 \">\n                  <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"street\"\n                    id=\"street\"\n                    value={this.state.street}\n                    onChange={this.handleChange}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-4 \">\n                  <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"houseNumber\"\n                    id=\"houseNumber\"\n                    onChange={this.handleChange}\n                    value={this.state.houseNumber}\n                    required={true}\n                  />\n                </Form.Group>\n              </Row>\n\n              <Row>\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"postalCode\" id=\"postal-code\">\n                    Postalcode:{\" \"}\n                  </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    name=\"postalCode\"\n                    id=\"postalCode\"\n                    onChange={this.handleChange}\n                    value={this.state.postalCode}\n                    min=\"0\"\n                    required={true}\n                  />\n                </Form.Group>\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"city\">City: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"city\"\n                    onChange={this.handleChange}\n                    value={this.state.city}\n                    required={true}\n                  />\n                </Form.Group>\n              </Row>\n\n              {this.state.error && (\n                <Alert variant=\"danger\">{this.state.error}</Alert>\n              )}\n              <Button variant=\"danger\" type=\"submit\">\n                Sign up\n              </Button>\n            </Form>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { login } from \"../services/auth\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    login(this.state.username, this.state.password).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        // no error\n        // lift the data up to the App state\n        this.props.setUser(data);\n        // redirect to \"/\" (NewsFeed Page)\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"background-image\">\n        <div className=\"login-form\">\n          <h2>Login</h2>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group>\n              <Form.Label htmlFor=\"username\">Username: </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"username\"\n                id=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"password\">Password: </Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            {this.state.error && (\n              <Alert variant=\"danger\">{this.state.error}</Alert>\n            )}\n            <Button variant=\"danger\" type=\"submit\">\n              Log in\n            </Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default class AboutMe extends Component {\n  render() {\n    return (\n      <>\n        <h5\n          className=\"mt-md-5 mb-2 profile-detail-subhead\"\n          style={{ color: \"grey\" }}\n        >\n          About Me{\" \" + \"\\u0020\"}\n          {this.props.sameUser && !this.props.state.showAboutMeForm && (\n            <Button\n              onClick={() =>\n                this.props.toggleForm({\n                  showAboutMeForm: !this.props.state.showAboutMeForm\n                })\n              }\n              variant=\"outline-info\"\n            >{`\\u270E`}</Button>\n          )}\n        </h5>\n\n        {this.props.state.showAboutMeForm && (\n          <Form onSubmit={this.props.updateAboutMe}>\n            <Form.Group>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"aboutMe\"\n                onChange={this.props.handleChange}\n                value={this.props.state.aboutMe}\n              />\n            </Form.Group>\n            <div className=\"d-flex justify-content-end\">\n              <Button type=\"submit\" variant=\"outline-success\" className=\"mr-1\">\n                Add\n              </Button>\n              <Button onClick={this.props.cancel} variant=\"outline-danger\">\n                Cancel\n              </Button>\n            </div>\n          </Form>\n        )}\n        {!this.props.state.showAboutMeForm && (\n          <p className=\"mt-3 mb-md-5\">\n            {this.props.state.aboutMe &&\n              this.props.state.aboutMe\n                .trim()\n                .split(\"\\n\")\n                .map((item, index) => {\n                  return (\n                    <span key={index}>\n                      {item}\n                      <br />\n                    </span>\n                  );\n                })}\n          </p>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default class ProfilePic extends Component {\n  render() {\n    return (\n      <>\n        <div class=\"profile-page-img-container\">\n          <img className=\"user-pic\" src={this.props.imageUrl} alt=\"\" />\n          {this.props.canUpdateImg && <span>Preview</span>}\n        </div>\n        {this.props.sameUser && (\n          <form onSubmit={this.props.handleSubmitFile}>\n            <input\n              type=\"file\"\n              id=\"pic-input\"\n              onChange={this.props.handleFileUpload}\n            />\n            {this.props.canUpdateImg && (\n              <Button type=\"submit\" variant=\"outline-info\">\n                Upload\n              </Button>\n            )}\n          </form>\n        )}\n        {this.props.photoMessage && (\n          <p style={{ color: \"red\" }}>{this.props.photoMessage}</p>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\n\nexport default class OfferService extends Component {\n  render() {\n    let services = <></>;\n\n    // check if offerService is empty\n    if (this.props.offerService) {\n      services = [...this.props.offerService].map((el, index) => {\n        return (\n          <Fragment key={index}>\n            <Row>\n              <Col>\n                <li>\n                  {\" \"}\n                  <span className=\"mr-2 help-item \">\n                    <i className=\"fas fa-icons\"></i>\n                  </span>\n                  <span>{el}</span>\n                </li>\n              </Col>\n              {this.props.showOfferServiceForm && (\n                <Col>\n                  <button\n                    onClick={() => this.props.deleteService(el)}\n                  >{`\\u00D7`}</button>\n                </Col>\n              )}\n            </Row>\n          </Fragment>\n        );\n      });\n    }\n\n    return (\n      <div className=\"my-md-5\">\n        <h3 class=\"profile-detail-subhead\">\n          I can help...{\" \"}\n          {this.props.sameUser && !this.props.showOfferServiceForm && (\n            <Button\n              onClick={() =>\n                this.props.toggleForm({\n                  showOfferServiceForm: !this.props.showOfferServiceForm\n                })\n              }\n              variant=\"outline-info\"\n            >\n              {`\\u270E`} Edit\n            </Button>\n          )}\n        </h3>\n\n        <ul style={{ listStyleType: \"none\" }}>{services}</ul>\n\n        {this.props.showOfferServiceForm && (\n          <Form onSubmit={this.props.handleSubmitOfferService}>\n            <Form.Group>\n              <Form.Control\n                id=\"help-input\"\n                type=\"text\"\n                name=\"serviceInput\"\n                onChange={this.props.handleChange}\n                value={this.props.serviceInput}\n              />\n            </Form.Group>\n            <div className=\"add-service-stuff-btn\">\n              <Button type=\"submit\" variant=\"outline-success\" className=\"mr-2\">\n                Add\n              </Button>\n              <Button\n                onClick={() =>\n                  this.props.toggleForm({\n                    showOfferServiceForm: !this.props.showOfferServiceForm\n                  })\n                }\n                variant=\"outline-info\"\n              >\n                Done\n              </Button>\n            </div>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\n\nconst OfferStuff = props => {\n  let stuff = <></>;\n  if (props.offerStuff) {\n    stuff = [...props.offerStuff].map((el, index) => {\n      return (\n        <Fragment key={index}>\n          <Row>\n            <Col>\n              <li>\n                <span className=\"mr-2 toolbox\">\n                  <i className=\"fas fa-toolbox\"></i>{\" \"}\n                </span>{\" \"}\n                <span>{el}</span>\n              </li>\n            </Col>\n            {props.showOfferStuffForm && (\n              <Col>\n                <button onClick={() => props.deleteStuff(el)}>\n                  {`\\u00D7`}\n                </button>\n              </Col>\n            )}\n          </Row>\n        </Fragment>\n      );\n    });\n  }\n\n  return (\n    <div className=\"my-md-5\">\n      <h3 class=\"profile-detail-subhead\">\n        I can lend...{\" \"}\n        {props.sameUser && !props.showOfferStuffForm && (\n          <Button\n            onClick={() =>\n              props.toggleForm({\n                showOfferStuffForm: !props.showOfferStuffForm\n              })\n            }\n            variant=\"outline-info\"\n          >\n            {`\\u270E`} Edit\n          </Button>\n        )}\n      </h3>\n\n      <ul style={{ listStyleType: \"none\" }}>{stuff}</ul>\n\n      {props.showOfferStuffForm && (\n        <Form onSubmit={props.handleSubmitOfferStuff}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              name=\"stuffInput\"\n              id=\"stuff-input\"\n              onChange={props.handleChange}\n              value={props.stuffInput}\n            />\n          </Form.Group>\n          <div className=\"add-service-stuff-btn\">\n            <Button type=\"submit\" variant=\"outline-success\" className=\"mr-2\">\n              Add\n            </Button>\n            <Button\n              onClick={() =>\n                props.toggleForm({\n                  showOfferStuffForm: !props.showOfferStuffForm\n                })\n              }\n              variant=\"outline-info\"\n            >\n              Done\n            </Button>\n          </div>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nexport default OfferStuff;\n// rafce\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst ReferenceCard = props => {\n  let referenceList = [...props.reference].map((el, index) => {\n    let content = el.content.split(\"\\n\").map(function(item, key) {\n      return (\n        <span key={key}>\n          {item}\n          <br />\n        </span>\n      );\n    });\n\n    let stars = \"\\u2605\".repeat(el.rating);\n\n    return (\n      <Fragment key={index}>\n        <Row className=\"my-3\">\n          <Col className=\"mr-2\" xs={2} lg={1}>\n            {el.author.imageUrl && (\n              <img\n                className=\"user-pic mt-1\"\n                src={el.author.imageUrl}\n                alt=\"auth picture\"\n                width=\"40\"\n                height=\"40\"\n              />\n            )}\n          </Col>\n          <Col>\n            {el.author.username ? (\n              <Link\n                style={{ textDecoration: \"none\", color: \"black\" }}\n                to={`/${el.author.username}`}\n              >\n                <strong>{el.author.username}</strong>\n              </Link>\n            ) : (\n              <strong style={{ color: \"grey\", fontStyle: \"italic\" }}>\n                Deleted\n              </strong>\n            )}\n            <p className=\"mb-1\" style={{ color: \"#ffcc00\", fontSize: 20 }}>\n              {stars}\n            </p>\n            <p>{content}</p>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  });\n  return referenceList;\n};\n\nexport default ReferenceCard;\n","import React, { Fragment } from \"react\";\nimport { Button, Form, Alert, Container, Row, Col } from \"react-bootstrap\";\nimport ReactStars from \"react-stars\";\nimport ReferenceCard from \"./ReferenceCard\";\n\nlet newRating = 0;\n\nconst ratingChanged = rating => {\n  console.log(\"In ratingchanged Function\", rating);\n  newRating = rating;\n};\n\nconst Reference = props => {\n  return (\n    <>\n      <h3 className=\"mt-md-5 reference-heading\">\n        Reference{\" \"}\n        {!props.sameUser && !props.showReferenceForm && props.user && (\n          <Button\n            onClick={() =>\n              props.toggleForm({\n                showReferenceForm: !props.showReferenceForm\n              })\n            }\n            variant=\"outline-info\"\n          >\n            {`\\u270E`} Add a reference\n          </Button>\n        )}\n      </h3>\n      <Container>\n        {props.showReferenceForm && !props.sameUser && (\n          <Fragment>\n            {props.showNotEnoughCredit && (\n              <Alert variant=\"warning\">\n                Your credit: {props.authorCredits}\n                <br />\n                You don't have enough credit to transfer.\n              </Alert>\n            )}\n\n            {props.showNeedtoWriteSth && (\n              <Alert variant=\"warning\">You need to write something.</Alert>\n            )}\n\n            <Row className=\"my-3\">\n              <Col className=\"mr-2\" xs={2} lg={1}>\n                <img\n                  className=\"user-pic mt-1\"\n                  src={props.user.imageUrl}\n                  alt=\"auth picture\"\n                  width=\"40\"\n                  height=\"40\"\n                />\n              </Col>\n              <Col>\n                <Form>\n                  {/* <Form onSubmit={props.addReference}> */}\n                  {props.showReferenceAlert && (\n                    <Alert variant=\"danger\">\n                      IMPORTANT!!\n                      <br />\n                      Are you sure you want to submit this reference?\n                      <br />\n                      Submitted reference CANNOT be modified or deleted.\n                      <br />\n                      {/* <Button type=\"submit\" variant=\"outline-danger\"> */}\n                      <Button\n                        onClick={() => props.addReference(newRating)}\n                        variant=\"outline-success\"\n                        className=\"mt-3\"\n                      >\n                        Confirm\n                      </Button>\n                      <Button\n                        onClick={() =>\n                          props.toggleForm({ showReferenceAlert: false })\n                        }\n                        variant=\"outline-danger\"\n                        className=\"mt-3 mx-2\"\n                      >\n                        Cancel\n                      </Button>\n                    </Alert>\n                  )}\n\n                  <Row>\n                    <Col md={6}>\n                      <Form.Group>\n                        <Form.Label>\n                          Give Credits to <strong>{props.profileOwner}</strong>{\" \"}\n                          (optional) :\n                        </Form.Label>\n                        <Form.Control\n                          type=\"number\"\n                          name=\"creditInput\"\n                          placeholder=\"Write a number\"\n                          onChange={props.handleCreditChange}\n                          value={props.creditInput}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md={1}></Col>\n                    <Col md={5}>\n                      <Form.Label>Rating :</Form.Label>\n                      <ReactStars\n                        value={props.rating}\n                        count={5}\n                        // onChange={props.handleRefchange}\n                        onChange={ratingChanged}\n                        size={30}\n                        half={false}\n                        color2={\"#ffd700\"}\n                      />\n                    </Col>\n                  </Row>\n                  <Form.Group>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows=\"3\"\n                      name=\"referenceInput\"\n                      onChange={props.handleRefChange}\n                      value={props.referenceInput}\n                      placeholder=\"Write your reference here\"\n                    />\n                  </Form.Group>\n                  {!props.showReferenceAlert && (\n                    <div className=\"d-flex justify-content-end\">\n                      <Button\n                        onClick={() => props.firstAddRef(newRating)}\n                        variant=\"outline-success\"\n                      >\n                        Add\n                      </Button>\n                      <Button\n                        onClick={props.cancelReferenceChange}\n                        variant=\"outline-danger\"\n                        className=\"mx-2\"\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  )}\n                </Form>\n              </Col>\n            </Row>\n          </Fragment>\n        )}\n        <ReferenceCard reference={props.reference} />\n      </Container>\n    </>\n  );\n};\n\nexport default Reference;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Button, Alert, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport AboutMe from \"./AboutMe\";\nimport ProfilePic from \"./ProfilePic\";\nimport { handleUpload } from \"../../services/upload-img\";\nimport OfferService from \"./OfferService\";\nimport OfferStuff from \"./OfferStuff\";\nimport Reference from \"./Reference\";\nimport DeleteButton from \"../DeleteButton\";\n\nclass ProfileDetails extends Component {\n  state = {\n    _id: null,\n    username: \"\",\n    address: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    offerStuff: \"\",\n    offerService: \"\",\n    imageUrl: \"\",\n    aboutMe: \"\",\n    reference: \"\",\n    credits: \"\",\n    event: \"\",\n    following: \"\",\n    showAboutMeForm: false,\n\n    showAddressForm: false,\n\n    showOfferServiceForm: false,\n    showOfferStuffForm: false,\n    showReferenceForm: false,\n    showReferenceAlert: false,\n    serviceInput: \"\",\n    stuffInput: \"\",\n    referenceInput: \"\",\n    creditInput: \"\",\n    authorCredits: this.props.user.credits,\n    rating: 0,\n    showDeleteAlert: false,\n    photoMessage: null,\n    showNotEnoughCredit: false,\n    showNeedtoWriteSth: false,\n    canUpdateImg: false,\n    addressInvalidMsg: null\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.getData();\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  // get profile owner's data and update the state\n  getData = () => {\n    const username = this.props.match.params.username;\n\n    axios\n      .get(`/api/user/${username}`)\n      .then(response => {\n        this.setState({\n          _id: response.data._id,\n          username: response.data.username,\n          address: response.data.address,\n          street: response.data.address.street,\n          houseNumber: response.data.address.houseNumber,\n          city: response.data.address.city,\n          postalCode: response.data.address.postalCode,\n          offerStuff: response.data.offerStuff,\n          offerService: response.data.offerService,\n          imageUrl: response.data.imageUrl,\n          aboutMe: response.data.aboutMe,\n          reference: response.data.reference.reverse(),\n          credits: response.data.credits,\n          event: response.data.event,\n          following: response.data.following\n          // photoMessage: null\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        if (err.response.status === 404) {\n          this.setState({\n            error: err.response.data.message\n          });\n        }\n      });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleCreditChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      showNotEnoughCredit: false\n    });\n  };\n\n  handleRefChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      showNeedtoWriteSth: false\n    });\n  };\n\n  toggleForm = obj => {\n    this.setState(obj);\n  };\n\n  //Update Address\n  updateAddress = event => {\n    event.preventDefault();\n\n    let street = this.state.street.trim();\n    let city = this.state.city.trim();\n    let houseNumber = this.state.houseNumber.trim();\n    if (!street || !city || !houseNumber) {\n      this.setState({\n        addressInvalidMsg:\n          \"The street, city and house number input should contain valid characters \"\n      });\n      return;\n    }\n\n    axios\n      .put(`/api/user/address/${this.state.username}`, {\n        street: this.state.street,\n        houseNumber: this.state.houseNumber,\n        city: this.state.city,\n        postalCode: this.state.postalCode\n      })\n      .then(response => {\n        this.setState(\n          {\n            address: response.data.address,\n            street: response.data.address.street,\n            houseNumber: response.data.address.houseNumber,\n            city: response.data.address.city,\n            postalCode: response.data.address.postalCode,\n            addressInvalidMsg: \"\"\n          },\n          () => {\n            // this.getData();\n            this.toggleForm({ showAddressForm: !this.state.showAddressForm });\n          }\n        );\n      })\n      .catch(err => console.log(err));\n  };\n\n  // AboutMe Functions\n  updateAboutMe = event => {\n    event.preventDefault();\n    axios\n      .put(`/api/user/${this.state.username}`, { aboutMe: this.state.aboutMe })\n      .then(response => {\n        this.setState(\n          {\n            aboutMe: response.data.aboutMe\n          },\n          () => {\n            // this.getData();\n            this.toggleForm({ showAboutMeForm: !this.state.showAboutMeForm });\n          }\n        );\n      })\n      .catch(error => console.log(error));\n  };\n\n  cancel = () => {\n    this.getData();\n    this.toggleForm({ showAboutMeForm: !this.state.showAboutMeForm });\n  };\n\n  // Image Upload function\n  handleFileUpload = e => {\n    let imgSizeLimit = 5000000; //5MB\n    let allowedFormat = [\"image/jpeg\", \"image/png\"];\n    let chosenFile = e.target.files[0];\n\n    if (!chosenFile) {\n      this.getData();\n      this.setState({\n        canUpdateImg: false\n      });\n      return;\n    }\n\n    if (chosenFile.size > imgSizeLimit) {\n      this.getData();\n      this.setState({\n        canUpdateImg: false,\n        photoMessage: \"Size of image should be less than 5MB\"\n      });\n      return;\n    }\n\n    if (allowedFormat.indexOf(chosenFile.type) < 0) {\n      this.getData();\n      this.setState({\n        canUpdateImg: false,\n        photoMessage: \"Format of image should be jpeg or png\"\n      });\n      return;\n    }\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n    this.setState({ uploadOn: true, photoMessage: \"\" });\n\n    handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imageUrl: response.secure_url,\n          uploadOn: false,\n          canUpdateImg: true,\n          photoMessage: \"\"\n        }); /*e */\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  // update user's image\n  handleSubmitFile = e => {\n    e.preventDefault();\n\n    if (this.state.uploadOn) return; // do nothing if the file is still being uploaded\n    axios\n      .put(`/api/user/profile-pic/${this.state.username}`, {\n        imageUrl: this.state.imageUrl\n      })\n      .then(response => {\n        this.setState({\n          imageUrl: response.data.imageUrl,\n          photoMessage: \"Image has been updated successfully\",\n          canUpdateImg: false\n        });\n      })\n      .catch(error => console.log(error));\n  };\n\n  //offer Service functions\n  handleSubmitOfferService = e => {\n    e.preventDefault();\n    if (this.state.serviceInput !== \"\") {\n      axios\n        .put(`/api/user/offer-service/${this.state.username}`, {\n          offerService: this.state.serviceInput\n        })\n        .then(response => {\n          this.setState(\n            {\n              offerService: response.data.offerService,\n              serviceInput: \"\"\n            }\n            // () => {\n            //   this.getData();\n            // }\n          );\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  deleteService = deleteItem => {\n    axios\n      .put(`/api/user/offer-service-delete/${this.state.username}`, {\n        offerService: deleteItem\n      })\n      .then(response => {\n        this.setState(\n          {\n            offerService: response.data.OfferService\n          },\n          () => {\n            this.getData();\n          }\n        );\n      })\n      .catch(error => console.log(error));\n  };\n\n  //offer Stuff functions\n  handleSubmitOfferStuff = e => {\n    e.preventDefault();\n    if (this.state.stuffInput) {\n      axios\n\n        .put(`/api/user/offer-stuff/${this.state.username}`, {\n          offerStuff: this.state.stuffInput\n        })\n        .then(response => {\n          this.setState(\n            {\n              offerStuff: response.data.offerStuff,\n              stuffInput: \"\"\n            }\n            // () => {\n            //   this.getData();\n            // }\n          );\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  deleteStuff = deleteItem => {\n    axios\n      .put(`/api/user/offer-stuff-delete/${this.state.username}`, {\n        offerStuff: deleteItem\n      })\n      .then(response => {\n        this.setState(\n          {\n            offerStuff: response.data.offerStuff\n          },\n          () => {\n            this.getData();\n          }\n        );\n      })\n      .catch(error => console.log(error));\n  };\n\n  // Reference\n  firstAddRef = stars => {\n    if (this.state.creditInput < 0) {\n      return;\n    }\n    if (\n      parseInt(this.state.authorCredits, 10) -\n        parseInt(this.state.creditInput, 10) <\n      0\n    ) {\n      this.setState({ showNotEnoughCredit: true });\n      return;\n    }\n    if (!this.state.referenceInput) {\n      this.setState({ showNeedtoWriteSth: true });\n      return;\n    }\n\n    console.log(\"hit firstAddRef, params Stars= \", stars);\n    let num = stars;\n    console.log(\"type of stars\", typeof stars);\n\n    this.toggleForm({ showReferenceAlert: true });\n    this.setState({ rating: stars });\n    console.log(\"In firstAddRef after setState\", this.state.rating);\n  };\n\n  cancelReferenceChange = () => {\n    this.getData();\n    this.toggleForm({ showReferenceAlert: false, showReferenceForm: false });\n    this.setState({\n      rating: 0,\n      referenceInput: \"\",\n      creditInput: \"\",\n      showNotEnoughCredit: false,\n      showNeedtoWriteSth: false\n    });\n  };\n\n  axiosCreateRef = () => {\n    axios\n      .post(\"api/reference\", {\n        content: this.state.referenceInput,\n        author: this.props.user._id,\n        rating: this.state.rating,\n        profileOwner: this.state._id\n      })\n      .then(response => {\n        this.setState({\n          referenceInput: \"\"\n        });\n        this.getData();\n      })\n      .catch(err => console.log(err));\n  };\n\n  axiosUpdateAuthorCredits = () => {\n    axios\n      .put(\"api/reference/credits/author\", {\n        author: this.props.user._id,\n        authorCredits:\n          parseInt(this.state.authorCredits, 10) -\n          parseInt(this.state.creditInput, 10)\n      })\n      .then(response => {\n        this.setState({\n          creditInput: \"\",\n          rating: 0\n        });\n        this.getData();\n      })\n      .catch(err => console.log(err));\n  };\n\n  axiosUpdateProfileOwnerCredits = () => {\n    axios\n      .put(\"api/reference/credits/profile-owner\", {\n        username: this.state.username,\n        credits:\n          parseInt(this.state.credits, 10) +\n          parseInt(this.state.creditInput, 10)\n      })\n      .then(response => {\n        this.getData();\n      })\n      .catch(err => console.log(err));\n  };\n\n  addReference = stars => {\n    // e.preventDefault();\n\n    this.setState({ rating: stars });\n    console.log(\"ABCD\", this.state.rating);\n    this.axiosCreateRef();\n    this.axiosUpdateAuthorCredits();\n    this.axiosUpdateProfileOwnerCredits();\n    this.setState({\n      showReferenceAlert: false\n    });\n  };\n\n  //Delete Account\n  deleteAccount = () => {\n    axios\n      .delete(`/api/user/${this.state._id}`, { id: this.state._id })\n      .then(res => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(err));\n  };\n\n  toggleAlertFunction = () => {\n    this.setState({ showDeleteAlert: !this.state.showDeleteAlert });\n  };\n\n  cancelAddressChange = () => {\n    this.setState({ showAddressForm: false });\n  };\n\n  render() {\n    let alertMessage = (\n      <p>\n        IMPORTANT!! <br />\n        Are you sure you want to delete your account??\n      </p>\n    );\n\n    let sameUser = false;\n    if (this.state._id === this.props.user._id) {\n      sameUser = true;\n    }\n\n    if (this.state.error) {\n      return (\n        <div>\n          <p>{this.state.error}</p>\n        </div>\n      );\n    }\n    return (\n      <Container className=\"my-md-5 px-lg-5\">\n        {/* {sameUser && (\n          <DeleteButton\n            alertMessage={alertMessage}\n            toggleAlertFunction={this.toggleAlertFunction}\n            deleteFunction={this.deleteAccount}\n            showDeleteAlert={this.state.showDeleteAlert}\n          />\n        )} */}\n        <Row>\n          <Col md={5} className=\"my-4\" id=\"profile-left-top-container\">\n            <ProfilePic\n              user={this.props.user}\n              sameUser={sameUser}\n              imageUrl={this.state.imageUrl}\n              handleFileUpload={this.handleFileUpload}\n              handleSubmitFile={this.handleSubmitFile}\n              photoMessage={this.state.photoMessage}\n              canUpdateImg={this.state.canUpdateImg}\n            />\n\n            {sameUser && (\n              <>\n                <h5 style={{ color: \"grey\" }} className=\"mt-4\">\n                  Address {\" \" + \"\\u0020\"}\n                  {!this.state.showAddressForm && (\n                    <Button\n                      onClick={() =>\n                        this.toggleForm({\n                          showAddressForm: !this.state.showAddressForm\n                        })\n                      }\n                      variant=\"outline-info\"\n                    >{`\\u270E`}</Button>\n                  )}\n                </h5>\n\n                {this.state.showAddressForm && (\n                  <Form onSubmit={this.updateAddress}>\n                    <Row>\n                      {this.state.addressInvalidMsg && (\n                        <p class=\"warning col-12\">\n                          * {this.state.addressInvalidMsg}\n                        </p>\n                      )}\n\n                      <Form.Group className=\"col-7\">\n                        <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"street\"\n                          id=\"street\"\n                          value={this.state.street}\n                          onChange={this.handleChange}\n                          required={true}\n                        />\n                      </Form.Group>\n\n                      <Form.Group className=\"col-4\">\n                        <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"houseNumber\"\n                          id=\"houseNumber\"\n                          onChange={this.handleChange}\n                          value={this.state.houseNumber}\n                          required={true}\n                        />\n                      </Form.Group>\n                    </Row>\n\n                    <Row>\n                      <Form.Group className=\"col-5\">\n                        <Form.Label htmlFor=\"postalCode\">\n                          Postalcode:{\" \"}\n                        </Form.Label>\n                        <Form.Control\n                          type=\"number\"\n                          name=\"postalCode\"\n                          id=\"postalCode\"\n                          onChange={this.handleChange}\n                          value={this.state.postalCode}\n                          required={true}\n                          min=\"0\"\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"col-6\">\n                        <Form.Label htmlFor=\"city\">City: </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"city\"\n                          id=\"city\"\n                          onChange={this.handleChange}\n                          value={this.state.city}\n                          required={true}\n                        />\n                      </Form.Group>\n                    </Row>\n\n                    {this.state.error && (\n                      <Alert variant=\"danger\">{this.state.error}</Alert>\n                    )}\n\n                    <Button\n                      variant=\"outline-success\"\n                      type=\"submit\"\n                      className=\"mr-2\"\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      variant=\"outline-danger\"\n                      onClick={this.cancelAddressChange}\n                    >\n                      Cancel\n                    </Button>\n                  </Form>\n                )}\n\n                {!this.state.showAddressForm && (\n                  <>\n                    <p className=\"mb-0\">\n                      {this.state.address.formattedAddress}\n                    </p>\n                    <p style={{ color: \"grey\", fontStyle: \"italic\" }}>\n                      * Only you can see your address\n                    </p>\n                  </>\n                )}\n              </>\n            )}\n\n            <h5 className=\"mt-4\" style={{ color: \"grey\" }}>\n              Credit:{\" \"}\n              <span style={{ color: \"black\" }}>{this.state.credits}</span>\n            </h5>\n          </Col>\n\n          <Col md={7} className=\"my-md-4\">\n            <h1>\n              {this.state.username}\n              {\" \" + \"\\u0020\"}\n              {!sameUser && this.props.user && (\n                <Link\n                  to={`/messenger/${this.state._id}`}\n                  className=\"btn btn-outline-info\"\n                >\n                  {`\\u2709`} Message me\n                </Link>\n              )}\n            </h1>\n\n            <AboutMe\n              sameUser={sameUser}\n              user={this.props.user}\n              state={this.state}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              cancel={this.cancel}\n              updateAboutMe={this.updateAboutMe}\n            />\n          </Col>\n\n          <Col md={5}>\n            <OfferStuff\n              sameUser={sameUser}\n              offerStuff={this.state.offerStuff}\n              showOfferStuffForm={this.state.showOfferStuffForm}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              stuffInput={this.state.stuffInput}\n              handleSubmitOfferStuff={this.handleSubmitOfferStuff}\n              deleteStuff={this.deleteStuff}\n            />\n            <p className=\"mt-md-5\"></p>\n            <OfferService\n              sameUser={sameUser}\n              offerService={this.state.offerService}\n              showOfferServiceForm={this.state.showOfferServiceForm}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              serviceInput={this.state.serviceInput}\n              handleSubmitOfferService={this.handleSubmitOfferService}\n              deleteService={this.deleteService}\n            />\n          </Col>\n          <Col md={7}>\n            <Reference\n              sameUser={sameUser}\n              user={this.props.user}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              cancelReferenceChange={this.cancelReferenceChange}\n              firstAddRef={this.firstAddRef}\n              addReference={this.addReference}\n              showReferenceForm={this.state.showReferenceForm}\n              showReferenceAlert={this.state.showReferenceAlert}\n              rating={this.state.rating}\n              referenceInput={this.state.referenceInput}\n              creditInput={this.state.creditInput}\n              reference={this.state.reference}\n              showNotEnoughCredit={this.state.showNotEnoughCredit}\n              showNeedtoWriteSth={this.state.showNeedtoWriteSth}\n              authorCredits={this.state.authorCredits}\n              profileOwner={this.state.username}\n              handleRefChange={this.handleRefChange}\n              handleCreditChange={this.handleCreditChange}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ProfileDetails;\n","import React, { Fragment, Component } from \"react\";\nimport { Button, Alert, Container, Row, Col } from \"react-bootstrap\";\n\nexport default class DeleteButton extends Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col md={{ offset: 10 }}>\n            <Button\n              onClick={this.props.toggleAlertFunction}\n              variant=\"outline-danger\"\n            >\n              {`\\u2715`} Delete\n            </Button>\n          </Col>\n\n          <Col md={{ offset: 6 }}>\n            {this.props.showDeleteAlert && (\n              <Alert variant=\"danger\">\n                {this.props.alertMessage}\n                <Button\n                  onClick={this.props.deleteFunction}\n                  variant=\"outline-danger\"\n                >\n                  Confirm\n                </Button>\n                <Button\n                  onClick={this.props.toggleAlertFunction}\n                  variant=\"outline-danger\"\n                >\n                  Cancel\n                </Button>\n              </Alert>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\n// how to use:\n/*\n<DeleteButton \nalertMessage ={yr alert msg} \ntoggleAlertFunction={function to toggle alert display} \ndeleteFunction={axios delete Function}/>\nshowDeleteAlert={this.state.showDeleteAlert}\n*/\n","import React, { Component } from \"react\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p>\n          {`\\u24B8`} 2019 &nbsp;\n          <a\n            className=\"footer-link\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/in/johanna-geissler/\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-linkedin\"></i> Hanna Geißler\n          </a>\n          &nbsp;&nbsp;\n          <a\n            className=\"footer-link\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/in/shanwong29/\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-linkedin\"></i> Kam Shan Wong\n          </a>\n        </p>\n        <p>\n          Full code in our &nbsp;{\" \"}\n          <a\n            className=\"footer-link\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/shanwong29/Kiez\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-github\"></i> Github Repository\n          </a>\n        </p>\n      </footer>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport AddEvent from \"./components/events/AddEvent\";\nimport EventDetails from \"./components/events/EventDetails\";\nimport MyEvents from \"./components/events/MyEvents\";\nimport EventsGoing from \"./components/events/EventsGoing\";\nimport SearchResult from \"./components/SearchResult\";\nimport Messenger from \"./components/Messenger\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport ProfileDetails from \"./components/profiles/ProfileDetails\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\";\n// import { socketIn, socketOut } from \"../socket/socket-io\";\n\nimport socketIOClient from \"socket.io-client\";\n\n// socket client for new messages\nconst endpoint = process.env.PORT; //socket\nconst socket = socketIOClient(endpoint);\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n    allUsers: [],\n    // filteredUsers: [],\n    allEvents: [],\n    // filteredEvents: [],\n    select: \"\",\n    searchInput: \"\",\n    selectInputfield: \"\",\n    searchInputfield: \"\",\n    showNewsfeed: true,\n    showMyEvents: false,\n    showEventsGoing: false,\n    showNextEvents: false,\n    // messenger\n    sender: this.props.user._id,\n    reciever: \"\",\n    chatMsg: [],\n    // chatNeighborId: null\n    chatInput: \"\",\n    recieverAction: \"\"\n  };\n\n  handleChangeNav = object => {\n    this.setState(object);\n    this.getAllUser();\n    this.getAllEvents();\n  };\n\n  setUser = user => {\n    this.setState({\n      user: user\n    });\n  };\n\n  // setRecieverAction = message => {\n  //   this.setState({\n  //     recieverAction: message\n  //   });\n  // };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  componentDidMount() {\n    this.getAllUser();\n    this.getAllEvents();\n    this.getMsg();\n\n    socket.on(\"message\", data => {\n      console.log(\"socket received emitted msg:\", data);\n      // this.setState({\n      //   socketResponse: msg\n      // });\n      this.getMsg();\n    });\n  }\n\n  getAllUser = () => {\n    axios\n      .get(\"/api/user\")\n      .then(response => {\n        this.setState({\n          allUsers: response.data\n        });\n        console.log(response);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  getAllEvents = () => {\n    axios\n      .get(\"/api/events/myevents\")\n      .then(response => {\n        this.setState({\n          allEvents: response.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  getMsg = () => {\n    axios\n      .get(\"/api/chat/chat-msg\")\n      .then(response => {\n        this.setState(\n          {\n            chatMsg: response.data,\n            chatInput: \"\"\n            // chatNeighborId: chatNeighborId\n          },\n          () => console.log(\"our chat array/////\", this.state.chatMsg)\n        );\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChatInputSubmit = (e, recieverId) => {\n    e.preventDefault();\n    if (!this.state.chatInput) {\n      return;\n    }\n    axios\n      .post(\"/api/chat/chat-msg\", {\n        chatMsg: this.state.chatInput,\n        // sender: this.props.user._id,\n        reciever: recieverId\n      })\n      .then(res => {\n        socket.send(res.data);\n        this.getMsg();\n      })\n      // .then(() => {\n      //   this.setState({ chatMsg: \"\" });\n      // })\n      .catch(err => console.log(err));\n  };\n\n  // setFilteredUsers = result => {\n  //   this.setState({\n  //     allUsers: result\n  //   });\n  // };\n\n  // setFilteredEvents = result => {\n  //   this.setState({\n  //     allEvents: result\n  //   });\n  // };\n\n  handleQuery = (e, history) => {\n    e.preventDefault();\n    if (!this.state.selectInputfield) {\n      return;\n    }\n    this.getAllUser();\n    this.setState({\n      searchInput: this.state.searchInputfield,\n      select: this.state.selectInputfield\n    });\n\n    if (history) {\n      console.log(history);\n      history.push(\"/search-result\");\n    }\n  };\n\n  render() {\n    console.log(\"USER-INFO:\", this.state.user);\n    return (\n      <div className=\"App\">\n        <Route\n          render={routerProps => {\n            console.log(routerProps);\n            return (\n              <Navbar\n                user={this.state.user}\n                clearUser={this.setUser}\n                select={this.state.select}\n                searchInput={this.state.searchInput}\n                selectInputfield={this.state.selectInputfield}\n                searchInputfield={this.state.searchInputfield}\n                handleChange={this.handleChange}\n                handleQuery={this.handleQuery}\n                getAllUser={this.getAllUser}\n                history={routerProps.history}\n                handleChangeNav={this.handleChangeNav}\n                showNewsfeed={this.state.showNewsfeed}\n                showMyEvents={this.state.showMyEvents}\n                showEventsGoing={this.state.showEventsGoing}\n                showNextEvents={this.state.showNextEvents}\n              />\n            );\n          }}\n        />\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\" //it s Home Page\n            render={props => {\n              if (this.state.user) {\n                return (\n                  <Home\n                    {...props}\n                    user={this.state.user}\n                    getAllEvents={this.getAllEvents}\n                    allEvents={this.state.allEvents}\n                    state={this.state}\n                    allEvents={this.state.allEvents}\n                    showNewsfeed={this.state.showNewsfeed}\n                    showMyEvents={this.state.showMyEvents}\n                    showEventsGoing={this.state.showEventsGoing}\n                    showNextEvents={this.state.showNextEvents}\n                    handleChangeNav={this.handleChangeNav}\n                    chatMsg={this.state.chatMsg}\n                  />\n                );\n              } else {\n                return <Redirect to=\"/signup\" />;\n              }\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/search-result\"\n            render={routerProps => (\n              <SearchResult\n                {...routerProps}\n                user={this.state.user}\n                allUsers={this.state.allUsers}\n                select={this.state.select}\n                searchInput={this.state.searchInput}\n                // bigCircle={this.state.bigCircle}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/messenger/:neighborId\"\n            render={props => (\n              <Messenger\n                {...props}\n                allUsers={this.state.allUsers}\n                user={this.state.user}\n                chatMsg={this.state.chatMsg}\n                chatInput={this.state.chatInput}\n                handleChange={this.handleChange}\n                handleChatInputSubmit={this.handleChatInputSubmit}\n                getMsg={this.getMsg}\n                setRecieverAction={this.setRecieverAction}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/signup\"\n            render={props => <Signup {...props} setUser={this.setUser} />}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={props => <Login {...props} setUser={this.setUser} />}\n          />\n\n          <Route\n            exact\n            path=\"/:username\"\n            render={props => (\n              <ProfileDetails\n                {...props}\n                user={this.state.user}\n                allUsers={this.state.allUsers}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/events/create\"\n            render={props => (\n              <AddEvent {...props} getAllEvents={this.getAllEvents} />\n            )}\n          />\n\n          {/* <Route\n            exact\n            path=\"/events/myevents\"\n            render={props => <MyEvents {...props} state={this.state} />}\n          /> */}\n\n          {/* <Route\n            exact\n            path=\"/events/going\"\n            render={props => (\n              <EventsGoing\n                {...props}\n                user={this.state.user}\n                allEvents={this.state.allEvents}\n              />\n            )}\n          /> */}\n\n          <Route\n            exact\n            path=\"/events/:id\"\n            render={props => (\n              <EventDetails\n                {...props}\n                state={this.state}\n                user={this.state.user}\n                allUsers={this.state.allUsers}\n                getAllEvents={this.getAllEvents}\n              />\n            )}\n          />\n        </Switch>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  const user = response.data;\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}