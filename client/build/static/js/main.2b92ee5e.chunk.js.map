{"version":3,"sources":["services/auth.js","components/Navbar.js","components/events/EventOverview.js","services/general-functions.js","components/events/MyEvents.js","components/posts/AddPost.js","services/distance.js","components/posts/PostList.js","components/posts/Newsfeed.js","components/events/EventsGoing.js","components/events/NextEvents.js","components/Home.js","services/upload-img.js","components/events/EventPic.js","components/events/AddEvent.js","components/events/Guestlist.js","components/events/CommentList.js","components/events/AddComment.js","components/events/Comments.js","components/events/EventDetails.js","components/SearchResult.js","components/MessengerNav.js","components/ChatArea.js","components/Messenger.js","components/Signup.js","components/Login.js","components/profiles/AboutMe.js","components/profiles/ProfilePic.js","components/profiles/OfferService.js","components/profiles/OfferStuff.js","components/profiles/ReferenceCard.js","components/profiles/Reference.js","components/profiles/ProfileDetails.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","street","houseNumber","city","postalCode","axios","post","then","response","data","catch","err","login","Navbar","props","className","to","id","onClick","handleChangeNav","showNewsfeed","showMyEvents","showEventsGoing","showNextEvents","user","Form","onSubmit","event","handleQuery","history","name","onChange","handleChange","value","selectInputfield","type","placeholder","searchInputfield","Button","variant","Fragment","delete","clearUser","EventOverview","numOfPplGoingDisplay","hostInfo","creater","join","length","pastEvent","Container","key","_id","Row","Col","xs","md","src","imageUrl","width","alt","date","slice","time","address","formattedAddress","height","getFormattedDate","queryDate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","futureEventCheck","dateFromDatabase","timeFromDatabase","isFutureEvent","eventDate","Date","eventTimeArr","split","hh","Number","setHours","getDateWithTime","MyEvents","myEvents","state","allEvents","filter","sort","a","b","dateA","dateB","map","index","pastEvents","AddPost","description","handleFormSubmit","e","preventDefault","trim","getAllEvents","setState","console","log","target","this","Group","Control","as","rows","Component","distance","coordinates1","coordinates2","dx","lng","dy","lat","Math","sqrt","toFixed","PostList","postList","coordinates","formattedDate","month","0","1","2","3","4","5","6","7","8","9","10","11","widht","res","item","Newsfeed","EventsGoing","eventsGoing","includes","NextEvents","nextEvents","Home","userChatMsg","chatNeighborId","chatMsg","lastMsg","el","sender","reciever","sm","style","textAlign","handleUpload","theFile","EventPic","handleFileUpload","AddEvent","photoMessage","inputWarning","errMessage","push","chosenFile","files","size","indexOf","uploadData","FormData","append","uploadOn","secure_url","lg","Label","htmlFor","required","min","Guestlist","userJoins","handleClick","put","getSingleEvent","componentDidMount","joinedUsers","isHost","CommentList","commentList","comments","comment","author","commentId","content","AddComment","eventId","Comments","EventDetails","editForm","dateForForm","timeForForm","params","match","get","responseFromApi","originalImage","deleteEvent","toggleEdit","isSameUser","allUsers","SearchResult","neighbor","loggedInUserLocation","otherUserLocation","sortedNeighbor","distanceA","distanceB","searchWord","searchInput","select","offerService","toLowerCase","offerStuff","displayService","displayOfferStuff","neighborCards","eachDistance","textDecoration","color","credits","margin","MessengerNav","navInfo","nameOrder","forEach","neighborId","msg","timeStamp","createdAt","monthEng","12","nameOrderUnique","Set","reverse","navDisplay","Array","from","monthNum","lastMessage","ChatArea","chatAreaMsg","chatAreaDisplay","message","neighborName","neighborPic","selectedUser","backgroundColor","handleChatInputSubmit","chatInput","Messenger","fluid","Signup","error","handleSubmit","isValidUserName","test","setUser","Alert","Login","AboutMe","sameUser","showAboutMeForm","toggleForm","updateAboutMe","aboutMe","cancelEditAboutMe","ProfilePic","canUpdateImg","handleSubmitFile","handleFileChange","OfferService","services","showOfferServiceForm","deleteService","listStyleType","handleSubmitOfferService","serviceInput","OfferStuff","stuff","showOfferStuffForm","deleteStuff","handleSubmitOfferStuff","stuffInput","ReferenceCard","reference","stars","repeat","rating","fontStyle","fontSize","Reference","createdRef","showReferenceForm","authorCredits","showNotEnoughCredit","showNeedtoWriteSth","addReference","showReferenceAlert","ref","domEl","profileOwner","step","handleCreditChange","creditInput","count","handleRatingChange","half","color2","handleRefChange","referenceInput","cancelEditReference","ProfileDetails","following","showAddressForm","showDeleteAlert","addressInvalidMsg","originalImgUrl","getData","status","obj","updateAddress","cancelEditAddress","deleteItem","parseInt","recievedCredit","axiosCreateRef","axiosUpdateProfileOwnerCredits","axiosUpdateAuthorCredits","deleteAccount","toggleDelAlertFunction","prevProps","Footer","rel","href","endpoint","process","PORT","socket","socketIOClient","App","recieverAction","object","getAllUser","getMsg","recieverId","send","on","render","routerProps","exact","path","setRecieverAction","React","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2b92ee5e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst signup = (username, password, street, houseNumber, city, postalCode) => {\n  return axios\n    .post(\"/api/auth/signup\", {\n      username: username,\n      password: password,\n      street: street,\n      houseNumber: houseNumber,\n      city: city,\n      postalCode: postalCode\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", {\n      username: username,\n      password: password\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  axios.delete(\"/api/auth/logout\");\n};\n\nexport { signup, login, logout };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { logout } from \"../services/auth\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst Navbar = props => {\n  const handleLogout = () => {\n    // destroys the session on the server\n    logout();\n    // updates the `user` state in App\n    props.clearUser(null);\n\n    props.handleChangeNav({\n      showNewsfeed: true,\n      showMyEvents: false,\n      showEventsGoing: false,\n      showNextEvents: false\n    });\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light nav-menu\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        <button\n          id=\"logo-button\"\n          onClick={() =>\n            props.handleChangeNav({\n              showNewsfeed: true,\n              showMyEvents: false,\n              showEventsGoing: false,\n              showNextEvents: false\n            })\n          }\n        >\n          KieZ\n        </button>\n      </Link>\n\n      {props.user ? (\n        <div className=\"searchRow\">\n          <Form\n            className=\"input-group btn-group\"\n            onSubmit={event => props.handleQuery(event, props.history)}\n          >\n            <select\n              className=\"custom-select\"\n              name=\"selectInputfield\"\n              onChange={props.handleChange}\n              value={props.selectInputfield}\n            >\n              <option value=\"\">Select Option</option>\n              <option value=\"Neighbors\">Find by Username</option>\n              <option value=\"Help\">Find by Lend-item / Help</option>\n            </select>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"searchInputfield\"\n              placeholder=\"Find your Neighbors here\"\n              onChange={props.handleChange}\n              value={props.searchInputfield}\n            />\n\n            <div className=\"btn-group\">\n              <Button variant=\"outline-secondary\" type=\"submit\">\n                Search\n              </Button>\n            </div>\n          </Form>\n        </div>\n      ) : (\n        <React.Fragment />\n      )}\n\n      <div>\n        {props.user ? (\n          <>\n            <Link\n              className=\"btn btn-outline-success\"\n              to={`/${props.user.username}`}\n            >\n              {props.user.username}\n            </Link>\n            <Link className=\"btn btn-outline-info mx-3\" to=\"/events/create\">\n              Create Event\n            </Link>\n            <Link\n              to=\"/\"\n              onClick={handleLogout}\n              className=\"btn btn-outline-danger\"\n            >\n              Logout\n            </Link>\n          </>\n        ) : (\n          <React.Fragment>\n            <Link className=\"btn btn-outline-info mr-3\" to=\"/signup\">\n              Signup\n            </Link>\n            <Link className=\"btn btn-outline-info\" to=\"/login\">\n              Login\n            </Link>\n          </React.Fragment>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst EventOverview = props => {\n  let numOfPplGoingDisplay = \"\";\n  let hostInfo = `Hosted by ${props.event.creater.username} `;\n\n  if (props.event.join.length === 1) {\n    numOfPplGoingDisplay = `\\u2022 ${props.event.join.length} person is going \\u2022`;\n  }\n  if (props.event.join.length > 1) {\n    numOfPplGoingDisplay = `\\u2022 ${props.event.join.length} people are going \\u2022`;\n  }\n\n  if (props.pastEvent && props.event.join.length >= 1) {\n    numOfPplGoingDisplay = `\\u2022 ${props.event.join.length} person joined \\u2022`;\n  }\n\n  let eventOverview = (\n    <Container key={props.event._id} className=\"mb-3\">\n      <Link to={`/events/${props.event._id}`} className=\"event-overview-text\">\n        <Row>\n          <Col xs={12} md={5} className=\"px-0 px-md-2\">\n            <img\n              src={props.event.imageUrl}\n              className=\"overview-event-img\"\n              width=\"90%\"\n              alt={props.event.name}\n            />\n          </Col>\n          <Col xs={12} md={7} className=\"px-0 px-md-2\">\n            <h2 className=\"event-overview-heading h2-heading\">\n              {props.event.name}\n            </h2>\n            <div className=\"date\">\n              <h5 className=\"sub-heading\">\n                {props.event.date.slice(0, 10)} at{\" \"}\n                {props.event.time.slice(0, 5)}\n              </h5>\n              <h5 className=\"sub-heading\">\n                {props.event.address.formattedAddress}\n              </h5>\n            </div>\n\n            <h5 className=\"overview-host-info\">\n              <img\n                src={props.event.creater.imageUrl}\n                width=\"30\"\n                height=\"30\"\n                className=\"user-pic mx-1\"\n                alt={props.event.creater.username}\n              />\n              {hostInfo}\n              {numOfPplGoingDisplay}\n            </h5>\n          </Col>\n        </Row>\n      </Link>\n    </Container>\n  );\n\n  return eventOverview;\n};\n\nexport default EventOverview;\n","let getFormattedDate = queryDate => {\n  let dd = String(queryDate.getDate()).padStart(2, \"0\");\n  let mm = String(queryDate.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  let yyyy = queryDate.getFullYear();\n\n  queryDate = `${yyyy}-${mm}-${dd}`;\n\n  return queryDate;\n};\n\nlet futureEventCheck = (dateFromDatabase, timeFromDatabase) => {\n  if (!dateFromDatabase || !timeFromDatabase) {\n    return false;\n  }\n\n  let isFutureEvent = false;\n  let eventDate = new Date(dateFromDatabase);\n  let eventTimeArr = timeFromDatabase.split(\":\");\n  let hh = Number(eventTimeArr[0]);\n  let mm = Number(eventTimeArr[1]);\n  eventDate.setHours(hh, mm, 0);\n  let currentDate = new Date();\n\n  if (eventDate > currentDate) {\n    isFutureEvent = true;\n  }\n\n  return isFutureEvent;\n};\n\nlet getDateWithTime = (dateFromDatabase, timeFromDatabase) => {\n  let eventDate = new Date(dateFromDatabase);\n  let eventTimeArr = timeFromDatabase.split(\":\");\n  let hh = Number(eventTimeArr[0]);\n  let mm = Number(eventTimeArr[1]);\n  eventDate.setHours(hh, mm, 0);\n  return eventDate;\n};\n\nexport { getFormattedDate, futureEventCheck, getDateWithTime };\n","import React from \"react\";\nimport EventOverview from \"./EventOverview\";\nimport {\n  futureEventCheck,\n  getDateWithTime\n} from \"../../services/general-functions.js\";\n\nconst MyEvents = props => {\n  let myEvents = (\n    <div>\n      <h1 className=\"h1-heading\">My Created Events</h1>\n      <h3 className=\"event-list-h3\">Upcoming Events: </h3>\n      {props.state.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            event.creater._id === props.user._id &&\n            isFutureEvent &&\n            event.type === \"event\"\n          );\n        })\n        .sort(function(a, b) {\n          let dateA = getDateWithTime(a.date, a.time);\n          let dateB = getDateWithTime(b.date, b.time);\n          if (dateA < dateB) {\n            return -1;\n          }\n          if (dateA > dateB) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((event, index) => {\n          return <EventOverview key={index} event={event} />;\n        })}\n    </div>\n  );\n\n  let pastEvents = (\n    <div>\n      <h3 className=\"event-list-h3\">Past Events: </h3>\n      {props.state.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            event.creater._id === props.state.user._id &&\n            !isFutureEvent &&\n            event.type === \"event\"\n          );\n        })\n        .sort(function(a, b) {\n          let dateA = getDateWithTime(a.date, a.time);\n          let dateB = getDateWithTime(b.date, b.time);\n          if (dateA < dateB) {\n            return 1;\n          }\n          if (dateA > dateB) {\n            return -1;\n          }\n          return 0;\n        })\n        .map((event, index) => {\n          let pastEvent = true;\n          return (\n            <EventOverview key={index} pastEvent={pastEvent} event={event} />\n          );\n        })}\n    </div>\n  );\n\n  return (\n    <div>\n      {myEvents} {pastEvents}\n    </div>\n  );\n};\n\nexport default MyEvents;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nclass AddPost extends Component {\n  state = {\n    description: \"\",\n    imageUrl: \"\" //for future, if we want to add image to post\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const description = this.state.description;\n\n    if (description.trim() === \"\") {\n      return;\n    }\n\n    axios\n      .post(\"/api/events\", {\n        description,\n        type: \"post\",\n        date: new Date(),\n        creater: this.props.user._id,\n        street: this.props.user.address.street,\n        houseNumber: this.props.user.address.houseNumber,\n        city: this.props.user.address.city,\n        postalCode: this.props.user.address.postalCode,\n        imageUrl: this.state.imageUrl\n      })\n      .then(this.props.getAllEvents)\n      .then(this.setState({ description: \"\" }))\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChange = e => {\n    const description = e.target.value;\n    this.setState({\n      description: description\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"post-form\">\n        <Form onSubmit={this.handleFormSubmit}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              as=\"textarea\"\n              rows=\"3\"\n              name=\"description\"\n              onChange={this.handleChange}\n              value={this.state.description}\n              placeholder=\"What do you want to tell to your neighbors?\"\n            />\n          </Form.Group>\n          <div className=\"flex-end-btn\">\n            <Button type=\"submit\">Post</Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddPost;\n","const distance = (coordinates1, coordinates2) => {\n  let dx = 71.5 * (coordinates1.lng - coordinates2.lng);\n  let dy = 111.3 * (coordinates1.lat - coordinates2.lat);\n  return Math.sqrt(dx * dx + dy * dy).toFixed(1);\n};\n\nexport { distance };\n\n// // Example:\n// distance(\n//   { lat: 52.5023865, lng: 13.4062956 },\n//   { lat: 52.503706, lng: 13.410135 }\n// );\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { distance } from \"../../services/distance\";\n\nconst PostList = props => {\n  let postList = (\n    <>\n      {props.allEvents\n        .filter(\n          post =>\n            post.type === \"post\" &&\n            distance(post.address.coordinates, props.user.address.coordinates) <\n              3\n        )\n        .sort(function(a, b) {\n          return new Date(b.date) - new Date(a.date);\n        })\n        .map(post => {\n          let monthEng = {\n            0: \"Jan\",\n            1: \"Feb\",\n            2: \"Mar\",\n            3: \"Apr\",\n            4: \"May\",\n            5: \"Jun\",\n            6: \"Jul\",\n            7: \"Aug\",\n            8: \"Sep\",\n            9: \"Oct\",\n            10: \"Nov\",\n            11: \"Dec\"\n          };\n          let formattedDate = new Date(post.date);\n          let date = formattedDate.getDate();\n          let monthNum = formattedDate.getMonth();\n          let month = monthEng[monthNum];\n\n          let deletePost = id => {\n            axios\n              .delete(`/api/events/${id}`)\n              .then(res => {\n                props.getAllEvents();\n              })\n              .catch(err => {\n                console.log(err);\n              });\n          };\n\n          return (\n            <div key={post._id} className=\"post\">\n              <div>\n                <Link\n                  to={`/${post.creater.username}`}\n                  className=\"text-decoration-none\"\n                >\n                  <img\n                    src={post.creater.imageUrl}\n                    className=\"user-pic\"\n                    width=\"34\"\n                    height=\"34\"\n                    alt={post.username}\n                  />\n                  <span className=\"username\">{` ${post.creater.username}`}</span>\n                </Link>\n                <span className=\"date\">{`   ${date}. ${month} `}</span>\n\n                {post.creater.username === props.user.username ? (\n                  <button\n                    className=\"bin\"\n                    widht=\"20%\"\n                    onClick={() => deletePost(post._id)}\n                  >\n                    <i className=\"fas fa-trash-alt\"></i>\n                  </button>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n\n              <p>\n                {post.description\n                  .trim()\n                  .split(\"\\n\")\n                  .map((item, index) => {\n                    return (\n                      <span key={index}>\n                        {item}\n\n                        <br />\n                      </span>\n                    );\n                  })}\n              </p>\n            </div>\n          );\n        })}\n    </>\n  );\n  return <div>{postList}</div>;\n};\n\nexport default PostList;\n","import React, { Component } from \"react\";\nimport AddPost from \"../posts/AddPost\";\nimport PostList from \"../posts/PostList\";\n\nclass Newsfeed extends Component {\n  render() {\n    return (\n      <>\n        <AddPost user={this.props.user} getAllEvents={this.props.getAllEvents}/>\n        <PostList getAllEvents={this.props.getAllEvents} allEvents={this.props.allEvents} user={this.props.user}/>\n      </>\n    );\n  }\n}\n\nexport default Newsfeed;\n","import React from \"react\";\nimport EventOverview from \"./EventOverview\";\nimport {\n  futureEventCheck,\n  getDateWithTime\n} from \"../../services/general-functions.js\";\n\nconst EventsGoing = props => {\n  let eventsGoing = (\n    <div>\n      <h1 className=\"h1-heading\">Events I´m Joining</h1>\n      {props.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            event.join.includes(props.user._id) &&\n            event.type === \"event\" &&\n            isFutureEvent\n          );\n        })\n        .sort(function(a, b) {\n          let dateA = getDateWithTime(a.date, a.time);\n          let dateB = getDateWithTime(b.date, b.time);\n          if (dateA < dateB) {\n            return -1;\n          }\n          if (dateA > dateB) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((event, index) => {\n          return <EventOverview key={index} event={event} />;\n        })}\n    </div>\n  );\n\n  return <div>{eventsGoing}</div>;\n};\n\nexport default EventsGoing;\n","import React from \"react\";\nimport EventOverview from \"./EventOverview\";\nimport { distance } from \"../../services/distance\";\nimport {\n  futureEventCheck,\n  getDateWithTime\n} from \"../../services/general-functions.js\";\n\n//// Filter for distaance!!!!!!!!!!!!!!!!!!!!\n\nconst NextEvents = props => {\n  let nextEvents = (\n    <div>\n      <h1 className=\"h1-heading\">Upcoming Events in your Neighborhood</h1>\n\n      {props.state.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            distance(\n              props.user.address.coordinates,\n              event.address.coordinates\n            ) < 3 &&\n            isFutureEvent &&\n            event.type === \"event\"\n          );\n        })\n        .sort(function(a, b) {\n          let dateA = getDateWithTime(a.date, a.time);\n          let dateB = getDateWithTime(b.date, b.time);\n          if (dateA < dateB) {\n            return -1;\n          }\n          if (dateA > dateB) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((event, index) => {\n          return <EventOverview key={index} event={event} />;\n        })}\n    </div>\n  );\n  return <div>{nextEvents}</div>;\n};\n\nexport default NextEvents;\n","import React, { Component } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MyEvents from \"./events/MyEvents\";\nimport Newsfeed from \"./posts/Newsfeed\";\nimport EventsGoing from \"./events/EventsGoing\";\nimport NextEvents from \"./events/NextEvents\";\n\nexport default class Home extends Component {\n  render() {\n    let userChatMsg = \"\";\n    let chatNeighborId = \"\";\n    if (this.props.chatMsg.length) {\n      userChatMsg = [...this.props.chatMsg].filter(el => {\n        return (\n          el.sender._id === this.props.user._id ||\n          el.reciever._id === this.props.user._id\n        );\n      });\n      let lastMsg = userChatMsg && userChatMsg[userChatMsg.length - 1];\n      if (lastMsg) {\n        lastMsg.sender._id !== this.props.user._id\n          ? (chatNeighborId = lastMsg.sender._id)\n          : (chatNeighborId = lastMsg.reciever._id);\n      }\n    }\n\n    return (\n      <Container id=\"home\">\n        <Row className=\"nested-row\">\n          <Col md={3} sm={12} className=\"home-navbar\">\n            <div style={{ textAlign: \"center\" }}>\n              <img\n                src={`${this.props.user.imageUrl}`}\n                alt={`${this.props.user.username}`}\n                width=\"150vw\"\n                height=\"150vw\"\n                className=\"user-pic\"\n                id=\"main-page-profile-pic\"\n              />\n            </div>\n            <Row>\n              <Col md={12} xs={6}>\n                {userChatMsg.length > 0 && (\n                  <Link\n                    to={`/messenger/${chatNeighborId}`}\n                    className=\"btn btn-light home-side-nav\"\n                    id=\"home-nav-button4\"\n                  >\n                    <i className=\"fas fa-envelope\"></i> Messenger\n                  </Link>\n                )}\n              </Col>\n\n              <Col md={12} xs={6}>\n                <Button\n                  className=\"home-side-nav\"\n                  id=\"home-nav-button1\"\n                  variant=\"light\"\n                  onClick={() => {\n                    this.props.handleChangeNav({\n                      showNewsfeed: false,\n                      showMyEvents: true,\n                      showEventsGoing: false,\n                      showNextEvents: false\n                    });\n                  }}\n                >\n                  My created events\n                </Button>\n              </Col>\n\n              <Col md={12} xs={6}>\n                <Button\n                  className=\"home-side-nav\"\n                  id=\"home-nav-button2\"\n                  variant=\"light\"\n                  onClick={() =>\n                    this.props.handleChangeNav({\n                      showNewsfeed: false,\n                      showMyEvents: false,\n                      showEventsGoing: true,\n                      showNextEvents: false\n                    })\n                  }\n                >\n                  Events I´m joining\n                </Button>\n              </Col>\n\n              <Col md={12} xs={6}>\n                <Button\n                  className=\"home-side-nav\"\n                  id=\"home-nav-button3\"\n                  variant=\"light\"\n                  onClick={() => {\n                    this.props.handleChangeNav({\n                      showNewsfeed: false,\n                      showMyEvents: false,\n                      showEventsGoing: false,\n                      showNextEvents: true\n                    });\n                  }}\n                >\n                  All future events\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col md={9} id=\"newsfeed\">\n            {this.props.showNewsfeed && (\n              <Newsfeed\n                user={this.props.user}\n                allEvents={this.props.allEvents}\n                getAllEvents={this.props.getAllEvents}\n              />\n            )}\n            {this.props.showMyEvents && (\n              <MyEvents state={this.props.state} user={this.props.user} />\n            )}\n            {this.props.showEventsGoing && (\n              <EventsGoing\n                user={this.props.user}\n                allEvents={this.props.allEvents}\n              />\n            )}\n            {this.props.showNextEvents && (\n              <NextEvents state={this.props.state} user={this.props.user} />\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import axios from \"axios\";\n\nconst handleUpload = theFile => {\n  return axios\n    .post(\"/api/upload\", theFile)\n    .then(response => response.data)\n    .catch(err => err.response.data);\n};\n\nexport { handleUpload };\n","import React, { Component, Fragment } from \"react\";\n\nexport default class EventPic extends Component {\n  render() {\n    return (\n      <Fragment>\n        <img src={this.props.imageUrl} alt=\"event-img\" width=\"100%\" />\n        <input type=\"file\" onChange={this.props.handleFileUpload} />\n      </Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { handleUpload } from \"../../services/upload-img\";\nimport EventPic from \"./EventPic\";\nimport { getFormattedDate } from \"../../services/general-functions.js\";\n\nclass AddEvent extends Component {\n  state = {\n    type: \"event\",\n    name: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    date: \"\",\n    time: \"\",\n    description: \"\",\n    imageUrl:\n      \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\",\n    photoMessage: null,\n    inputWarning: null\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    let street = this.state.street.trim();\n    let city = this.state.city.trim();\n    let houseNumber = this.state.houseNumber.trim();\n    if (!city || !street || !houseNumber) {\n      this.setState({\n        inputWarning:\n          \"* The street, city and house number input should contain valid characters\"\n      });\n      return;\n    }\n\n    const {\n      name,\n\n      postalCode,\n      date,\n      time,\n      imageUrl,\n      description\n    } = this.state;\n\n    axios\n      .post(\"/api/events\", {\n        type: \"event\",\n        name,\n        street,\n        houseNumber,\n        city,\n        postalCode,\n        date,\n        time,\n        imageUrl,\n        description\n      })\n      .then(res => {\n        if (res.data.errMessage) {\n          this.setState({\n            inputWarning: `* ${res.data.errMessage}`\n          });\n\n          return;\n        }\n        this.props.history.push(`/events/${res.data._id}`); // Redirect\n      })\n      .then(this.props.getAllEvents) // to update the eventslist -> so we have the new created event there\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFileUpload = e => {\n    let imgSizeLimit = 5000000; //5MB\n    let allowedFormat = [\"image/jpeg\", \"image/png\"];\n    let chosenFile = e.target.files[0];\n\n    if (!chosenFile) {\n      this.setState({\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\"\n      });\n      return;\n    }\n\n    if (chosenFile.size > imgSizeLimit) {\n      this.setState({\n        photoMessage: \"* Size of image should be less than 5MB\",\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\"\n      });\n      return;\n    }\n\n    if (allowedFormat.indexOf(chosenFile.type) < 0) {\n      this.setState({\n        photoMessage: \"* Format of image should be jpeg or png\",\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\"\n      });\n      return;\n    }\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n    this.setState({ uploadOn: true, photoMessage: \"\" });\n    handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imageUrl: response.secure_url,\n          uploadOn: false\n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  render() {\n    return (\n      <Container className=\"container event-form-container mt-2 mb-5\">\n        <h1 className=\"mx-2 h1-heading\">\n          Create an event for your neighborhood\n        </h1>\n        <Row>\n          <Col md={5} lg={4} className=\"event-form-img-container\">\n            <EventPic\n              imageUrl={this.state.imageUrl}\n              handleFileUpload={this.handleFileUpload}\n            />\n            <p className=\"warning\">{this.state.photoMessage}</p>\n          </Col>\n\n          <Col md={7} lg={8}>\n            <Form\n              onSubmit={this.handleFormSubmit}\n              className=\"row mx-lg-5 mt-lg-4\"\n            >\n              <Form.Group className=\"col-12\">\n                {this.state.inputWarning && (\n                  <p className=\"warning\">{this.state.inputWarning}</p>\n                )}\n                <Form.Label htmlFor=\"name\">Name: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.handleChange}\n                  value={this.state.name}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-8\">\n                <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"street\"\n                  id=\"street\"\n                  onChange={this.handleChange}\n                  value={this.state.street}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-4\">\n                <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"houseNumber\"\n                  id=\"houseNumber\"\n                  onChange={this.handleChange}\n                  value={this.state.houseNumber}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-8\">\n                <Form.Label htmlFor=\"city\">City: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  id=\"city\"\n                  onChange={this.handleChange}\n                  value={this.state.city}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-4\">\n                <Form.Label htmlFor=\"postalCode\">Postalcode: </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"postalCode\"\n                  min=\"0\"\n                  id=\"postalCode\"\n                  onChange={this.handleChange}\n                  value={this.state.postalCode}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-6\">\n                <Form.Label htmlFor=\"date\">Date: </Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"date\"\n                  id=\"date\"\n                  min={getFormattedDate(new Date())}\n                  onChange={this.handleChange}\n                  value={this.state.date}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-6\">\n                <Form.Label htmlFor=\"time\">Time: </Form.Label>\n                <Form.Control\n                  type=\"time\"\n                  name=\"time\"\n                  id=\"time\"\n                  onChange={this.handleChange}\n                  value={this.state.time}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-12\">\n                <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  as=\"textarea\"\n                  rows=\"3\"\n                  name=\"description\"\n                  id=\"description\"\n                  onChange={this.handleChange}\n                  value={this.state.description}\n                />\n              </Form.Group>\n              <div className=\"col-12 flex-end-btn\">\n                <Button type=\"submit\">Create an Event</Button>\n              </div>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AddEvent;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nclass Guestlist extends Component {\n  state = {\n    userJoins: null\n  };\n\n  handleClick = () => {\n    this.setState(\n      {\n        userJoins: !this.state.userJoins\n      },\n      () => {\n        axios\n          .put(\"/api/events/eventUpdate\", {\n            event: this.props.event,\n            userJoins: this.state.userJoins\n          })\n          .then(() => {\n            this.props.getSingleEvent();\n            this.props.getAllEvents();\n          });\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    const inEvent = this.props.joinedUsers.filter(el => {\n      return el._id === this.props.user._id;\n    });\n\n    if (inEvent.length) {\n      this.setState({ userJoins: true });\n    } else {\n      this.setState({ userJoins: false });\n    }\n  };\n\n  render() {\n    let isHost = false;\n    if (this.props.event.creater._id === this.props.user._id) {\n      isHost = true;\n    }\n\n    return (\n      <Container id=\"join-info\">\n        <h4 className=\"sub-heading\">\n          Host: {\"    \"}\n          <Link\n            to={`/${this.props.event.creater.username}`}\n            className=\"text-decoration-none\"\n          >\n            <img\n              className=\"user-pic guest-pic\"\n              src={this.props.event.creater.imageUrl}\n              alt={this.props.event.creater.username}\n            />{\" \"}\n            <span className=\"username\">\n              {this.props.event.creater.username}{\" \"}\n            </span>\n          </Link>\n        </h4>\n        {!isHost && this.props.isFutureEvent && (\n          <Button\n            variant=\"light\"\n            onClick={this.handleClick}\n            id={`${this.state.userJoins ? \"joined-button\" : \"join-button\"}`}\n          >\n            {this.state.userJoins ? (\n              <i className=\"fas fa-user-friends\"></i>\n            ) : (\n              <i className=\"fas fa-user-alt\"></i>\n            )}{\" \"}\n            {this.state.userJoins ? \"Joined\" : \"Join\"}\n          </Button>\n        )}\n        <Row id=\"guest-list-row\">\n          {this.props.joinedUsers.map(el => {\n            return (\n              <Col xs={2} md={3} lg={2} className=\"guest\" key={el._id}>\n                <Link to={`/${el.username}`} className=\"text-decoration-none\">\n                  <img\n                    className=\"user-pic guest-pic\"\n                    src={el.imageUrl}\n                    alt={el.username}\n                  />{\" \"}\n                  <p className=\"username mb-0\">{el.username}</p>\n                </Link>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Guestlist;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst CommentList = props => {\n  let commentList = (\n    <>\n      {props.event.comments\n        .sort(function(a, b) {\n          return new Date(a.date) - new Date(b.date);\n        })\n        .map(comment => {\n          let deleteComment = commentId => {\n            axios\n              .put(`/api/comments/${props.event._id}`, { commentId: commentId })\n              .then(() => {\n                props.getSingleEvent();\n                props.getAllEvents();\n              });\n          };\n\n          return (\n            <div key={comment._id} className=\"comment-box\">\n              <div>\n                <Link\n                  to={`/${comment.author.username}`}\n                  className=\"text-decoration-none\"\n                >\n                  <img\n                    src={comment.author.imageUrl}\n                    className=\"user-pic\"\n                    width=\"40\"\n                    height=\"40\"\n                    alt={comment.author.username}\n                  />{\" \"}\n                  <span className=\"username\">{comment.author.username}</span>\n                </Link>\n                {comment.author.username === props.user.username ? (\n                  <button\n                    className=\"bin\"\n                    widht=\"20%\"\n                    onClick={() => deleteComment(comment._id)}\n                  >\n                    <i className=\"fas fa-trash-alt\"></i>\n                  </button>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              <p>\n                {comment.content\n                  .trim()\n                  .split(\"\\n\")\n                  .map((item, index) => {\n                    return (\n                      <span key={index}>\n                        {item}\n\n                        <br />\n                      </span>\n                    );\n                  })}\n              </p>\n            </div>\n          );\n        })}\n    </>\n  );\n\n  return props.event ? <div>{commentList}</div> : <div></div>;\n};\nexport default CommentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nclass AddComment extends Component {\n  state = {\n    content: \"\"\n  };\n\n  handleChange = e => {\n    const content = e.target.value;\n    this.setState({\n      content: content\n    });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const content = this.state.content.trim();\n\n    if (!content) {\n      return;\n    }\n\n    axios\n      .post(`/api/comments/${this.props.eventId}`, {\n        content,\n        date: new Date(),\n        author: this.props.user._id\n      })\n      .then(this.props.getAllEvents)\n      .then(this.setState({ content: \"\" }))\n      .then(() => {\n        this.props.getSingleEvent();\n        this.props.getAllEvents();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleFormSubmit}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              as=\"textarea\"\n              rows=\"3\"\n              name=\"content\"\n              onChange={this.handleChange}\n              value={this.state.content}\n              placeholder=\"write a comment or question\"\n            />\n          </Form.Group>\n          <div className=\"flex-end-btn\">\n            <Button type=\"submit\">Send</Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddComment;\n","import React, { Component } from \"react\";\nimport CommentList from \"./CommentList\";\nimport AddComment from \"./AddComment\";\n\nclass Comments extends Component {\n  render() {\n    return (\n      <>\n        <CommentList\n          user={this.props.user}\n          event={this.props.event}\n          getSingleEvent={this.props.getSingleEvent}\n          getAllEvents={this.props.getAllEvents}\n        />\n        <AddComment\n          user={this.props.user}\n          eventId={this.props.eventId}\n          getSingleEvent={this.props.getSingleEvent}\n          getAllEvents={this.props.getAllEvents}\n        />\n      </>\n    );\n  }\n}\n\nexport default Comments;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { handleUpload } from \"../../services/upload-img\";\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\nimport EventPic from \"./EventPic\";\nimport Guestlist from \"./Guestlist\";\nimport Comments from \"./Comments\";\nimport {\n  getFormattedDate,\n  futureEventCheck\n} from \"../../services/general-functions.js\";\n\nclass EventDetails extends Component {\n  state = {\n    editForm: false,\n    event: {},\n\n    name: \"\",\n    address: null,\n    imageUrl: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    date: \"\",\n    time: \"\",\n    description: \"\",\n\n    dateForForm: \"\",\n    timeForForm: \"\",\n    photoMessage: null,\n    inputWarning: null\n  };\n\n  getSingleEvent = () => {\n    const { params } = this.props.match;\n    axios\n      .get(`/api/events/${params.id}`)\n      .then(responseFromApi => {\n        let eventTimeArr = responseFromApi.data.time.split(\":\");\n        let hh = eventTimeArr[0];\n        let mm = eventTimeArr[1];\n\n        let timeForForm = `${hh}:${mm}:00`;\n\n        this.setState({\n          event: responseFromApi.data,\n          name: responseFromApi.data.name,\n          address: responseFromApi.data.address,\n          street: responseFromApi.data.address.street,\n          houseNumber: responseFromApi.data.address.houseNumber,\n          city: responseFromApi.data.address.city,\n          postalCode: responseFromApi.data.address.postalCode,\n          date: responseFromApi.data.date,\n          time: responseFromApi.data.time,\n          imageUrl: responseFromApi.data.imageUrl,\n          description: responseFromApi.data.description,\n          originalImage: responseFromApi.data.imageUrl,\n          dateForForm: getFormattedDate(new Date(responseFromApi.data.date)),\n          timeForForm\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getSingleEvent();\n  }\n\n  deleteEvent = () => {\n    const id = this.state.event._id;\n    axios\n      .delete(`/api/events/${id}`)\n      .then(response => {\n        this.props.history.push(\"/\");\n      })\n      .then(this.props.getAllEvents)\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  toggleEdit = () => {\n    this.setState({\n      editForm: !this.state.editForm\n    });\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleFileUpload = e => {\n    let imgSizeLimit = 5000000; //5MB\n    let allowedFormat = [\"image/jpeg\", \"image/png\"];\n    let chosenFile = e.target.files[0];\n\n    if (!chosenFile) {\n      this.setState({\n        imageUrl: this.state.originalImage\n      });\n      return;\n    }\n\n    if (chosenFile.size > imgSizeLimit) {\n      this.setState({\n        photoMessage: \"* Size of image should be less than 5MB\",\n        imageUrl: this.state.originalImage\n      });\n      return;\n    }\n\n    if (allowedFormat.indexOf(chosenFile.type) < 0) {\n      this.setState({\n        photoMessage: \"* Format of image should be jpeg or png\",\n        imageUrl: this.state.originalImage\n      });\n      return;\n    }\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.setState({ uploadOn: true, photoMessage: \"\" });\n    handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imageUrl: response.secure_url,\n          uploadOn: false\n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    const id = this.props.match.params.id;\n    const date = this.state.dateForForm;\n    const time = this.state.timeForForm;\n\n    let street = this.state.street.trim();\n    let houseNumber = this.state.houseNumber.trim();\n    let city = this.state.city.trim();\n    if (!street || !city || !houseNumber) {\n      this.setState({\n        inputWarning:\n          \"* The street, city and house number input should contain valid characters\"\n      });\n      return;\n    }\n\n    const {\n      name,\n\n      postalCode,\n      imageUrl,\n      description\n    } = this.state;\n\n    axios\n      .put(`/api/events/${id}`, {\n        name,\n        street,\n        houseNumber,\n        city,\n        postalCode,\n        imageUrl,\n        date,\n        time,\n        description\n      })\n      .then(response => {\n        if (response.data.errMessage) {\n          this.setState({\n            inputWarning: `* ${response.data.errMessage}`\n          });\n\n          return;\n        }\n\n        const {\n          name,\n          address,\n          imageUrl,\n          date,\n          time,\n          description\n        } = response.data;\n\n        this.setState(\n          {\n            editForm: false,\n            event: response.data,\n            name,\n            address,\n            imageUrl,\n            date,\n            time,\n            description,\n            inputWarning: \"\",\n            photoMessage: \"\"\n          },\n          () => {\n            this.getSingleEvent();\n          }\n        );\n      })\n\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (!this.state.date) {\n      return <div className=\"event-detail-page\"></div>;\n    }\n    if (this.state.event.type !== \"event\") {\n      return (\n        <div className=\"event-detail-page\">\n          <h1>Sorry, this page isn't available.</h1>\n          <p>\n            The link you used may be broken, or the page may have been removed.\n          </p>\n        </div>\n      );\n    }\n\n    let description = this.state.description;\n\n    let isFutureEvent = futureEventCheck(this.state.date, this.state.time);\n\n    let isSameUser = false;\n\n    if (this.state.event.creater._id === this.props.state.user._id) {\n      isSameUser = true;\n    }\n\n    if (this.state.editForm === false) {\n      return (\n        <Container className=\"mt-2 mt-md-5 event-detail-page\">\n          <div className=\"d-flex justify-content-end mb-2 mb-md-4\">\n            {isFutureEvent && isSameUser && (\n              <Button\n                variant=\"outline-info\"\n                className=\"mx-2\"\n                onClick={this.toggleEdit}\n              >\n                {`\\u270E`} Edit event\n              </Button>\n            )}\n\n            {isSameUser && (\n              <Button variant=\"outline-danger\" onClick={this.deleteEvent}>\n                {`\\u2715`} Delete event\n              </Button>\n            )}\n          </div>\n\n          <Row>\n            <Col xs={12} md={6}>\n              <img\n                src={this.state.imageUrl}\n                className=\"event-img\"\n                alt={this.state.name}\n              />\n            </Col>\n            <Col xs={12} md={6}>\n              <h1 className=\"h1-heading\">{this.state.name}</h1>\n              <h5 className=\"date sub-heading\">\n                {this.state.date.slice(0, 10)} at {this.state.time.slice(0, 5)}\n              </h5>\n              <h5 className=\"date sub-heading\">\n                {this.state.address.formattedAddress}\n              </h5>\n              <p>\n                {description\n                  .trim()\n                  .split(\"\\n\")\n                  .map((item, index) => {\n                    return (\n                      <span key={index}>\n                        {item}\n\n                        <br />\n                      </span>\n                    );\n                  })}\n              </p>\n            </Col>\n          </Row>\n\n          <Row className=\"mt-md-5\">\n            <Col xs={12} md={6}>\n              <Guestlist\n                event={this.state.event}\n                joinedUsers={this.state.event.join}\n                user={this.props.user}\n                allUsers={this.props.allUsers}\n                getSingleEvent={this.getSingleEvent}\n                getAllEvents={this.props.getAllEvents}\n                isFutureEvent={isFutureEvent}\n              />\n            </Col>\n            <Col xs={12} md={6} id=\"comment-area\">\n              <Comments\n                user={this.props.user}\n                eventId={this.props.match.params.id}\n                event={this.state.event}\n                getSingleEvent={this.getSingleEvent}\n                getAllEvents={this.props.getAllEvents}\n              />\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n\n    if (this.state.editForm === true) {\n      return (\n        <Container className=\"container event-form-container mt-2 mb-5\">\n          <h1>Edit event</h1>\n          <Row>\n            <Col md={5} lg={4} className=\"event-form-img-container\">\n              <EventPic\n                imageUrl={this.state.imageUrl}\n                handleFileUpload={this.handleFileUpload}\n              />\n              {this.state.photoMessage && (\n                <p className=\"warning\">{this.state.photoMessage}</p>\n              )}\n            </Col>\n\n            <Col md={7} lg={8}>\n              <Form onSubmit={this.handleFormSubmit} className=\"row mx-lg-5\">\n                <Form.Group className=\"col-12\">\n                  {this.state.inputWarning && (\n                    <p className=\"warning\">{this.state.inputWarning}</p>\n                  )}\n                  <Form.Label htmlFor=\"name\">Name: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    onChange={this.handleChange}\n                    value={this.state.name}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-8\">\n                  <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"street\"\n                    id=\"street\"\n                    onChange={this.handleChange}\n                    value={this.state.street}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-4\">\n                  <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"houseNumber\"\n                    id=\"houseNumber\"\n                    onChange={this.handleChange}\n                    value={this.state.houseNumber}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-8\">\n                  <Form.Label htmlFor=\"city\">City: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"city\"\n                    onChange={this.handleChange}\n                    value={this.state.city}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-4\">\n                  <Form.Label htmlFor=\"postalCode\">Postalcode: </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    name=\"postalCode\"\n                    id=\"postalCode\"\n                    onChange={this.handleChange}\n                    value={this.state.postalCode}\n                    min=\"0\"\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"date\">Date: </Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    name=\"dateForForm\"\n                    id=\"date\"\n                    min={getFormattedDate(new Date())}\n                    onChange={this.handleChange}\n                    value={this.state.dateForForm}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"time\">Time: </Form.Label>\n                  <Form.Control\n                    type=\"time\"\n                    name=\"timeForForm\"\n                    id=\"time\"\n                    onChange={this.handleChange}\n                    value={this.state.timeForForm}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-12\">\n                  <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    as=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    id=\"description\"\n                    onChange={this.handleChange}\n                    value={this.state.description}\n                  />\n                </Form.Group>\n                <div className=\"col-12 flex-end-btn\">\n                  <Button type=\"submit\">Save changes</Button>\n                </div>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default EventDetails;\n","import React from \"react\";\nimport { distance } from \"../../src/services/distance\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchResult = props => {\n  const circleSize = 3;\n\n  let loggedInUserLocation = props.user.address.coordinates;\n\n  let neighbor = \"\";\n\n  neighbor = [...props.allUsers].filter(el => {\n    let otherUserLocation = el.address.coordinates;\n\n    return (\n      distance(loggedInUserLocation, otherUserLocation) <= circleSize &&\n      el.username !== props.user.username\n    );\n  });\n\n  let sortedNeighbor = [...neighbor].sort((a, b) => {\n    let distanceA = distance(loggedInUserLocation, a.address.coordinates);\n    let distanceB = distance(loggedInUserLocation, b.address.coordinates);\n    if (distanceA < distanceB) {\n      return -1;\n    }\n\n    if (distanceA > distanceB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  let searchWord = props.searchInput.trim();\n\n  if (props.select === \"Help\" && searchWord) {\n    sortedNeighbor = sortedNeighbor.filter(el => {\n      for (const element of el.offerService) {\n        if (element.toLowerCase().includes(searchWord.toLowerCase())) {\n          return true;\n        }\n      }\n\n      for (const element of el.offerStuff) {\n        if (element.toLowerCase().includes(searchWord.toLowerCase())) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  }\n\n  if (props.select === \"Neighbors\" && searchWord) {\n    sortedNeighbor = sortedNeighbor.filter(el => {\n      return el.username.toLowerCase().includes(searchWord.toLowerCase());\n    });\n  }\n\n  let displayService = \"\";\n  let displayOfferStuff = \"\";\n\n  let neighborCards = [...sortedNeighbor].map((el, index) => {\n    if (el.offerService) {\n      displayService = el.offerService.map((el, index) => {\n        return (\n          <Col key={index} xs={6} md={3} className=\"px-0\">\n            <span className=\"help-item\">\n              <i className=\"fas fa-icons\"></i>{\" \"}\n            </span>\n            <span>{el}</span>\n          </Col>\n        );\n      });\n    }\n\n    if (el.offerStuff) {\n      displayOfferStuff = el.offerStuff.map((el, index) => {\n        return (\n          <Col key={index} xs={6} md={3} className=\"px-0\">\n            <span className=\"toolbox\">\n              <i className=\"fas fa-toolbox\"></i>{\" \"}\n            </span>\n            <span>{el}</span>\n          </Col>\n        );\n      });\n    }\n    let eachDistance = distance(loggedInUserLocation, el.address.coordinates);\n\n    return (\n      <Container key={index} className=\"each-neighbor-card\">\n        <div className=\"pb-1 pt-2 px-lg-3\">\n          <Link\n            to={`/${el.username}`}\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            <Row>\n              <Col xs={4} md={2} className=\"pr-md-0\">\n                <img\n                  src={el.imageUrl}\n                  className=\"user-pic search-result-pic\"\n                  alt={el.username}\n                />\n                <div className=\"flex-space-between\">\n                  <span className=\"credit-locat-display\">\n                    <i className=\"fas fa-map-marker-alt\"></i> {eachDistance} km\n                  </span>\n                  <span className=\"credit-locat-display\">\n                    <i className=\"far fa-credit-card\"></i> {el.credits}\n                  </span>\n                </div>\n              </Col>\n              <Col xs={8} md={10} className=\"pl-md-5 px-0\">\n                <h4 className=\"mb-0\">{el.username}</h4>\n                {displayOfferStuff && (\n                  <>\n                    <h6\n                      className=\"search-lend-help-title\"\n                      style={{ color: \"grey\" }}\n                    >\n                      I can lend:\n                    </h6>{\" \"}\n                    <Row style={{ width: \"100%\", margin: 0 }}>\n                      {displayOfferStuff}\n                    </Row>\n                  </>\n                )}\n                {displayService && (\n                  <>\n                    <h6\n                      className=\"search-lend-help-title\"\n                      style={{ color: \"grey\" }}\n                    >\n                      I can help:{\" \"}\n                    </h6>\n                    <Row style={{ width: \"100%\", margin: 0 }}>\n                      {displayService}\n                    </Row>\n                  </>\n                )}\n              </Col>\n            </Row>\n          </Link>\n        </div>\n      </Container>\n    );\n  });\n\n  return (\n    <div id=\"search-result\">\n      <h1 className=\"search-result-heading\">\n        Neighbors around you (within 3 km)\n      </h1>\n\n      {neighborCards.length > 0 ? (\n        <div className=\"neighbor-card\">{neighborCards}</div>\n      ) : (\n        <h3 className=\"search-result-heading\">No Result</h3>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResult;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst MessengerNav = props => {\n  let userChatMsg = \"\";\n  if (props.chatMsg.length) {\n    userChatMsg = [...props.chatMsg].filter(el => {\n      return (\n        el.sender._id === props.user._id || el.reciever._id === props.user._id\n      );\n    });\n  }\n\n  let navInfo = {};\n  let nameOrder = [];\n\n  [...userChatMsg].forEach(el => {\n    // current user is reciever\n    if (el.sender._id !== props.user._id) {\n      navInfo[el.sender.username] = {\n        neighborId: el.sender._id,\n        sender: el.sender._id,\n        msg: el.chatMsg,\n        timeStamp: el.createdAt,\n        imageUrl: el.sender.imageUrl\n      };\n      nameOrder.push(el.sender.username);\n    } else {\n      // current user is the sender\n      navInfo[el.reciever.username] = {\n        neighborId: el.reciever._id,\n        sender: el.sender._id,\n        msg: el.chatMsg,\n        timeStamp: el.createdAt,\n        imageUrl: el.reciever.imageUrl\n      };\n      nameOrder.push(el.reciever.username);\n    }\n  });\n\n  let monthEng = {\n    1: \"Jan\",\n    2: \"Feb\",\n    3: \"Mar\",\n    4: \"Apr\",\n    5: \"May\",\n    6: \"Jun\",\n    7: \"Jul\",\n    8: \"Aug\",\n    9: \"Sep\",\n    10: \"Oct\",\n    11: \"Nov\",\n    12: \"Dec\"\n  };\n\n  let nameOrderUnique = new Set(nameOrder.reverse());\n\n  let navDisplay = Array.from(nameOrderUnique);\n\n  navDisplay = navDisplay.map((el, index) => {\n    let formattedDate = new Date(navInfo[el].timeStamp);\n    let date = formattedDate.getDate();\n    let monthNum = formattedDate.getMonth();\n    let month = monthEng[monthNum + 1];\n    let lastMessage = navInfo[el].msg.slice(0, 25);\n\n    return (\n      <NavLink\n        key={index}\n        to={`/messenger/${navInfo[el].neighborId}`}\n        style={{ textDecoration: \"none\", color: \"black\" }}\n        className=\" message-selector\"\n      >\n        <div className=\"flex-display-container px-2 py-3\">\n          <div className=\"pr-2\">\n            <img\n              src={navInfo[el].imageUrl}\n              alt=\"chat-neighbor-pic\"\n              width=\"50\"\n              height=\"50\"\n              className=\"user-pic\"\n            />\n          </div>\n          <div>\n            <div className=\"m-0\">\n              <strong>{el}</strong>{\" \"}\n              <span style={{ color: \"grey\" }}>\n                {`\\u2022 ${date} ${month} \\u2022`}\n              </span>\n            </div>\n            <div className=\"m-0\">\n              {navInfo[el].sender === props.user._id ? (\n                <span>You: </span>\n              ) : (\n                <></>\n              )}\n              <span style={{ color: \"grey\" }}>{lastMessage}</span>\n            </div>\n          </div>\n        </div>\n      </NavLink>\n    );\n  });\n\n  return (\n    <>\n      <h2>Messenger</h2>\n      <div className=\"p-0 messenger-nav\">{navDisplay}</div>\n    </>\n  );\n};\n\nexport default MessengerNav;\n","import React, { Fragment } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatArea = props => {\n  let neighborId = props.match.params.neighborId;\n\n  let chatAreaMsg = \"\";\n  if (props.chatMsg.length) {\n    chatAreaMsg = [...props.chatMsg].reverse().filter(el => {\n      return (\n        (el.sender._id === props.user._id && el.reciever._id === neighborId) ||\n        (el.reciever._id === props.user._id && el.sender._id === neighborId)\n      );\n    });\n  }\n\n  let chatAreaDisplay = [...chatAreaMsg].map((el, index) => {\n    let message = el.chatMsg\n      .trim()\n      .split(\"\\n\")\n      .map((item, index) => {\n        return (\n          <span key={index}>\n            {item}\n            <br />\n          </span>\n        );\n      });\n\n    if (el.sender._id !== props.user._id) {\n      return (\n        <div key={index} className=\"d-flex justify-content-start\">\n          <div className=\"chat-bubble\">\n            <b style={{ color: \"#66AD93\" }}>{el.sender.username}</b>\n            <p>{message}</p>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div key={index} className=\"d-flex justify-content-end \">\n        <div className=\"chat-bubble\">\n          <b style={{ color: \"#FF8C00\" }}>You</b>\n          <p>{message}</p>\n        </div>\n      </div>\n    );\n  });\n\n  let neighborName = \"\";\n  let neighborPic = \"\";\n  if (chatAreaMsg[0]) {\n    if (chatAreaMsg[0].sender.username !== props.user.username) {\n      neighborName = chatAreaMsg[0].sender.username;\n      neighborPic = chatAreaMsg[0].sender.imageUrl;\n    } else {\n      neighborName = chatAreaMsg[0].reciever.username;\n      neighborPic = chatAreaMsg[0].reciever.imageUrl;\n    }\n  } else if (chatAreaMsg) {\n    let selectedUser = [...props.allUsers].filter(el => {\n      return el._id === neighborId;\n    });\n\n    neighborName = selectedUser[0].username;\n    neighborPic = selectedUser[0].imageUrl;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className=\"flex-display-container  px-2 py-2\"\n        style={{ backgroundColor: \"#D5F2E3\" }}\n      >\n        <img\n          src={neighborPic}\n          width=\"40\"\n          height=\"40\"\n          className=\"user-pic\"\n          alt=\"neighbor_pic\"\n        />\n        <h3 className=\"px-2\">\n          <Link\n            style={{ textDecoration: \"none\", color: \"black\" }}\n            to={`/${neighborName}`}\n          >\n            {neighborName}\n          </Link>\n        </h3>\n      </div>\n      <div className=\"p-4 chat-area-msg-display\">{chatAreaDisplay}</div>\n      <div>\n        <Form\n          onSubmit={e => {\n            props.handleChatInputSubmit(e, neighborId);\n          }}\n        >\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            name=\"chatInput\"\n            onChange={props.handleChange}\n            value={props.chatInput}\n            placeholder=\"Text here...\"\n          />\n          <div className=\"d-flex justify-content-end\">\n            <Button className=\"mx-2\" type=\"submit\" variant=\"outline-success\">\n              Send\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ChatArea;\n","import React, { Component } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport MessengerNav from \"./MessengerNav\";\nimport ChatArea from \"./ChatArea\";\n\nexport default class Messenger extends Component {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <Container fluid={true}>\n        <Row>\n          <div className=\"col-3 pr-0\">\n            <MessengerNav user={this.props.user} chatMsg={this.props.chatMsg} />\n          </div>\n\n          <div className=\"col-9 p-0 chat-area-container\">\n            <ChatArea\n              user={this.props.user}\n              chatMsg={this.props.chatMsg}\n              chatInput={this.props.chatInput}\n              handleChange={this.props.handleChange}\n              handleChatInputSubmit={this.props.handleChatInputSubmit}\n              allUsers={this.props.allUsers}\n              {...this.props}\n            />\n          </div>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { signup } from \"../services/auth\";\nimport { Alert, Form, Button, Container, Row } from \"react-bootstrap\";\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let username = this.state.username;\n    let regex = /^[a-z0-9]+$/i;\n    let isValidUserName = regex.test(username);\n\n    let password = this.state.password;\n\n    let street = this.state.street.trim();\n    let city = this.state.city.trim();\n    let houseNumber = this.state.houseNumber.trim();\n\n    if (!isValidUserName) {\n      this.setState({\n        error: \"Username can contain only english letters or numbers\"\n      });\n      return;\n    }\n\n    if (username.length < 3 || username.length > 12) {\n      this.setState({\n        error: \"The length of username should be 3-12 characters\"\n      });\n      return;\n    }\n\n    if (password.length < 8) {\n      this.setState({\n        error: \"Password should contain at least 8 characters\"\n      });\n      return;\n    }\n\n    if (!street || !city || !houseNumber) {\n      this.setState({\n        error:\n          \"The street, city and house number input should contain valid characters \"\n      });\n      return;\n    }\n\n    signup(\n      username,\n      password,\n      street,\n      houseNumber,\n      city,\n      this.state.postalCode\n    ).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        this.props.setUser(data);\n\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"background-image\">\n        <div className=\"signup\">\n          <Container>\n            <h2>Signup</h2>\n\n            <Form onSubmit={this.handleSubmit}>\n              <Row>\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"username\">Username: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"password\">Password: </Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"min. 8 characters\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    required={true}\n                  />\n                </Form.Group>\n              </Row>\n\n              <Row>\n                <Form.Group className=\"col-8 \">\n                  <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"street\"\n                    id=\"street\"\n                    value={this.state.street}\n                    onChange={this.handleChange}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-4 \">\n                  <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"houseNumber\"\n                    id=\"houseNumber\"\n                    onChange={this.handleChange}\n                    value={this.state.houseNumber}\n                    required={true}\n                  />\n                </Form.Group>\n              </Row>\n\n              <Row>\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"postalCode\" id=\"postal-code\">\n                    Postalcode:{\" \"}\n                  </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    name=\"postalCode\"\n                    id=\"postalCode\"\n                    onChange={this.handleChange}\n                    value={this.state.postalCode}\n                    min=\"0\"\n                    required={true}\n                  />\n                </Form.Group>\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"city\">City: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"city\"\n                    onChange={this.handleChange}\n                    value={this.state.city}\n                    required={true}\n                  />\n                </Form.Group>\n              </Row>\n\n              {this.state.error && (\n                <Alert variant=\"danger\">{this.state.error}</Alert>\n              )}\n              <Button variant=\"danger\" type=\"submit\">\n                Sign up\n              </Button>\n            </Form>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { login } from \"../services/auth\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    login(this.state.username, this.state.password).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        // no error\n        // lift the data up to the App state\n        this.props.setUser(data);\n        // redirect to \"/\" (NewsFeed Page)\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"background-image\">\n        <div className=\"login-form\">\n          <h2>Login</h2>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group>\n              <Form.Label htmlFor=\"username\">Username: </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"username\"\n                id=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"password\">Password: </Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            {this.state.error && (\n              <Alert variant=\"danger\">{this.state.error}</Alert>\n            )}\n            <Button variant=\"danger\" type=\"submit\">\n              Log in\n            </Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default class AboutMe extends Component {\n  render() {\n    return (\n      <>\n        <h5\n          className=\"mt-md-5 mb-2 profile-detail-subhead\"\n          style={{ color: \"grey\" }}\n        >\n          About Me &nbsp;&nbsp;\n          {this.props.sameUser && !this.props.state.showAboutMeForm && (\n            <Button\n              onClick={() =>\n                this.props.toggleForm({\n                  showAboutMeForm: !this.props.state.showAboutMeForm\n                })\n              }\n              variant=\"outline-info\"\n            >{`\\u270E`}</Button>\n          )}\n        </h5>\n\n        {this.props.state.showAboutMeForm && (\n          <Form onSubmit={this.props.updateAboutMe}>\n            <Form.Group>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"aboutMe\"\n                onChange={this.props.handleChange}\n                value={this.props.state.aboutMe}\n              />\n            </Form.Group>\n            <div className=\"d-flex justify-content-end\">\n              <Button type=\"submit\" variant=\"outline-success\" className=\"mr-1\">\n                Add\n              </Button>\n              <Button\n                onClick={this.props.cancelEditAboutMe}\n                variant=\"outline-danger\"\n              >\n                Cancel\n              </Button>\n            </div>\n          </Form>\n        )}\n        {!this.props.state.showAboutMeForm && (\n          <p className=\"mt-3 mb-md-5\">\n            {this.props.state.aboutMe &&\n              this.props.state.aboutMe\n                .trim()\n                .split(\"\\n\")\n                .map((item, index) => {\n                  return (\n                    <span key={index}>\n                      {item}\n                      <br />\n                    </span>\n                  );\n                })}\n          </p>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default class ProfilePic extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"profile-page-img-container\">\n          <img className=\"user-pic\" src={this.props.imageUrl} alt=\"\" />\n          {this.props.canUpdateImg && <span>Preview</span>}\n        </div>\n        {this.props.sameUser && (\n          <form onSubmit={this.props.handleSubmitFile}>\n            <input\n              type=\"file\"\n              id=\"pic-input\"\n              onChange={this.props.handleFileChange}\n            />\n            {this.props.canUpdateImg && (\n              <Button type=\"submit\" variant=\"outline-info\">\n                Upload\n              </Button>\n            )}\n          </form>\n        )}\n        {this.props.photoMessage && (\n          <p style={{ color: \"red\" }}>{this.props.photoMessage}</p>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default class OfferService extends Component {\n  render() {\n    let services = <></>;\n\n    // check if offerService is empty\n    if (this.props.offerService) {\n      services = [...this.props.offerService].map((el, index) => {\n        return (\n          <Fragment key={index}>\n            <div className=\"help-item-list\">\n              <li>\n                <span className=\"mr-2 help-item \">\n                  <i className=\"fas fa-icons\"></i>\n                </span>{\" \"}\n                <span>{el}</span>\n              </li>\n\n              {this.props.showOfferServiceForm && (\n                <button\n                  onClick={() => this.props.deleteService(el)}\n                >{`\\u00D7`}</button>\n              )}\n            </div>\n          </Fragment>\n        );\n      });\n    }\n\n    return (\n      <div className=\"my-md-5\">\n        <h3 className=\"profile-detail-subhead\">\n          I can help...{\" \"}\n          {this.props.sameUser && !this.props.showOfferServiceForm && (\n            <Button\n              onClick={() =>\n                this.props.toggleForm({\n                  showOfferServiceForm: !this.props.showOfferServiceForm\n                })\n              }\n              variant=\"outline-info\"\n            >\n              {`\\u270E`} Edit\n            </Button>\n          )}\n        </h3>\n\n        <ul className=\"pl-0\" style={{ listStyleType: \"none\" }}>\n          {services}\n        </ul>\n\n        {this.props.showOfferServiceForm && (\n          <Form onSubmit={this.props.handleSubmitOfferService}>\n            <Form.Group>\n              <Form.Control\n                id=\"help-input\"\n                type=\"text\"\n                name=\"serviceInput\"\n                onChange={this.props.handleChange}\n                value={this.props.serviceInput}\n              />\n            </Form.Group>\n            <div className=\"add-service-stuff-btn\">\n              <Button type=\"submit\" variant=\"outline-success\" className=\"mr-2\">\n                Add\n              </Button>\n              <Button\n                onClick={() =>\n                  this.props.toggleForm({\n                    showOfferServiceForm: !this.props.showOfferServiceForm\n                  })\n                }\n                variant=\"outline-info\"\n              >\n                Done\n              </Button>\n            </div>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst OfferStuff = props => {\n  let stuff = <></>;\n  if (props.offerStuff) {\n    stuff = [...props.offerStuff].map((el, index) => {\n      return (\n        <Fragment key={index}>\n          <div className=\"help-item-list\">\n            <li>\n              <span className=\"mr-2 toolbox\">\n                <i className=\"fas fa-toolbox\"></i>{\" \"}\n              </span>{\" \"}\n              <span>{el}</span>\n            </li>\n\n            {props.showOfferStuffForm && (\n              <button onClick={() => props.deleteStuff(el)}>{`\\u00D7`}</button>\n            )}\n          </div>\n        </Fragment>\n      );\n    });\n  }\n\n  return (\n    <div className=\"my-md-5\">\n      <h3 className=\"profile-detail-subhead\">\n        I can lend...{\" \"}\n        {props.sameUser && !props.showOfferStuffForm && (\n          <Button\n            onClick={() =>\n              props.toggleForm({\n                showOfferStuffForm: !props.showOfferStuffForm\n              })\n            }\n            variant=\"outline-info\"\n          >\n            {`\\u270E`} Edit\n          </Button>\n        )}\n      </h3>\n\n      <ul className=\"pl-0\" style={{ listStyleType: \"none\" }}>\n        {stuff}\n      </ul>\n\n      {props.showOfferStuffForm && (\n        <Form onSubmit={props.handleSubmitOfferStuff}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              name=\"stuffInput\"\n              id=\"stuff-input\"\n              onChange={props.handleChange}\n              value={props.stuffInput}\n            />\n          </Form.Group>\n          <div className=\"add-service-stuff-btn\">\n            <Button type=\"submit\" variant=\"outline-success\" className=\"mr-2\">\n              Add\n            </Button>\n            <Button\n              onClick={() =>\n                props.toggleForm({\n                  showOfferStuffForm: !props.showOfferStuffForm\n                })\n              }\n              variant=\"outline-info\"\n            >\n              Done\n            </Button>\n          </div>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nexport default OfferStuff;\n// rafce\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst ReferenceCard = props => {\n  let referenceList = [...props.reference].map((el, index) => {\n    let content = el.content.split(\"\\n\").map(function(item, key) {\n      return (\n        <span key={key}>\n          {item}\n          <br />\n        </span>\n      );\n    });\n\n    let stars = \"\\u2605\".repeat(el.rating);\n\n    return (\n      <Fragment key={index}>\n        <Row className=\"my-3\">\n          <Col className=\"mr-2\" xs={2} lg={1}>\n            {el.author.imageUrl && (\n              <img\n                className=\"user-pic mt-1\"\n                src={el.author.imageUrl}\n                alt=\"author_picture\"\n                width=\"40\"\n                height=\"40\"\n              />\n            )}\n          </Col>\n          <Col>\n            {el.author.username ? (\n              <Link\n                style={{ textDecoration: \"none\", color: \"black\" }}\n                to={`/${el.author.username}`}\n              >\n                <strong>{el.author.username}</strong>\n              </Link>\n            ) : (\n              <strong style={{ color: \"grey\", fontStyle: \"italic\" }}>\n                Deleted\n              </strong>\n            )}\n            <p className=\"mb-1\" style={{ color: \"#ffcc00\", fontSize: 20 }}>\n              {stars}\n            </p>\n            <p>{content}</p>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  });\n  return referenceList;\n};\n\nexport default ReferenceCard;\n","import React, { Fragment } from \"react\";\nimport { Button, Form, Alert, Container, Row, Col } from \"react-bootstrap\";\nimport ReactStars from \"react-stars\";\nimport ReferenceCard from \"./ReferenceCard\";\n\nconst Reference = props => {\n  const ratingChanged = rating => {\n    props.handleRatingChange(rating);\n  };\n\n  let createdRef = \"\";\n\n  return (\n    <>\n      <h3 className=\"mt-md-5 reference-heading h2-heading\">\n        Reference{\" \"}\n        {!props.sameUser && !props.showReferenceForm && props.user && (\n          <Button\n            onClick={() =>\n              props.toggleForm({\n                showReferenceForm: !props.showReferenceForm\n              })\n            }\n            variant=\"outline-info\"\n          >\n            {`\\u270E`} Add a reference\n          </Button>\n        )}\n      </h3>\n      <Container>\n        {props.showReferenceForm && !props.sameUser && (\n          <Fragment>\n            <Alert variant=\"warning\">\n              Your current credit: {props.authorCredits}\n            </Alert>\n            {props.showNotEnoughCredit && (\n              <Alert variant=\"warning\">\n                You don't have enough credit to transfer.\n              </Alert>\n            )}\n\n            {props.showNeedtoWriteSth && (\n              <Alert variant=\"warning\">You need to write something.</Alert>\n            )}\n\n            <Row className=\"my-3\">\n              <Col className=\"mr-2\" xs={2} lg={1}>\n                <img\n                  className=\"user-pic mt-1\"\n                  src={props.user.imageUrl}\n                  alt=\"author_picture\"\n                  width=\"40\"\n                  height=\"40\"\n                />\n              </Col>\n              <Col>\n                <Form onSubmit={e => props.addReference(e, createdRef)}>\n                  {props.showReferenceAlert && (\n                    <Alert variant=\"danger\">\n                      IMPORTANT!!\n                      <br />\n                      Are you sure you want to submit this reference?\n                      <br />\n                      Submitted reference CANNOT be modified or deleted.\n                      <br />\n                      {/* <Button type=\"submit\" variant=\"outline-danger\"> */}\n                      <Button\n                        type=\"submit\"\n                        ref={domEl => {\n                          createdRef = domEl;\n                        }}\n                        name=\"final_submit\"\n                        variant=\"outline-success\"\n                        className=\"mt-3\"\n                      >\n                        Confirm\n                      </Button>\n                      <Button\n                        onClick={() =>\n                          props.toggleForm({ showReferenceAlert: false })\n                        }\n                        variant=\"outline-danger\"\n                        className=\"mt-3 mx-2\"\n                      >\n                        Cancel\n                      </Button>\n                    </Alert>\n                  )}\n\n                  <Row>\n                    <Col md={6}>\n                      <Form.Group>\n                        <Form.Label>\n                          Give Credits to <strong>{props.profileOwner}</strong>{\" \"}\n                          (optional) :\n                        </Form.Label>\n                        <Form.Control\n                          type=\"number\"\n                          name=\"creditInput\"\n                          placeholder=\"Write a number\"\n                          min=\"0\"\n                          step=\"1\"\n                          onChange={props.handleCreditChange}\n                          value={props.creditInput}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md={1}></Col>\n                    <Col md={5}>\n                      <Form.Label>Rating :</Form.Label>\n                      <ReactStars\n                        value={props.rating}\n                        count={5}\n                        onChange={ratingChanged}\n                        size={30}\n                        half={false}\n                        color2={\"#ffd700\"}\n                      />\n                    </Col>\n                  </Row>\n                  <Form.Group>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows=\"3\"\n                      name=\"referenceInput\"\n                      onChange={props.handleRefChange}\n                      value={props.referenceInput}\n                      required={true}\n                      placeholder=\"Write your reference here\"\n                    />\n                  </Form.Group>\n                  {!props.showReferenceAlert && (\n                    <div className=\"d-flex justify-content-end\">\n                      <Button type=\"submit\" variant=\"outline-success\">\n                        Add\n                      </Button>\n                      <Button\n                        onClick={props.cancelEditReference}\n                        variant=\"outline-danger\"\n                        className=\"mx-2\"\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  )}\n                </Form>\n              </Col>\n            </Row>\n          </Fragment>\n        )}\n        <ReferenceCard reference={props.reference} />\n      </Container>\n    </>\n  );\n};\n\nexport default Reference;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Button, Alert, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport AboutMe from \"./AboutMe\";\nimport ProfilePic from \"./ProfilePic\";\nimport { handleUpload } from \"../../services/upload-img\";\nimport OfferService from \"./OfferService\";\nimport OfferStuff from \"./OfferStuff\";\nimport Reference from \"./Reference\";\n// import DeleteButton from \"../DeleteButton\";   disable del-account-function temporarily\n\nclass ProfileDetails extends Component {\n  state = {\n    _id: null,\n    username: \"\",\n    address: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    offerStuff: \"\",\n    offerService: \"\",\n    imageUrl: \"\",\n    aboutMe: \"\",\n    reference: \"\",\n    credits: \"\",\n    event: \"\",\n    following: \"\",\n    showAboutMeForm: false,\n    showAddressForm: false,\n    showOfferServiceForm: false,\n    showOfferStuffForm: false,\n    showReferenceForm: false,\n    showReferenceAlert: false,\n    showDeleteAlert: false,\n    showNotEnoughCredit: false,\n    showNeedtoWriteSth: false,\n    serviceInput: \"\",\n    stuffInput: \"\",\n    referenceInput: \"\",\n    creditInput: \"\",\n    authorCredits: this.props.user.credits,\n    rating: 0,\n    photoMessage: null,\n    addressInvalidMsg: null,\n    canUpdateImg: false,\n    originalImgUrl: \"\"\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.getData();\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  // get profile owner's data and update the state\n  getData = () => {\n    const username = this.props.match.params.username;\n\n    axios\n      .get(`/api/user/${username}`)\n      .then(response => {\n        this.setState({\n          _id: response.data._id,\n          username: response.data.username,\n          address: response.data.address,\n          street: response.data.address.street,\n          houseNumber: response.data.address.houseNumber,\n          city: response.data.address.city,\n          postalCode: response.data.address.postalCode,\n          offerStuff: response.data.offerStuff,\n          offerService: response.data.offerService,\n          imageUrl: response.data.imageUrl,\n          aboutMe: response.data.aboutMe,\n          reference: response.data.reference.reverse(),\n          credits: response.data.credits,\n          event: response.data.event,\n          following: response.data.following,\n          originalImgUrl: response.data.imageUrl\n        });\n      })\n\n      .catch(err => {\n        console.log(err);\n        if (err.response.status === 404) {\n          this.setState({\n            error: err.response.data.message\n          });\n        }\n      });\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  toggleForm = obj => {\n    this.setState(obj);\n  };\n\n  //Update Address\n  updateAddress = event => {\n    event.preventDefault();\n\n    let street = this.state.street.trim();\n    let city = this.state.city.trim();\n    let houseNumber = this.state.houseNumber.trim();\n    if (!street || !city || !houseNumber) {\n      this.setState({\n        addressInvalidMsg:\n          \"The street, city and house number input should contain valid characters \"\n      });\n      return;\n    }\n\n    axios\n      .put(`/api/user/address/${this.state.username}`, {\n        street: this.state.street,\n        houseNumber: this.state.houseNumber,\n        city: this.state.city,\n        postalCode: this.state.postalCode\n      })\n      .then(response => {\n        if (response.data.message) {\n          this.setState({ addressInvalidMsg: response.data.message });\n          return;\n        }\n\n        this.setState({\n          address: response.data.address,\n          street: response.data.address.street,\n          houseNumber: response.data.address.houseNumber,\n          city: response.data.address.city,\n          postalCode: response.data.address.postalCode,\n          addressInvalidMsg: \"\"\n        });\n        this.props.setUser(response.data);\n        this.toggleForm({ showAddressForm: !this.state.showAddressForm });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  cancelEditAddress = () => {\n    this.setState({ showAddressForm: false });\n  };\n\n  // AboutMe Functions\n  updateAboutMe = event => {\n    event.preventDefault();\n    axios\n      .put(`/api/user/${this.state.username}`, { aboutMe: this.state.aboutMe })\n      .then(response => {\n        this.setState(\n          {\n            aboutMe: response.data.aboutMe\n          },\n          () => {\n            this.toggleForm({ showAboutMeForm: !this.state.showAboutMeForm });\n          }\n        );\n      })\n      .catch(error => console.log(error));\n  };\n\n  cancelEditAboutMe = () => {\n    this.getData();\n    this.toggleForm({ showAboutMeForm: !this.state.showAboutMeForm });\n  };\n\n  // update user's image\n  handleFileChange = e => {\n    let imgSizeLimit = 5000000; //5MB\n    let allowedFormat = [\"image/jpeg\", \"image/png\"];\n    let chosenFile = e.target.files[0];\n\n    if (!chosenFile) {\n      this.setState({\n        canUpdateImg: false,\n        imageUrl: this.state.originalImgUrl\n      });\n      return;\n    }\n\n    if (chosenFile.size > imgSizeLimit) {\n      this.setState({\n        canUpdateImg: false,\n        photoMessage: \"Size of image should be less than 5MB\",\n        imageUrl: this.state.originalImgUrl\n      });\n      return;\n    }\n\n    if (allowedFormat.indexOf(chosenFile.type) < 0) {\n      this.setState({\n        canUpdateImg: false,\n        photoMessage: \"Format of image should be jpeg or png\",\n        imageUrl: this.state.originalImgUrl\n      });\n      return;\n    }\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n    this.setState({ uploadOn: true, photoMessage: \"\" });\n\n    handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imageUrl: response.secure_url,\n          uploadOn: false,\n          canUpdateImg: true,\n          photoMessage: \"\"\n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  handleSubmitFile = e => {\n    e.preventDefault();\n\n    if (this.state.uploadOn) return; // do nothing if the file is still being uploaded\n    axios\n      .put(`/api/user/profile-pic/${this.state.username}`, {\n        imageUrl: this.state.imageUrl\n      })\n      .then(response => {\n        this.setState({\n          imageUrl: response.data.imageUrl,\n          photoMessage: \"Image has been updated successfully\",\n          canUpdateImg: false\n        });\n        this.props.setUser(response.data);\n      })\n      .catch(error => console.log(error));\n  };\n\n  //offer Service functions\n  handleSubmitOfferService = e => {\n    e.preventDefault();\n    if (this.state.serviceInput !== \"\") {\n      axios\n        .put(`/api/user/offer-service/${this.state.username}`, {\n          offerService: this.state.serviceInput.trim()\n        })\n        .then(response => {\n          this.setState({\n            offerService: response.data.offerService,\n            serviceInput: \"\"\n          });\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  deleteService = deleteItem => {\n    axios\n      .put(`/api/user/offer-service-delete/${this.state.username}`, {\n        offerService: deleteItem\n      })\n      .then(response => {\n        this.setState(\n          {\n            offerService: response.data.OfferService\n          },\n          () => {\n            this.getData();\n          }\n        );\n      })\n      .catch(error => console.log(error));\n  };\n\n  //offer Stuff functions\n  handleSubmitOfferStuff = e => {\n    e.preventDefault();\n    if (this.state.stuffInput) {\n      axios\n\n        .put(`/api/user/offer-stuff/${this.state.username}`, {\n          offerStuff: this.state.stuffInput.trim()\n        })\n        .then(response => {\n          this.setState({\n            offerStuff: response.data.offerStuff,\n            stuffInput: \"\"\n          });\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  deleteStuff = deleteItem => {\n    axios\n      .put(`/api/user/offer-stuff-delete/${this.state.username}`, {\n        offerStuff: deleteItem\n      })\n      .then(response => {\n        this.setState(\n          {\n            offerStuff: response.data.offerStuff\n          },\n          () => {\n            this.getData();\n          }\n        );\n      })\n      .catch(error => console.log(error));\n  };\n\n  // Reference\n\n  handleRefChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      showNeedtoWriteSth: false\n    });\n  };\n\n  handleCreditChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      showNotEnoughCredit: false\n    });\n  };\n\n  handleRatingChange = rating => {\n    this.setState({\n      rating\n    });\n  };\n\n  cancelEditReference = () => {\n    this.toggleForm({ showReferenceAlert: false, showReferenceForm: false });\n    this.setState({\n      rating: 0,\n      referenceInput: \"\",\n      creditInput: \"\",\n      showNotEnoughCredit: false,\n      showNeedtoWriteSth: false\n    });\n  };\n\n  addReference = (e, ref) => {\n    e.preventDefault();\n\n    if (\n      parseInt(this.state.authorCredits, 10) -\n        parseInt(this.state.creditInput, 10) <\n      0\n    ) {\n      this.setState({ showNotEnoughCredit: true, showReferenceAlert: false });\n      return;\n    }\n\n    if (!this.state.referenceInput.trim()) {\n      this.setState({ showNeedtoWriteSth: true, showReferenceAlert: false });\n      return;\n    }\n\n    this.toggleForm({ showReferenceAlert: true });\n\n    if (ref.name === \"final_submit\") {\n      let recievedCredit = parseInt(this.state.creditInput, 10);\n\n      if (!this.state.creditInput) {\n        recievedCredit = 0;\n      }\n\n      this.axiosCreateRef(recievedCredit)\n        .then(() => {\n          return this.axiosUpdateProfileOwnerCredits(recievedCredit);\n        })\n        .then(() => {\n          return this.axiosUpdateAuthorCredits(recievedCredit);\n        });\n    }\n  };\n\n  axiosCreateRef = recievedCredit => {\n    return axios\n      .post(\"api/reference\", {\n        content: this.state.referenceInput.trim(),\n        author: this.props.user._id,\n        rating: this.state.rating,\n        recievedCredit,\n        profileOwner: this.state._id\n      })\n      .then(response => {\n        console.log(`new ref is created`);\n      })\n      .catch(err => console.log(err));\n  };\n\n  axiosUpdateProfileOwnerCredits = recievedCredit => {\n    return axios\n      .put(\"api/reference/credits/profile-owner\", {\n        username: this.state.username,\n        credits: parseInt(this.state.credits, 10) + recievedCredit\n      })\n      .then(response => {\n        console.log(\"new profile owner credit: \" + response.data.credits);\n      })\n      .catch(err => console.log(err));\n  };\n\n  axiosUpdateAuthorCredits = recievedCredit => {\n    return axios\n      .put(\"api/reference/credits/author\", {\n        author: this.props.user._id,\n        authorCredits: parseInt(this.state.authorCredits, 10) - recievedCredit\n      })\n      .then(response => {\n        this.setState(\n          {\n            referenceInput: \"\",\n            creditInput: \"\",\n            rating: 0,\n            showReferenceAlert: false,\n            authorCredits: response.data.credits\n          },\n          () => {\n            this.props.setUser(response.data);\n            this.getData();\n          }\n        );\n      })\n      .catch(err => console.log(err));\n  };\n\n  //Delete Account\n  deleteAccount = () => {\n    axios\n      .delete(`/api/user/${this.state._id}`, { id: this.state._id })\n      .then(res => {\n        this.props.history.push(\"/\");\n      })\n      .catch(err => console.log(err));\n  };\n\n  toggleDelAlertFunction = () => {\n    this.setState({ showDeleteAlert: !this.state.showDeleteAlert });\n  };\n\n  render() {\n    //  disable del-account-function temporarily\n    // let alertMessage = (\n    //   <p>\n    //     IMPORTANT!! <br />\n    //     Are you sure you want to delete your account??\n    //   </p>\n    // );\n\n    let sameUser = false;\n    if (this.state._id === this.props.user._id) {\n      sameUser = true;\n    }\n\n    if (this.state.error) {\n      return <h1 className=\"profile-detail-page\">{this.state.error}</h1>;\n    }\n\n    return (\n      <Container className=\"my-md-5 px-lg-5 profile-detail-page\">\n        {/* disable del-account-function temporarily */}\n        {/* {sameUser && (\n          <DeleteButton\n            alertMessage={alertMessage}\n            toggleDelAlertFunction={this.toggleDelAlertFunction}\n            deleteFunction={this.deleteAccount}\n            showDeleteAlert={this.state.showDeleteAlert}\n          />\n        )} */}\n        <Row>\n          <Col md={5} className=\"my-4\" id=\"profile-left-top-container\">\n            <ProfilePic\n              user={this.props.user}\n              sameUser={sameUser}\n              imageUrl={this.state.imageUrl}\n              handleFileChange={this.handleFileChange}\n              handleSubmitFile={this.handleSubmitFile}\n              photoMessage={this.state.photoMessage}\n              canUpdateImg={this.state.canUpdateImg}\n            />\n\n            {sameUser && (\n              <>\n                <h5\n                  style={{ color: \"grey\" }}\n                  className=\"mt-md-4 profile-detail-subhead\"\n                >\n                  Address&nbsp;&nbsp;&nbsp;\n                  {!this.state.showAddressForm && (\n                    <Button\n                      onClick={() =>\n                        this.toggleForm({\n                          showAddressForm: !this.state.showAddressForm\n                        })\n                      }\n                      variant=\"outline-info\"\n                    >{`\\u270E`}</Button>\n                  )}\n                </h5>\n\n                {this.state.showAddressForm && (\n                  <Form onSubmit={this.updateAddress}>\n                    <Row>\n                      {this.state.addressInvalidMsg && (\n                        <p className=\"warning col-12\">\n                          * {this.state.addressInvalidMsg}\n                        </p>\n                      )}\n\n                      <Form.Group className=\"col-7\">\n                        <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"street\"\n                          id=\"street\"\n                          value={this.state.street}\n                          onChange={this.handleChange}\n                          required={true}\n                        />\n                      </Form.Group>\n\n                      <Form.Group className=\"col-4\">\n                        <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"houseNumber\"\n                          id=\"houseNumber\"\n                          onChange={this.handleChange}\n                          value={this.state.houseNumber}\n                          required={true}\n                        />\n                      </Form.Group>\n                    </Row>\n\n                    <Row>\n                      <Form.Group className=\"col-5\">\n                        <Form.Label htmlFor=\"postalCode\">\n                          Postalcode:{\" \"}\n                        </Form.Label>\n                        <Form.Control\n                          type=\"number\"\n                          name=\"postalCode\"\n                          id=\"postalCode\"\n                          onChange={this.handleChange}\n                          value={this.state.postalCode}\n                          required={true}\n                          min=\"0\"\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"col-6\">\n                        <Form.Label htmlFor=\"city\">City: </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"city\"\n                          id=\"city\"\n                          onChange={this.handleChange}\n                          value={this.state.city}\n                          required={true}\n                        />\n                      </Form.Group>\n                    </Row>\n\n                    {this.state.error && (\n                      <Alert variant=\"danger\">{this.state.error}</Alert>\n                    )}\n\n                    <Button\n                      variant=\"outline-success\"\n                      type=\"submit\"\n                      className=\"mr-2\"\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      variant=\"outline-danger\"\n                      onClick={this.cancelEditAddress}\n                    >\n                      Cancel\n                    </Button>\n                  </Form>\n                )}\n\n                {!this.state.showAddressForm && (\n                  <>\n                    <p className=\"mb-0\">\n                      {this.state.address.formattedAddress}\n                    </p>\n                    <p\n                      className=\"mb-0\"\n                      style={{ color: \"grey\", fontStyle: \"italic\" }}\n                    >\n                      * Only you can see your address\n                    </p>\n                  </>\n                )}\n              </>\n            )}\n\n            <h5\n              className=\"mt-md-4 profile-detail-subhead\"\n              style={{ color: \"grey\" }}\n            >\n              Credit:{\" \"}\n              <span style={{ color: \"black\" }}>{this.state.credits}</span>\n            </h5>\n          </Col>\n\n          <Col md={7} className=\"my-md-4\">\n            <h1>\n              {this.state.username}\n              &nbsp;&nbsp;\n              {!sameUser && this.props.user && (\n                <Link\n                  to={`/messenger/${this.state._id}`}\n                  className=\"btn btn-outline-info\"\n                >\n                  {`\\u2709`} Message me\n                </Link>\n              )}\n            </h1>\n\n            <AboutMe\n              sameUser={sameUser}\n              user={this.props.user}\n              state={this.state}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              cancelEditAboutMe={this.cancelEditAboutMe}\n              updateAboutMe={this.updateAboutMe}\n            />\n          </Col>\n\n          <Col md={5} id=\"lend-help-profile-box\">\n            <OfferStuff\n              sameUser={sameUser}\n              offerStuff={this.state.offerStuff}\n              showOfferStuffForm={this.state.showOfferStuffForm}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              stuffInput={this.state.stuffInput}\n              handleSubmitOfferStuff={this.handleSubmitOfferStuff}\n              deleteStuff={this.deleteStuff}\n            />\n            <p className=\"mt-md-5\"></p>\n            <OfferService\n              sameUser={sameUser}\n              offerService={this.state.offerService}\n              showOfferServiceForm={this.state.showOfferServiceForm}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              serviceInput={this.state.serviceInput}\n              handleSubmitOfferService={this.handleSubmitOfferService}\n              deleteService={this.deleteService}\n            />\n          </Col>\n          <Col md={7}>\n            <Reference\n              sameUser={sameUser}\n              user={this.props.user}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              cancelEditReference={this.cancelEditReference}\n              addReference={this.addReference}\n              showReferenceForm={this.state.showReferenceForm}\n              showReferenceAlert={this.state.showReferenceAlert}\n              rating={this.state.rating}\n              referenceInput={this.state.referenceInput}\n              creditInput={this.state.creditInput}\n              reference={this.state.reference}\n              showNotEnoughCredit={this.state.showNotEnoughCredit}\n              showNeedtoWriteSth={this.state.showNeedtoWriteSth}\n              authorCredits={this.state.authorCredits}\n              profileOwner={this.state.username}\n              handleRefChange={this.handleRefChange}\n              handleCreditChange={this.handleCreditChange}\n              handleRatingChange={this.handleRatingChange}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ProfileDetails;\n","import React, { Component } from \"react\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p>\n          {`\\u24B8`} 2019 &nbsp;\n          <a\n            className=\"footer-link\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/in/johanna-geissler/\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-linkedin\"></i> Hanna Geißler\n          </a>\n          &nbsp;&nbsp;\n          <a\n            className=\"footer-link\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/in/shanwong29/\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-linkedin\"></i> Kam Shan Wong\n          </a>\n        </p>\n        <p>\n          Full code in our &nbsp;{\" \"}\n          <a\n            className=\"footer-link\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/shanwong29/Kiez\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-github\"></i> Github Repository\n          </a>\n        </p>\n      </footer>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport AddEvent from \"./components/events/AddEvent\";\nimport EventDetails from \"./components/events/EventDetails\";\nimport SearchResult from \"./components/SearchResult\";\nimport Messenger from \"./components/Messenger\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport ProfileDetails from \"./components/profiles/ProfileDetails\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\";\n\nimport socketIOClient from \"socket.io-client\";\n\n// socket client for new messages\nconst endpoint = process.env.PORT; //socket\nconst socket = socketIOClient(endpoint);\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n    allUsers: [],\n    allEvents: [],\n    select: \"\",\n    searchInput: \"\",\n    selectInputfield: \"\",\n    searchInputfield: \"\",\n    showNewsfeed: true,\n    showMyEvents: false,\n    showEventsGoing: false,\n    showNextEvents: false,\n    // messenger\n    sender: this.props.user._id,\n    reciever: \"\",\n    chatMsg: [],\n    chatInput: \"\",\n    recieverAction: \"\"\n  };\n\n  handleChangeNav = object => {\n    this.setState(object);\n    this.getAllUser();\n    this.getAllEvents();\n  };\n\n  setUser = user => {\n    this.setState({\n      user: user\n    });\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  componentDidMount() {\n    this.getAllUser();\n    this.getAllEvents();\n    this.getMsg();\n\n    socket.on(\"message\", data => {\n      this.getMsg();\n    });\n  }\n\n  getAllUser = () => {\n    axios\n      .get(\"/api/user\")\n      .then(response => {\n        this.setState({\n          allUsers: response.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  getAllEvents = () => {\n    axios\n      .get(\"/api/events/myevents\")\n      .then(response => {\n        this.setState({\n          allEvents: response.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  getMsg = () => {\n    axios\n      .get(\"/api/chat/chat-msg\")\n      .then(response => {\n        this.setState({\n          chatMsg: response.data,\n          chatInput: \"\"\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChatInputSubmit = (e, recieverId) => {\n    e.preventDefault();\n    if (!this.state.chatInput) {\n      return;\n    }\n    axios\n      .post(\"/api/chat/chat-msg\", {\n        chatMsg: this.state.chatInput,\n        reciever: recieverId\n      })\n      .then(res => {\n        socket.send(res.data);\n        this.getMsg();\n      })\n\n      .catch(err => console.log(err));\n  };\n\n  handleQuery = (e, history) => {\n    e.preventDefault();\n    if (!this.state.selectInputfield) {\n      return;\n    }\n    this.getAllUser();\n    this.setState({\n      searchInput: this.state.searchInputfield,\n      select: this.state.selectInputfield\n    });\n\n    if (history) {\n      history.push(\"/search-result\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Route\n          render={routerProps => {\n            // console.log(routerProps);\n            return (\n              <Navbar\n                user={this.state.user}\n                clearUser={this.setUser}\n                select={this.state.select}\n                searchInput={this.state.searchInput}\n                selectInputfield={this.state.selectInputfield}\n                searchInputfield={this.state.searchInputfield}\n                handleChange={this.handleChange}\n                handleQuery={this.handleQuery}\n                getAllUser={this.getAllUser}\n                history={routerProps.history}\n                handleChangeNav={this.handleChangeNav}\n                showNewsfeed={this.state.showNewsfeed}\n                showMyEvents={this.state.showMyEvents}\n                showEventsGoing={this.state.showEventsGoing}\n                showNextEvents={this.state.showNextEvents}\n              />\n            );\n          }}\n        />\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\" //it s Home Page\n            render={props => {\n              if (this.state.user) {\n                return (\n                  <Home\n                    {...props}\n                    user={this.state.user}\n                    getAllEvents={this.getAllEvents}\n                    allEvents={this.state.allEvents}\n                    state={this.state}\n                    showNewsfeed={this.state.showNewsfeed}\n                    showMyEvents={this.state.showMyEvents}\n                    showEventsGoing={this.state.showEventsGoing}\n                    showNextEvents={this.state.showNextEvents}\n                    handleChangeNav={this.handleChangeNav}\n                    chatMsg={this.state.chatMsg}\n                  />\n                );\n              } else {\n                return <Redirect to=\"/signup\" />;\n              }\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/search-result\"\n            render={routerProps => (\n              <SearchResult\n                {...routerProps}\n                user={this.state.user}\n                allUsers={this.state.allUsers}\n                select={this.state.select}\n                searchInput={this.state.searchInput}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/messenger/:neighborId\"\n            render={props => (\n              <Messenger\n                {...props}\n                allUsers={this.state.allUsers}\n                user={this.state.user}\n                chatMsg={this.state.chatMsg}\n                chatInput={this.state.chatInput}\n                handleChange={this.handleChange}\n                handleChatInputSubmit={this.handleChatInputSubmit}\n                getMsg={this.getMsg}\n                setRecieverAction={this.setRecieverAction}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/signup\"\n            render={props => <Signup {...props} setUser={this.setUser} />}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={props => <Login {...props} setUser={this.setUser} />}\n          />\n\n          <Route\n            exact\n            path=\"/:username\"\n            render={props => (\n              <ProfileDetails\n                {...props}\n                user={this.state.user}\n                allUsers={this.state.allUsers}\n                setUser={this.setUser}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/events/create\"\n            render={props => (\n              <AddEvent {...props} getAllEvents={this.getAllEvents} />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/events/:id\"\n            render={props => (\n              <EventDetails\n                {...props}\n                state={this.state}\n                user={this.state.user}\n                allUsers={this.state.allUsers}\n                getAllEvents={this.getAllEvents}\n              />\n            )}\n          />\n        </Switch>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  const user = response.data;\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}