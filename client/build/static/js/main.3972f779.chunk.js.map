{"version":3,"sources":["services/auth.js","components/Navbar.js","components/events/EventOverview.js","services/general-functions.js","components/events/MyEvents.js","components/posts/AddPost.js","services/distance.js","components/posts/PostList.js","components/posts/Newsfeed.js","components/events/EventsGoing.js","components/events/NextEvents.js","components/Home.js","services/upload-img.js","components/events/EventPic.js","components/events/AddEvent.js","components/events/Guestlist.js","components/events/CommentList.js","components/events/AddComment.js","components/events/Comments.js","components/events/EventDetails.js","components/SearchResult.js","components/MessengerNav.js","components/ChatArea.js","components/Messenger.js","components/Signup.js","components/Login.js","components/profiles/AboutMe.js","components/profiles/ProfilePic.js","components/profiles/OfferService.js","components/profiles/OfferStuff.js","components/profiles/ReferenceCard.js","components/profiles/Reference.js","components/profiles/ProfileDetails.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["signup","username","password","street","houseNumber","city","postalCode","axios","post","then","response","data","catch","err","login","Navbar","props","className","to","id","onClick","handleChangeNav","showNewsfeed","showMyEvents","showEventsGoing","showNextEvents","user","Form","onSubmit","event","handleQuery","history","name","onChange","handleChange","value","selectInputfield","type","placeholder","searchInputfield","Button","variant","Fragment","delete","clearUser","EventOverview","numOfPplGoingDisplay","hostInfo","creater","join","length","pastEvent","Container","key","_id","Row","Col","xs","md","src","imageUrl","width","alt","date","slice","time","address","formattedAddress","height","getFormattedDate","queryDate","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","futureEventCheck","dateFromDatabase","timeFromDatabase","isFutureEvent","eventDate","Date","eventTimeArr","split","hh","Number","setHours","getDateWithTime","MyEvents","myEvents","state","allEvents","filter","sort","a","b","dateA","dateB","map","index","pastEvents","AddPost","description","handleFormSubmit","e","preventDefault","trim","coordinates","getAllEvents","setState","console","log","target","this","Group","Control","as","rows","Component","distance","coordinates1","coordinates2","dx","lng","dy","lat","Math","sqrt","toFixed","PostList","postList","formattedDate","month","0","1","2","3","4","5","6","7","8","9","10","11","widht","res","item","Newsfeed","EventsGoing","eventsGoing","includes","NextEvents","nextEvents","Home","userChatMsg","chatNeighborId","chatMsg","lastMsg","sender","reciever","sm","style","textAlign","handleUpload","theFile","EventPic","handleFileUpload","AddEvent","photoMessage","inputWarning","errMessage","push","chosenFile","files","size","indexOf","uploadData","FormData","append","uploadOn","secure_url","lg","Label","htmlFor","required","min","Guestlist","userJoins","handleClick","put","getSingleEvent","componentDidMount","joinedUsers","el","isHost","CommentList","commentList","comments","comment","author","commentId","content","AddComment","eventId","Comments","EventDetails","editForm","dateForForm","timeForForm","params","match","get","responseFromApi","originalImage","deleteEvent","toggleEdit","isSameUser","allUsers","SearchResult","neighbor","loggedInUserLocation","otherUserLocation","sortedNeighbor","distanceA","distanceB","searchWord","searchInput","select","offerService","toLowerCase","offerStuff","displayService","displayOfferStuff","neighborCards","eachDistance","textDecoration","color","credits","margin","MessengerNav","navInfo","nameOrder","forEach","neighborId","msg","timeStamp","createdAt","monthEng","12","nameOrderUnique","Set","reverse","navDisplay","Array","from","monthNum","lastMessage","exact","activeClassName","hidePanelArea","ChatArea","chatAreaMsg","chatAreaDisplay","message","neighborName","neighborPic","selectedUser","backgroundColor","justifyContent","alignItems","window","innerWidth","innerHeight","hideChatArea","handleChatInputSubmit","chatInput","Messenger","panelArea","current","display","chatArea","React","createRef","showChatArea","setChatArea","fluid","ref","Signup","error","handleSubmit","isValidUserName","test","setUser","Alert","Login","AboutMe","sameUser","showAboutMeForm","toggleForm","updateAboutMe","aboutMe","cancelEditAboutMe","ProfilePic","canUpdateImg","handleSubmitFile","handleFileChange","OfferService","services","showOfferServiceForm","deleteService","listStyleType","handleSubmitOfferService","serviceInput","OfferStuff","stuff","showOfferStuffForm","deleteStuff","handleSubmitOfferStuff","stuffInput","ReferenceCard","reference","stars","repeat","rating","fontStyle","fontSize","Reference","createdRef","showReferenceForm","authorCredits","showNotEnoughCredit","showNeedtoWriteSth","addReference","showReferenceAlert","domEl","profileOwner","step","handleCreditChange","creditInput","count","handleRatingChange","half","color2","handleRefChange","referenceInput","cancelEditReference","ProfileDetails","following","showAddressForm","showDeleteAlert","addressInvalidMsg","originalImgUrl","getData","status","obj","updateAddress","cancelEditAddress","deleteItem","parseInt","recievedCredit","submitReference","authorData","profileOwnerData","deleteAccount","toggleDelAlertFunction","prevProps","Footer","rel","href","endpoint","process","PORT","socket","socketIOClient","App","recieverAction","setValue","object","getAllUser","getMsg","recieverId","send","on","render","routerProps","path","setRecieverAction","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3972f779.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst signup = (username, password, street, houseNumber, city, postalCode) => {\n  return axios\n    .post(\"/api/auth/signup\", {\n      username: username,\n      password: password,\n      street: street,\n      houseNumber: houseNumber,\n      city: city,\n      postalCode: postalCode\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(\"/api/auth/login\", {\n      username: username,\n      password: password\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      return err.response.data;\n    });\n};\n\nconst logout = () => {\n  axios.delete(\"/api/auth/logout\");\n};\n\nexport { signup, login, logout };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { logout } from \"../services/auth\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst Navbar = props => {\n  const handleLogout = () => {\n    // destroys the session on the server\n    logout();\n    // updates the `user` state in App\n    props.clearUser(null);\n\n    props.handleChangeNav({\n      showNewsfeed: true,\n      showMyEvents: false,\n      showEventsGoing: false,\n      showNextEvents: false\n    });\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light nav-menu py-1\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        <button\n          id=\"logo-button\"\n          onClick={() =>\n            props.handleChangeNav({\n              showNewsfeed: true,\n              showMyEvents: false,\n              showEventsGoing: false,\n              showNextEvents: false\n            })\n          }\n        >\n          KieZ\n        </button>\n      </Link>\n\n      {props.user ? (\n        <div className=\"searchRow\">\n          <Form\n            className=\"input-group btn-group\"\n            onSubmit={event => props.handleQuery(event, props.history)}\n          >\n            <select\n              className=\"custom-select\"\n              name=\"selectInputfield\"\n              onChange={props.handleChange}\n              value={props.selectInputfield}\n            >\n              <option value=\"\">Select Option</option>\n              <option value=\"Neighbors\">Find by Username</option>\n              <option value=\"Help\">Find by Lend-item / Help</option>\n            </select>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"searchInputfield\"\n              placeholder=\"Find your Neighbors here\"\n              onChange={props.handleChange}\n              value={props.searchInputfield}\n            />\n\n            <div className=\"btn-group\">\n              <Button variant=\"outline-secondary\" type=\"submit\">\n                Search\n              </Button>\n            </div>\n          </Form>\n        </div>\n      ) : (\n        <React.Fragment />\n      )}\n\n      <div className=\"py-1\">\n        {props.user ? (\n          <>\n            <Link\n              className=\"btn btn-outline-success\"\n              to={`/${props.user.username}`}\n            >\n              {props.user.username}\n            </Link>\n            <Link className=\"btn btn-outline-info mx-3\" to=\"/events/create\">\n              Create Event\n            </Link>\n            <Link\n              to=\"/\"\n              onClick={handleLogout}\n              className=\"btn btn-outline-danger\"\n            >\n              Logout\n            </Link>\n          </>\n        ) : (\n          <React.Fragment>\n            <Link className=\"btn btn-outline-info mr-3\" to=\"/signup\">\n              Signup\n            </Link>\n            <Link className=\"btn btn-outline-info\" to=\"/login\">\n              Login\n            </Link>\n          </React.Fragment>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst EventOverview = props => {\n  let numOfPplGoingDisplay = \"\";\n  let hostInfo = `Hosted by ${props.event.creater.username} `;\n\n  if (props.event.join.length === 1) {\n    numOfPplGoingDisplay = `\\u2022 ${props.event.join.length} person is going \\u2022`;\n  }\n  if (props.event.join.length > 1) {\n    numOfPplGoingDisplay = `\\u2022 ${props.event.join.length} people are going \\u2022`;\n  }\n\n  if (props.pastEvent && props.event.join.length >= 1) {\n    numOfPplGoingDisplay = `\\u2022 ${props.event.join.length} person joined \\u2022`;\n  }\n\n  let eventOverview = (\n    <Container key={props.event._id} className=\"mb-3\">\n      <Link to={`/events/${props.event._id}`} className=\"event-overview-text\">\n        <Row>\n          <Col xs={12} md={5} className=\"px-0 px-md-2\">\n            <img\n              src={props.event.imageUrl}\n              className=\"overview-event-img\"\n              width=\"90%\"\n              alt={props.event.name}\n            />\n          </Col>\n          <Col xs={12} md={7} className=\"px-0 px-md-2\">\n            <h2 className=\"event-overview-heading h2-heading\">\n              {props.event.name}\n            </h2>\n            <div className=\"date\">\n              <h5 className=\"sub-heading\">\n                {props.event.date.slice(0, 10)} at{\" \"}\n                {props.event.time.slice(0, 5)}\n              </h5>\n              <h5 className=\"sub-heading\">\n                {props.event.address.formattedAddress}\n              </h5>\n            </div>\n\n            <h5 className=\"overview-host-info\">\n              <img\n                src={props.event.creater.imageUrl}\n                width=\"30\"\n                height=\"30\"\n                className=\"user-pic mx-1\"\n                alt={props.event.creater.username}\n              />\n              {hostInfo}\n              {numOfPplGoingDisplay}\n            </h5>\n          </Col>\n        </Row>\n      </Link>\n    </Container>\n  );\n\n  return eventOverview;\n};\n\nexport default EventOverview;\n","let getFormattedDate = queryDate => {\n  let dd = String(queryDate.getDate()).padStart(2, \"0\");\n  let mm = String(queryDate.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  let yyyy = queryDate.getFullYear();\n\n  queryDate = `${yyyy}-${mm}-${dd}`;\n\n  return queryDate;\n};\n\nlet futureEventCheck = (dateFromDatabase, timeFromDatabase) => {\n  if (!dateFromDatabase || !timeFromDatabase) {\n    return false;\n  }\n\n  let isFutureEvent = false;\n  let eventDate = new Date(dateFromDatabase);\n  let eventTimeArr = timeFromDatabase.split(\":\");\n  let hh = Number(eventTimeArr[0]);\n  let mm = Number(eventTimeArr[1]);\n  eventDate.setHours(hh, mm, 0);\n  let currentDate = new Date();\n\n  if (eventDate > currentDate) {\n    isFutureEvent = true;\n  }\n\n  return isFutureEvent;\n};\n\nlet getDateWithTime = (dateFromDatabase, timeFromDatabase) => {\n  let eventDate = new Date(dateFromDatabase);\n  let eventTimeArr = timeFromDatabase.split(\":\");\n  let hh = Number(eventTimeArr[0]);\n  let mm = Number(eventTimeArr[1]);\n  eventDate.setHours(hh, mm, 0);\n  return eventDate;\n};\n\nexport { getFormattedDate, futureEventCheck, getDateWithTime };\n","import React from \"react\";\nimport EventOverview from \"./EventOverview\";\nimport {\n  futureEventCheck,\n  getDateWithTime\n} from \"../../services/general-functions.js\";\n\nconst MyEvents = props => {\n  let myEvents = (\n    <div>\n      <h1 className=\"h1-heading\">My Created Events</h1>\n      <h3 className=\"event-list-h3\">Upcoming Events: </h3>\n      {props.state.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            event.creater._id === props.user._id &&\n            isFutureEvent &&\n            event.type === \"event\"\n          );\n        })\n        .sort(function(a, b) {\n          let dateA = getDateWithTime(a.date, a.time);\n          let dateB = getDateWithTime(b.date, b.time);\n          if (dateA < dateB) {\n            return -1;\n          }\n          if (dateA > dateB) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((event, index) => {\n          return <EventOverview key={index} event={event} />;\n        })}\n    </div>\n  );\n\n  let pastEvents = (\n    <div>\n      <h3 className=\"event-list-h3\">Past Events: </h3>\n      {props.state.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            event.creater._id === props.state.user._id &&\n            !isFutureEvent &&\n            event.type === \"event\"\n          );\n        })\n        .sort(function(a, b) {\n          let dateA = getDateWithTime(a.date, a.time);\n          let dateB = getDateWithTime(b.date, b.time);\n          if (dateA < dateB) {\n            return 1;\n          }\n          if (dateA > dateB) {\n            return -1;\n          }\n          return 0;\n        })\n        .map((event, index) => {\n          let pastEvent = true;\n          return (\n            <EventOverview key={index} pastEvent={pastEvent} event={event} />\n          );\n        })}\n    </div>\n  );\n\n  return (\n    <div>\n      {myEvents} {pastEvents}\n    </div>\n  );\n};\n\nexport default MyEvents;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nclass AddPost extends Component {\n  state = {\n    description: \"\",\n    imageUrl: \"\", //for future, if we want to add image to post\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    const description = this.state.description;\n\n    if (description.trim() === \"\") {\n      return;\n    }\n\n    axios\n      .post(\"/api/events\", {\n        description,\n        type: \"post\",\n        street: this.props.user.address.street,\n        houseNumber: this.props.user.address.houseNumber,\n        city: this.props.user.address.city,\n        postalCode: this.props.user.address.postalCode,\n        coordinates: this.props.user.address.coordinates,\n        formattedAddress: this.props.user.address.formattedAddress,\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\",\n      })\n      .then(this.props.getAllEvents)\n      .then(this.setState({ description: \"\" }))\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleChange = (e) => {\n    const description = e.target.value;\n    this.setState({\n      description: description,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"post-form\">\n        <Form onSubmit={this.handleFormSubmit}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              as=\"textarea\"\n              rows=\"3\"\n              name=\"description\"\n              onChange={this.handleChange}\n              value={this.state.description}\n              placeholder=\"What do you want to tell to your neighbors?\"\n            />\n          </Form.Group>\n          <div className=\"flex-end-btn\">\n            <Button type=\"submit\">Post</Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddPost;\n","const distance = (coordinates1, coordinates2) => {\n  let dx = 71.5 * (coordinates1.lng - coordinates2.lng);\n  let dy = 111.3 * (coordinates1.lat - coordinates2.lat);\n  return Math.sqrt(dx * dx + dy * dy).toFixed(1);\n};\n\nexport { distance };\n\n// // Example:\n// distance(\n//   { lat: 52.5023865, lng: 13.4062956 },\n//   { lat: 52.503706, lng: 13.410135 }\n// );\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { distance } from \"../../services/distance\";\n\nconst PostList = props => {\n  let postList = (\n    <>\n      {props.allEvents\n        .filter(\n          post =>\n            post.type === \"post\" &&\n            distance(post.address.coordinates, props.user.address.coordinates) <\n              3\n        )\n        .sort(function(a, b) {\n          return new Date(b.date) - new Date(a.date);\n        })\n        .map(post => {\n          let monthEng = {\n            0: \"Jan\",\n            1: \"Feb\",\n            2: \"Mar\",\n            3: \"Apr\",\n            4: \"May\",\n            5: \"Jun\",\n            6: \"Jul\",\n            7: \"Aug\",\n            8: \"Sep\",\n            9: \"Oct\",\n            10: \"Nov\",\n            11: \"Dec\"\n          };\n          let formattedDate = new Date(post.date);\n          let date = formattedDate.getDate();\n          let monthNum = formattedDate.getMonth();\n          let month = monthEng[monthNum];\n\n          let deletePost = id => {\n            axios\n              .delete(`/api/events/${id}`)\n              .then(res => {\n                props.getAllEvents();\n              })\n              .catch(err => {\n                console.log(err);\n              });\n          };\n\n          return (\n            <div key={post._id} className=\"post\">\n              <div>\n                <Link\n                  to={`/${post.creater.username}`}\n                  className=\"text-decoration-none\"\n                >\n                  <img\n                    src={post.creater.imageUrl}\n                    className=\"user-pic\"\n                    width=\"34\"\n                    height=\"34\"\n                    alt={post.username}\n                  />\n                  <span className=\"username\">{` ${post.creater.username}`}</span>\n                </Link>\n                <span className=\"date\">{`   ${date}. ${month} `}</span>\n\n                {post.creater.username === props.user.username ? (\n                  <button\n                    className=\"bin\"\n                    widht=\"20%\"\n                    onClick={() => deletePost(post._id)}\n                  >\n                    <i className=\"fas fa-trash-alt\"></i>\n                  </button>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n\n              <p>\n                {post.description\n                  .trim()\n                  .split(\"\\n\")\n                  .map((item, index) => {\n                    return (\n                      <span key={index}>\n                        {item}\n\n                        <br />\n                      </span>\n                    );\n                  })}\n              </p>\n            </div>\n          );\n        })}\n    </>\n  );\n  return <div>{postList}</div>;\n};\n\nexport default PostList;\n","import React, { Component } from \"react\";\nimport AddPost from \"../posts/AddPost\";\nimport PostList from \"../posts/PostList\";\n\nclass Newsfeed extends Component {\n  render() {\n    return (\n      <>\n        <AddPost user={this.props.user} getAllEvents={this.props.getAllEvents}/>\n        <PostList getAllEvents={this.props.getAllEvents} allEvents={this.props.allEvents} user={this.props.user}/>\n      </>\n    );\n  }\n}\n\nexport default Newsfeed;\n","import React from \"react\";\nimport EventOverview from \"./EventOverview\";\nimport {\n  futureEventCheck,\n  getDateWithTime\n} from \"../../services/general-functions.js\";\n\nconst EventsGoing = props => {\n  let eventsGoing = (\n    <div>\n      <h1 className=\"h1-heading\">Events I´m Joining</h1>\n      {props.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            event.join.includes(props.user._id) &&\n            event.type === \"event\" &&\n            isFutureEvent\n          );\n        })\n        .sort(function(a, b) {\n          let dateA = getDateWithTime(a.date, a.time);\n          let dateB = getDateWithTime(b.date, b.time);\n          if (dateA < dateB) {\n            return -1;\n          }\n          if (dateA > dateB) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((event, index) => {\n          return <EventOverview key={index} event={event} />;\n        })}\n    </div>\n  );\n\n  return <div>{eventsGoing}</div>;\n};\n\nexport default EventsGoing;\n","import React from \"react\";\nimport EventOverview from \"./EventOverview\";\nimport { distance } from \"../../services/distance\";\nimport {\n  futureEventCheck,\n  getDateWithTime\n} from \"../../services/general-functions.js\";\n\n//// Filter for distaance!!!!!!!!!!!!!!!!!!!!\n\nconst NextEvents = props => {\n  let nextEvents = (\n    <div>\n      <h1 className=\"h1-heading\">Upcoming Events in your Neighborhood</h1>\n\n      {props.state.allEvents\n        .filter(event => {\n          let isFutureEvent = futureEventCheck(event.date, event.time);\n          return (\n            distance(\n              props.user.address.coordinates,\n              event.address.coordinates\n            ) < 3 &&\n            isFutureEvent &&\n            event.type === \"event\"\n          );\n        })\n        .sort(function(a, b) {\n          let dateA = getDateWithTime(a.date, a.time);\n          let dateB = getDateWithTime(b.date, b.time);\n          if (dateA < dateB) {\n            return -1;\n          }\n          if (dateA > dateB) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((event, index) => {\n          return <EventOverview key={index} event={event} />;\n        })}\n    </div>\n  );\n  return <div>{nextEvents}</div>;\n};\n\nexport default NextEvents;\n","import React, { Component } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport MyEvents from \"./events/MyEvents\";\nimport Newsfeed from \"./posts/Newsfeed\";\nimport EventsGoing from \"./events/EventsGoing\";\nimport NextEvents from \"./events/NextEvents\";\n\nexport default class Home extends Component {\n  componentDidMount() {\n    this.props.getAllEvents();\n  }\n\n  render() {\n    let userChatMsg = \"\";\n    let chatNeighborId = \"\";\n    if (this.props.chatMsg.length) {\n      userChatMsg = [...this.props.chatMsg];\n      let lastMsg = userChatMsg && userChatMsg[userChatMsg.length - 1];\n      if (lastMsg) {\n        lastMsg.sender._id !== this.props.user._id\n          ? (chatNeighborId = lastMsg.sender._id)\n          : (chatNeighborId = lastMsg.reciever._id);\n      }\n    }\n\n    return (\n      <Container id=\"home\">\n        <Row className=\"nested-row\">\n          <Col md={3} sm={12} className=\"home-navbar\">\n            <div style={{ textAlign: \"center\" }}>\n              <img\n                src={`${this.props.user.imageUrl}`}\n                alt={`${this.props.user.username}`}\n                width=\"150vw\"\n                height=\"150vw\"\n                className=\"user-pic\"\n                id=\"main-page-profile-pic\"\n              />\n            </div>\n            <Row>\n              <Col md={12} xs={6}>\n                {userChatMsg.length > 0 && (\n                  <Link\n                    to={`/messenger/${chatNeighborId}`}\n                    className=\"btn btn-light home-side-nav\"\n                    id=\"home-nav-button4\"\n                  >\n                    <i className=\"fas fa-envelope\"></i> Messenger\n                  </Link>\n                )}\n              </Col>\n\n              <Col md={12} xs={6}>\n                <Button\n                  className=\"home-side-nav\"\n                  id=\"home-nav-button1\"\n                  variant=\"light\"\n                  onClick={() => {\n                    this.props.handleChangeNav({\n                      showNewsfeed: false,\n                      showMyEvents: true,\n                      showEventsGoing: false,\n                      showNextEvents: false,\n                    });\n                  }}\n                >\n                  My created events\n                </Button>\n              </Col>\n\n              <Col md={12} xs={6}>\n                <Button\n                  className=\"home-side-nav\"\n                  id=\"home-nav-button2\"\n                  variant=\"light\"\n                  onClick={() =>\n                    this.props.handleChangeNav({\n                      showNewsfeed: false,\n                      showMyEvents: false,\n                      showEventsGoing: true,\n                      showNextEvents: false,\n                    })\n                  }\n                >\n                  Events I´m joining\n                </Button>\n              </Col>\n\n              <Col md={12} xs={6}>\n                <Button\n                  className=\"home-side-nav\"\n                  id=\"home-nav-button3\"\n                  variant=\"light\"\n                  onClick={() => {\n                    this.props.handleChangeNav({\n                      showNewsfeed: false,\n                      showMyEvents: false,\n                      showEventsGoing: false,\n                      showNextEvents: true,\n                    });\n                  }}\n                >\n                  All future events\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col md={9} id=\"newsfeed\">\n            {this.props.showNewsfeed && (\n              <Newsfeed\n                user={this.props.user}\n                allEvents={this.props.allEvents}\n                getAllEvents={this.props.getAllEvents}\n              />\n            )}\n            {this.props.showMyEvents && (\n              <MyEvents state={this.props.state} user={this.props.user} />\n            )}\n            {this.props.showEventsGoing && (\n              <EventsGoing\n                user={this.props.user}\n                allEvents={this.props.allEvents}\n              />\n            )}\n            {this.props.showNextEvents && (\n              <NextEvents state={this.props.state} user={this.props.user} />\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import axios from \"axios\";\n\nconst handleUpload = theFile => {\n  return axios\n    .post(\"/api/upload\", theFile)\n    .then(response => response.data)\n    .catch(err => err.response.data);\n};\n\nexport { handleUpload };\n","import React, { Component, Fragment } from \"react\";\n\nexport default class EventPic extends Component {\n  render() {\n    return (\n      <Fragment>\n        <img src={this.props.imageUrl} alt=\"event-img\" width=\"100%\" />\n        <input type=\"file\" onChange={this.props.handleFileUpload} />\n      </Fragment>\n    );\n  }\n}\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { handleUpload } from \"../../services/upload-img\";\nimport EventPic from \"./EventPic\";\nimport { getFormattedDate } from \"../../services/general-functions.js\";\n\nclass AddEvent extends Component {\n  state = {\n    type: \"event\",\n    name: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    date: \"\",\n    time: \"\",\n    description: \"\",\n    imageUrl:\n      \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\",\n    photoMessage: null,\n    inputWarning: null\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n\n    let street = this.state.street.trim();\n    let city = this.state.city.trim();\n    let houseNumber = this.state.houseNumber.trim();\n    if (!city || !street || !houseNumber) {\n      this.setState({\n        inputWarning:\n          \"* The street, city and house number input should contain valid characters\"\n      });\n      return;\n    }\n\n    const {\n      name,\n\n      postalCode,\n      date,\n      time,\n      imageUrl,\n      description\n    } = this.state;\n\n    axios\n      .post(\"/api/events\", {\n        type: \"event\",\n        name,\n        street,\n        houseNumber,\n        city,\n        postalCode,\n        date,\n        time,\n        imageUrl,\n        description\n      })\n      .then(res => {\n        if (res.data.errMessage) {\n          this.setState({\n            inputWarning: `* ${res.data.errMessage}`\n          });\n\n          return;\n        }\n        this.props.history.push(`/events/${res.data._id}`); // Redirect\n      })\n      .then(this.props.getAllEvents) // to update the eventslist -> so we have the new created event there\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFileUpload = e => {\n    let imgSizeLimit = 5000000; //5MB\n    let allowedFormat = [\"image/jpeg\", \"image/png\"];\n    let chosenFile = e.target.files[0];\n\n    if (!chosenFile) {\n      this.setState({\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\"\n      });\n      return;\n    }\n\n    if (chosenFile.size > imgSizeLimit) {\n      this.setState({\n        photoMessage: \"* Size of image should be less than 5MB\",\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\"\n      });\n      return;\n    }\n\n    if (allowedFormat.indexOf(chosenFile.type) < 0) {\n      this.setState({\n        photoMessage: \"* Format of image should be jpeg or png\",\n        imageUrl:\n          \"https://res.cloudinary.com/dqrjpg3xc/image/upload/v1575651991/kiez/default-event-img.jpg.jpg\"\n      });\n      return;\n    }\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n    this.setState({ uploadOn: true, photoMessage: \"\" });\n    handleUpload(uploadData)\n      .then(response => {\n        this.setState({\n          imageUrl: response.secure_url,\n          uploadOn: false\n        });\n      })\n      .catch(err => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  render() {\n    return (\n      <Container className=\"container event-form-container mt-2 mb-5\">\n        <h1 className=\"mx-2 h1-heading\">\n          Create an event for your neighborhood\n        </h1>\n        <Row>\n          <Col md={5} lg={4} className=\"event-form-img-container\">\n            <EventPic\n              imageUrl={this.state.imageUrl}\n              handleFileUpload={this.handleFileUpload}\n            />\n            <p className=\"warning\">{this.state.photoMessage}</p>\n          </Col>\n\n          <Col md={7} lg={8}>\n            <Form\n              onSubmit={this.handleFormSubmit}\n              className=\"row mx-lg-5 mt-lg-4\"\n            >\n              <Form.Group className=\"col-12\">\n                {this.state.inputWarning && (\n                  <p className=\"warning\">{this.state.inputWarning}</p>\n                )}\n                <Form.Label htmlFor=\"name\">Name: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.handleChange}\n                  value={this.state.name}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-8\">\n                <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"street\"\n                  id=\"street\"\n                  onChange={this.handleChange}\n                  value={this.state.street}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-4\">\n                <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"houseNumber\"\n                  id=\"houseNumber\"\n                  onChange={this.handleChange}\n                  value={this.state.houseNumber}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-8\">\n                <Form.Label htmlFor=\"city\">City: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  id=\"city\"\n                  onChange={this.handleChange}\n                  value={this.state.city}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-4\">\n                <Form.Label htmlFor=\"postalCode\">Postalcode: </Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"postalCode\"\n                  min=\"0\"\n                  id=\"postalCode\"\n                  onChange={this.handleChange}\n                  value={this.state.postalCode}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-6\">\n                <Form.Label htmlFor=\"date\">Date: </Form.Label>\n                <Form.Control\n                  type=\"date\"\n                  name=\"date\"\n                  id=\"date\"\n                  min={getFormattedDate(new Date())}\n                  onChange={this.handleChange}\n                  value={this.state.date}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-6\">\n                <Form.Label htmlFor=\"time\">Time: </Form.Label>\n                <Form.Control\n                  type=\"time\"\n                  name=\"time\"\n                  id=\"time\"\n                  onChange={this.handleChange}\n                  value={this.state.time}\n                  required={true}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"col-12\">\n                <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  as=\"textarea\"\n                  rows=\"3\"\n                  name=\"description\"\n                  id=\"description\"\n                  onChange={this.handleChange}\n                  value={this.state.description}\n                />\n              </Form.Group>\n              <div className=\"col-12 flex-end-btn\">\n                <Button type=\"submit\">Create an Event</Button>\n              </div>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AddEvent;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nclass Guestlist extends Component {\n  state = {\n    userJoins: null\n  };\n\n  handleClick = () => {\n    this.setState(\n      {\n        userJoins: !this.state.userJoins\n      },\n      () => {\n        axios\n          .put(\"/api/events/eventUpdate\", {\n            event: this.props.event,\n            userJoins: this.state.userJoins\n          })\n          .then(() => {\n            this.props.getSingleEvent();\n            this.props.getAllEvents();\n          });\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    const inEvent = this.props.joinedUsers.filter(el => {\n      return el._id === this.props.user._id;\n    });\n\n    if (inEvent.length) {\n      this.setState({ userJoins: true });\n    } else {\n      this.setState({ userJoins: false });\n    }\n  };\n\n  render() {\n    let isHost = false;\n    if (this.props.event.creater._id === this.props.user._id) {\n      isHost = true;\n    }\n\n    return (\n      <Container id=\"join-info\">\n        <h4 className=\"sub-heading\">\n          Host: {\"    \"}\n          <Link\n            to={`/${this.props.event.creater.username}`}\n            className=\"text-decoration-none\"\n          >\n            <img\n              className=\"user-pic guest-pic\"\n              src={this.props.event.creater.imageUrl}\n              alt={this.props.event.creater.username}\n            />{\" \"}\n            <span className=\"username\">\n              {this.props.event.creater.username}{\" \"}\n            </span>\n          </Link>\n        </h4>\n        {!isHost && this.props.isFutureEvent && (\n          <Button\n            variant=\"light\"\n            onClick={this.handleClick}\n            id={`${this.state.userJoins ? \"joined-button\" : \"join-button\"}`}\n          >\n            {this.state.userJoins ? (\n              <i className=\"fas fa-user-friends\"></i>\n            ) : (\n              <i className=\"fas fa-user-alt\"></i>\n            )}{\" \"}\n            {this.state.userJoins ? \"Joined\" : \"Join\"}\n          </Button>\n        )}\n        <Row id=\"guest-list-row\">\n          {this.props.joinedUsers.map(el => {\n            return (\n              <Col xs={2} md={3} lg={2} className=\"guest\" key={el._id}>\n                <Link to={`/${el.username}`} className=\"text-decoration-none\">\n                  <img\n                    className=\"user-pic guest-pic\"\n                    src={el.imageUrl}\n                    alt={el.username}\n                  />{\" \"}\n                  <p className=\"username mb-0\">{el.username}</p>\n                </Link>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Guestlist;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst CommentList = props => {\n  let commentList = (\n    <>\n      {props.event.comments\n        .sort(function(a, b) {\n          return new Date(a.date) - new Date(b.date);\n        })\n        .map(comment => {\n          let deleteComment = commentId => {\n            axios\n              .put(`/api/comments/${props.event._id}`, { commentId: commentId })\n              .then(() => {\n                props.getSingleEvent();\n                props.getAllEvents();\n              });\n          };\n\n          return (\n            <div key={comment._id} className=\"comment-box\">\n              <div>\n                <Link\n                  to={`/${comment.author.username}`}\n                  className=\"text-decoration-none\"\n                >\n                  <img\n                    src={comment.author.imageUrl}\n                    className=\"user-pic\"\n                    width=\"40\"\n                    height=\"40\"\n                    alt={comment.author.username}\n                  />{\" \"}\n                  <span className=\"username\">{comment.author.username}</span>\n                </Link>\n                {comment.author.username === props.user.username ? (\n                  <button\n                    className=\"bin\"\n                    widht=\"20%\"\n                    onClick={() => deleteComment(comment._id)}\n                  >\n                    <i className=\"fas fa-trash-alt\"></i>\n                  </button>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              <p>\n                {comment.content\n                  .trim()\n                  .split(\"\\n\")\n                  .map((item, index) => {\n                    return (\n                      <span key={index}>\n                        {item}\n\n                        <br />\n                      </span>\n                    );\n                  })}\n              </p>\n            </div>\n          );\n        })}\n    </>\n  );\n\n  return props.event ? <div>{commentList}</div> : <div></div>;\n};\nexport default CommentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nclass AddComment extends Component {\n  state = {\n    content: \"\",\n  };\n\n  handleChange = (e) => {\n    const content = e.target.value;\n    this.setState({\n      content: content,\n    });\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    const content = this.state.content.trim();\n\n    if (!content) {\n      return;\n    }\n\n    axios\n      .post(`/api/comments/${this.props.eventId}`, {\n        content,\n        author: this.props.user._id,\n      })\n      .then(this.props.getAllEvents)\n      .then(this.setState({ content: \"\" }))\n      .then(() => {\n        this.props.getSingleEvent();\n        this.props.getAllEvents();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleFormSubmit}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              as=\"textarea\"\n              rows=\"3\"\n              name=\"content\"\n              onChange={this.handleChange}\n              value={this.state.content}\n              placeholder=\"write a comment or question\"\n            />\n          </Form.Group>\n          <div className=\"flex-end-btn\">\n            <Button type=\"submit\">Send</Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default AddComment;\n","import React, { Component } from \"react\";\nimport CommentList from \"./CommentList\";\nimport AddComment from \"./AddComment\";\n\nclass Comments extends Component {\n  render() {\n    return (\n      <>\n        <CommentList\n          user={this.props.user}\n          event={this.props.event}\n          getSingleEvent={this.props.getSingleEvent}\n          getAllEvents={this.props.getAllEvents}\n        />\n        <AddComment\n          user={this.props.user}\n          eventId={this.props.eventId}\n          getSingleEvent={this.props.getSingleEvent}\n          getAllEvents={this.props.getAllEvents}\n        />\n      </>\n    );\n  }\n}\n\nexport default Comments;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { handleUpload } from \"../../services/upload-img\";\nimport { Button, Form, Container, Row, Col } from \"react-bootstrap\";\nimport EventPic from \"./EventPic\";\nimport Guestlist from \"./Guestlist\";\nimport Comments from \"./Comments\";\nimport {\n  getFormattedDate,\n  futureEventCheck,\n} from \"../../services/general-functions.js\";\n\nclass EventDetails extends Component {\n  state = {\n    editForm: false,\n    event: {},\n\n    name: \"\",\n    address: null,\n    imageUrl: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    date: \"\",\n    time: \"\",\n    description: \"\",\n\n    dateForForm: \"\",\n    timeForForm: \"\",\n    photoMessage: null,\n    inputWarning: null,\n  };\n\n  getSingleEvent = () => {\n    const { params } = this.props.match;\n    axios\n      .get(`/api/events/${params.id}`)\n      .then((responseFromApi) => {\n        let eventTimeArr = responseFromApi.data.time.split(\":\");\n        let hh = eventTimeArr[0];\n        let mm = eventTimeArr[1];\n\n        let timeForForm = `${hh}:${mm}:00`;\n\n        this.setState({\n          event: responseFromApi.data,\n          name: responseFromApi.data.name,\n          address: responseFromApi.data.address,\n          street: responseFromApi.data.address.street,\n          houseNumber: responseFromApi.data.address.houseNumber,\n          city: responseFromApi.data.address.city,\n          postalCode: responseFromApi.data.address.postalCode,\n          date: responseFromApi.data.date,\n          time: responseFromApi.data.time,\n          imageUrl: responseFromApi.data.imageUrl,\n          description: responseFromApi.data.description,\n          originalImage: responseFromApi.data.imageUrl,\n          dateForForm: getFormattedDate(new Date(responseFromApi.data.date)),\n          timeForForm,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getSingleEvent();\n  }\n\n  deleteEvent = () => {\n    const id = this.state.event._id;\n    axios\n      .delete(`/api/events/${id}`)\n      .then((response) => {\n        this.props.history.push(\"/\");\n      })\n      .then(this.props.getAllEvents)\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  toggleEdit = () => {\n    this.setState({\n      editForm: !this.state.editForm,\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleFileUpload = (e) => {\n    let imgSizeLimit = 5000000; //5MB\n    let allowedFormat = [\"image/jpeg\", \"image/png\"];\n    let chosenFile = e.target.files[0];\n\n    if (!chosenFile) {\n      this.setState({\n        imageUrl: this.state.originalImage,\n      });\n      return;\n    }\n\n    if (chosenFile.size > imgSizeLimit) {\n      this.setState({\n        photoMessage: \"* Size of image should be less than 5MB\",\n        imageUrl: this.state.originalImage,\n      });\n      return;\n    }\n\n    if (allowedFormat.indexOf(chosenFile.type) < 0) {\n      this.setState({\n        photoMessage: \"* Format of image should be jpeg or png\",\n        imageUrl: this.state.originalImage,\n      });\n      return;\n    }\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.setState({ uploadOn: true, photoMessage: \"\" });\n    handleUpload(uploadData)\n      .then((response) => {\n        this.setState({\n          imageUrl: response.secure_url,\n          uploadOn: false,\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    const id = this.props.match.params.id;\n    const date = this.state.dateForForm;\n    const time = this.state.timeForForm;\n\n    let street = this.state.street.trim();\n    let houseNumber = this.state.houseNumber.trim();\n    let city = this.state.city.trim();\n    if (!street || !city || !houseNumber) {\n      this.setState({\n        inputWarning:\n          \"* The street, city and house number input should contain valid characters\",\n      });\n      return;\n    }\n\n    const {\n      name,\n\n      postalCode,\n      imageUrl,\n      description,\n    } = this.state;\n\n    axios\n      .put(`/api/events/${id}`, {\n        name,\n        street,\n        houseNumber,\n        city,\n        postalCode,\n        imageUrl,\n        date,\n        time,\n        description,\n      })\n      .then((response) => {\n        if (response.data.errMessage) {\n          this.setState({\n            inputWarning: `* ${response.data.errMessage}`,\n          });\n\n          return;\n        }\n\n        const {\n          name,\n          address,\n          imageUrl,\n          date,\n          time,\n          description,\n        } = response.data;\n\n        this.setState(\n          {\n            editForm: false,\n            event: response.data,\n            name,\n            address,\n            imageUrl,\n            date,\n            time,\n            description,\n            inputWarning: \"\",\n            photoMessage: \"\",\n          },\n          () => {\n            this.getSingleEvent();\n          }\n        );\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    if (!this.state.date) {\n      return <div className=\"event-detail-page\"></div>;\n    }\n    if (this.state.event.type !== \"event\") {\n      return (\n        <div className=\"event-detail-page\">\n          <h1>Sorry, this page isn't available.</h1>\n          <p>\n            The link you used may be broken, or the page may have been removed.\n          </p>\n        </div>\n      );\n    }\n\n    let description = this.state.description;\n\n    let isFutureEvent = futureEventCheck(this.state.date, this.state.time);\n\n    let isSameUser = false;\n\n    if (\n      this.state.event.creater._id ===\n      (this.props.state.user && this.props.state.user._id)\n    ) {\n      isSameUser = true;\n    }\n\n    if (this.state.editForm === false) {\n      return (\n        <Container className=\"mt-2 mt-md-5 event-detail-page\">\n          <div className=\"d-flex justify-content-end mb-2 mb-md-4\">\n            {isFutureEvent && isSameUser && (\n              <Button\n                variant=\"outline-info\"\n                className=\"mx-2\"\n                onClick={this.toggleEdit}\n              >\n                {`\\u270E`} Edit event\n              </Button>\n            )}\n\n            {isSameUser && (\n              <Button variant=\"outline-danger\" onClick={this.deleteEvent}>\n                {`\\u2715`} Delete event\n              </Button>\n            )}\n          </div>\n          <Row>\n            <Col xs={12} md={6}>\n              <img\n                src={this.state.imageUrl}\n                className=\"event-img\"\n                alt={this.state.name}\n              />\n            </Col>\n            <Col xs={12} md={6}>\n              <h1 className=\"h1-heading\">{this.state.name}</h1>\n              <h5 className=\"date sub-heading\">\n                {this.state.date.slice(0, 10)} at {this.state.time.slice(0, 5)}\n              </h5>\n              <h5 className=\"date sub-heading\">\n                {this.state.address.formattedAddress}\n              </h5>\n              <p>\n                {description\n                  .trim()\n                  .split(\"\\n\")\n                  .map((item, index) => {\n                    return (\n                      <span key={index}>\n                        {item}\n\n                        <br />\n                      </span>\n                    );\n                  })}\n              </p>\n            </Col>\n          </Row>\n          {this.props.state.user._id && (\n            <Row className=\"mt-md-5\">\n              <Col xs={12} md={6}>\n                <Guestlist\n                  event={this.state.event}\n                  joinedUsers={this.state.event.join}\n                  user={this.props.user}\n                  allUsers={this.props.allUsers}\n                  getSingleEvent={this.getSingleEvent}\n                  getAllEvents={this.props.getAllEvents}\n                  isFutureEvent={isFutureEvent}\n                />\n              </Col>\n              <Col xs={12} md={6} id=\"comment-area\">\n                <Comments\n                  user={this.props.user}\n                  eventId={this.props.match.params.id}\n                  event={this.state.event}\n                  getSingleEvent={this.getSingleEvent}\n                  getAllEvents={this.props.getAllEvents}\n                />\n              </Col>\n            </Row>\n          )}\n        </Container>\n      );\n    }\n\n    if (this.state.editForm === true) {\n      return (\n        <Container className=\"container event-form-container mt-2 mb-5\">\n          <h1>Edit event</h1>\n          <Row>\n            <Col md={5} lg={4} className=\"event-form-img-container\">\n              <EventPic\n                imageUrl={this.state.imageUrl}\n                handleFileUpload={this.handleFileUpload}\n              />\n              {this.state.photoMessage && (\n                <p className=\"warning\">{this.state.photoMessage}</p>\n              )}\n            </Col>\n\n            <Col md={7} lg={8}>\n              <Form onSubmit={this.handleFormSubmit} className=\"row mx-lg-5\">\n                <Form.Group className=\"col-12\">\n                  {this.state.inputWarning && (\n                    <p className=\"warning\">{this.state.inputWarning}</p>\n                  )}\n                  <Form.Label htmlFor=\"name\">Name: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    onChange={this.handleChange}\n                    value={this.state.name}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-8\">\n                  <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"street\"\n                    id=\"street\"\n                    onChange={this.handleChange}\n                    value={this.state.street}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-4\">\n                  <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"houseNumber\"\n                    id=\"houseNumber\"\n                    onChange={this.handleChange}\n                    value={this.state.houseNumber}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-8\">\n                  <Form.Label htmlFor=\"city\">City: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"city\"\n                    onChange={this.handleChange}\n                    value={this.state.city}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-4\">\n                  <Form.Label htmlFor=\"postalCode\">Postalcode: </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    name=\"postalCode\"\n                    id=\"postalCode\"\n                    onChange={this.handleChange}\n                    value={this.state.postalCode}\n                    min=\"0\"\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"date\">Date: </Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    name=\"dateForForm\"\n                    id=\"date\"\n                    min={getFormattedDate(new Date())}\n                    onChange={this.handleChange}\n                    value={this.state.dateForForm}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"time\">Time: </Form.Label>\n                  <Form.Control\n                    type=\"time\"\n                    name=\"timeForForm\"\n                    id=\"time\"\n                    onChange={this.handleChange}\n                    value={this.state.timeForForm}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-12\">\n                  <Form.Label htmlFor=\"description\">Description: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    as=\"textarea\"\n                    rows=\"3\"\n                    name=\"description\"\n                    id=\"description\"\n                    onChange={this.handleChange}\n                    value={this.state.description}\n                  />\n                </Form.Group>\n                <div className=\"col-12 flex-end-btn\">\n                  <Button type=\"submit\">Save changes</Button>\n                </div>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default EventDetails;\n","import React from \"react\";\nimport { distance } from \"../../src/services/distance\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchResult = props => {\n  const circleSize = 3;\n\n  let loggedInUserLocation = props.user.address.coordinates;\n\n  let neighbor = \"\";\n\n  neighbor = [...props.allUsers].filter(el => {\n    let otherUserLocation = el.address.coordinates;\n\n    return (\n      distance(loggedInUserLocation, otherUserLocation) <= circleSize &&\n      el.username !== props.user.username\n    );\n  });\n\n  let sortedNeighbor = [...neighbor].sort((a, b) => {\n    let distanceA = distance(loggedInUserLocation, a.address.coordinates);\n    let distanceB = distance(loggedInUserLocation, b.address.coordinates);\n    if (distanceA < distanceB) {\n      return -1;\n    }\n\n    if (distanceA > distanceB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  let searchWord = props.searchInput.trim();\n\n  if (props.select === \"Help\" && searchWord) {\n    sortedNeighbor = sortedNeighbor.filter(el => {\n      for (const element of el.offerService) {\n        if (element.toLowerCase().includes(searchWord.toLowerCase())) {\n          return true;\n        }\n      }\n\n      for (const element of el.offerStuff) {\n        if (element.toLowerCase().includes(searchWord.toLowerCase())) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  }\n\n  if (props.select === \"Neighbors\" && searchWord) {\n    sortedNeighbor = sortedNeighbor.filter(el => {\n      return el.username.toLowerCase().includes(searchWord.toLowerCase());\n    });\n  }\n\n  let displayService = \"\";\n  let displayOfferStuff = \"\";\n\n  let neighborCards = [...sortedNeighbor].map((el, index) => {\n    if (el.offerService) {\n      displayService = el.offerService.map((el, index) => {\n        return (\n          <Col key={index} xs={6} md={3} className=\"px-0\">\n            <span className=\"help-item\">\n              <i className=\"fas fa-icons\"></i>{\" \"}\n            </span>\n            <span>{el}</span>\n          </Col>\n        );\n      });\n    }\n\n    if (el.offerStuff) {\n      displayOfferStuff = el.offerStuff.map((el, index) => {\n        return (\n          <Col key={index} xs={6} md={3} className=\"px-0\">\n            <span className=\"toolbox\">\n              <i className=\"fas fa-toolbox\"></i>{\" \"}\n            </span>\n            <span>{el}</span>\n          </Col>\n        );\n      });\n    }\n    let eachDistance = distance(loggedInUserLocation, el.address.coordinates);\n\n    return (\n      <Container key={index} className=\"each-neighbor-card\">\n        <div className=\"pb-1 pt-2 px-lg-3\">\n          <Link\n            to={`/${el.username}`}\n            style={{ textDecoration: \"none\", color: \"black\" }}\n          >\n            <Row>\n              <Col xs={4} md={2} className=\"pr-md-0\">\n                <img\n                  src={el.imageUrl}\n                  className=\"user-pic search-result-pic\"\n                  alt={el.username}\n                />\n                <div className=\"flex-space-between\">\n                  <span className=\"credit-locat-display\">\n                    <i className=\"fas fa-map-marker-alt\"></i> {eachDistance} km\n                  </span>\n                  <span className=\"credit-locat-display\">\n                    <i className=\"far fa-credit-card\"></i> {el.credits}\n                  </span>\n                </div>\n              </Col>\n              <Col xs={8} md={10} className=\"pl-md-5 px-0\">\n                <h4 className=\"mb-0\">{el.username}</h4>\n                {displayOfferStuff && (\n                  <>\n                    <h6\n                      className=\"search-lend-help-title\"\n                      style={{ color: \"grey\" }}\n                    >\n                      I can lend:\n                    </h6>{\" \"}\n                    <Row style={{ width: \"100%\", margin: 0 }}>\n                      {displayOfferStuff}\n                    </Row>\n                  </>\n                )}\n                {displayService && (\n                  <>\n                    <h6\n                      className=\"search-lend-help-title\"\n                      style={{ color: \"grey\" }}\n                    >\n                      I can help:{\" \"}\n                    </h6>\n                    <Row style={{ width: \"100%\", margin: 0 }}>\n                      {displayService}\n                    </Row>\n                  </>\n                )}\n              </Col>\n            </Row>\n          </Link>\n        </div>\n      </Container>\n    );\n  });\n\n  return (\n    <div id=\"search-result\">\n      <h1 className=\"search-result-heading\">\n        Neighbors around you (within 3 km)\n      </h1>\n\n      {neighborCards.length > 0 ? (\n        <div className=\"neighbor-card\">{neighborCards}</div>\n      ) : (\n        <h3 className=\"search-result-heading\">No Result</h3>\n      )}\n    </div>\n  );\n};\n\nexport default SearchResult;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst MessengerNav = props => {\n  let userChatMsg = \"\";\n  if (props.chatMsg.length) {\n    userChatMsg = [...props.chatMsg].filter(el => {\n      return (\n        el.sender._id === props.user._id || el.reciever._id === props.user._id\n      );\n    });\n  }\n\n  let navInfo = {};\n  let nameOrder = [];\n\n  [...userChatMsg].forEach(el => {\n    // current user is reciever\n    if (el.sender._id !== props.user._id) {\n      navInfo[el.sender.username] = {\n        neighborId: el.sender._id,\n        sender: el.sender._id,\n        msg: el.chatMsg,\n        timeStamp: el.createdAt,\n        imageUrl: el.sender.imageUrl\n      };\n      nameOrder.push(el.sender.username);\n    } else {\n      // current user is the sender\n      navInfo[el.reciever.username] = {\n        neighborId: el.reciever._id,\n        sender: el.sender._id,\n        msg: el.chatMsg,\n        timeStamp: el.createdAt,\n        imageUrl: el.reciever.imageUrl\n      };\n      nameOrder.push(el.reciever.username);\n    }\n  });\n\n  let monthEng = {\n    1: \"Jan\",\n    2: \"Feb\",\n    3: \"Mar\",\n    4: \"Apr\",\n    5: \"May\",\n    6: \"Jun\",\n    7: \"Jul\",\n    8: \"Aug\",\n    9: \"Sep\",\n    10: \"Oct\",\n    11: \"Nov\",\n    12: \"Dec\"\n  };\n\n  let nameOrderUnique = new Set(nameOrder.reverse());\n\n  let navDisplay = Array.from(nameOrderUnique);\n\n  navDisplay = navDisplay.map((el, index) => {\n    let formattedDate = new Date(navInfo[el].timeStamp);\n    let date = formattedDate.getDate();\n    let monthNum = formattedDate.getMonth();\n    let month = monthEng[monthNum + 1];\n    let lastMessage = navInfo[el].msg.slice(0, 25);\n\n    return (\n      <NavLink\n        key={index}\n        to={`/messenger/${navInfo[el].neighborId}`}\n        style={{\n          textDecoration: \"none\",\n          color: \"black\"\n        }}\n        exact\n        className=\"flex-display-container py-3 px-2 message-selector\"\n        activeClassName=\"active-message-selector\"\n        onClick={props.hidePanelArea}\n      >\n        <img\n          src={navInfo[el].imageUrl}\n          alt=\"chat-neighbor-pic\"\n          width=\"50\"\n          height=\"50\"\n          className=\"user-pic mr-2 ml-1\"\n        />\n\n        <div>\n          <div className=\"m-0\">\n            <strong>{el}</strong>{\" \"}\n            <span style={{ color: \"grey\" }}>\n              {`\\u2022 ${date} ${month} \\u2022`}\n            </span>\n          </div>\n          <div className=\"m-0\">\n            {navInfo[el].sender === props.user._id ? <span>You: </span> : <></>}\n            <span style={{ color: \"grey\" }}>{lastMessage}</span>\n          </div>\n        </div>\n      </NavLink>\n    );\n  });\n\n  return (\n    <>\n      <h2 className=\"pl-2\">Messenger</h2>\n      <div className=\"p-0 messenger-nav\">{navDisplay}</div>\n    </>\n  );\n};\n\nexport default MessengerNav;\n","import React, { Fragment } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst ChatArea = props => {\n  let neighborId = props.match.params.neighborId;\n\n  let chatAreaMsg = \"\";\n  if (props.chatMsg.length) {\n    chatAreaMsg = [...props.chatMsg].reverse().filter(el => {\n      return (\n        (el.sender._id === props.user._id && el.reciever._id === neighborId) ||\n        (el.reciever._id === props.user._id && el.sender._id === neighborId)\n      );\n    });\n  }\n\n  let chatAreaDisplay = [...chatAreaMsg].map((el, index) => {\n    let message = el.chatMsg\n      .trim()\n      .split(\"\\n\")\n      .map((item, index) => {\n        return (\n          <span key={index}>\n            {item}\n            <br />\n          </span>\n        );\n      });\n\n    if (el.sender._id !== props.user._id) {\n      return (\n        <div key={index} className=\"d-flex justify-content-start\">\n          <div className=\"chat-bubble\">\n            <b style={{ color: \"#66AD93\" }}>{el.sender.username}</b>\n            <p>{message}</p>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div key={index} className=\"d-flex justify-content-end \">\n        <div className=\"chat-bubble\">\n          <b style={{ color: \"#FF8C00\" }}>You</b>\n          <p>{message}</p>\n        </div>\n      </div>\n    );\n  });\n\n  let neighborName = \"\";\n  let neighborPic = \"\";\n  if (chatAreaMsg[0]) {\n    if (chatAreaMsg[0].sender.username !== props.user.username) {\n      neighborName = chatAreaMsg[0].sender.username;\n      neighborPic = chatAreaMsg[0].sender.imageUrl;\n    } else {\n      neighborName = chatAreaMsg[0].reciever.username;\n      neighborPic = chatAreaMsg[0].reciever.imageUrl;\n    }\n  } else if (chatAreaMsg) {\n    let selectedUser = [...props.allUsers].filter(el => {\n      return el._id === neighborId;\n    });\n\n    neighborName = selectedUser[0].username;\n    neighborPic = selectedUser[0].imageUrl;\n  }\n\n  return (\n    <Fragment>\n      <div\n        className=\"flex-display-container px-2 py-2\"\n        style={{\n          backgroundColor: \"#D5F2E3\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}\n      >\n        <h3 className=\"mb-0\">\n          <Link\n            style={{ textDecoration: \"none\", color: \"black\" }}\n            to={`/${neighborName}`}\n          >\n            <img\n              src={neighborPic}\n              width=\"40\"\n              height=\"40\"\n              className=\"user-pic\"\n              alt=\"neighbor_pic\"\n            />{\" \"}\n            {neighborName}\n          </Link>\n        </h3>\n        {window.innerWidth <= 600 || window.innerHeight <= 600 ? (\n          <Button\n            id=\"chat-area-change-size-btn\"\n            variant=\"outline-success\"\n            onClick={props.hideChatArea}\n          >\n            back to list\n          </Button>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"p-4 chat-area-msg-display\">{chatAreaDisplay}</div>\n      <div>\n        <Form\n          onSubmit={e => {\n            props.handleChatInputSubmit(e, neighborId);\n          }}\n        >\n          <Form.Control\n            as=\"textarea\"\n            rows=\"3\"\n            name=\"chatInput\"\n            onChange={props.handleChange}\n            value={props.chatInput}\n            placeholder=\"Text here...\"\n          />\n          <div className=\"d-flex justify-content-end\">\n            <Button className=\"mx-2\" type=\"submit\" variant=\"outline-success\">\n              Send\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ChatArea;\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport MessengerNav from \"./MessengerNav\";\nimport ChatArea from \"./ChatArea\";\n\nexport default class Messenger extends Component {\n  constructor() {\n    super();\n    this.panelArea = React.createRef();\n    this.chatArea = React.createRef();\n  }\n  componentDidMount() {\n    if (\n      (window.innerWidth <= 600 || window.innerHeight <= 600) &&\n      this.props.showChatArea\n    ) {\n      this.panelArea.current.style.display = \"none\";\n      this.chatArea.current.style.display = \"block\";\n      this.props.setChatArea(false);\n    }\n  }\n\n  hideChatArea = () => {\n    if (window.innerWidth <= 600 || window.innerHeight <= 600) {\n      this.panelArea.current.style.display = \"block\";\n      this.chatArea.current.style.display = \"none\";\n    }\n  };\n\n  hidePanelArea = () => {\n    if (window.innerWidth <= 600 || window.innerHeight <= 600) {\n      this.panelArea.current.style.display = \"none\";\n      this.chatArea.current.style.display = \"block\";\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid={true} className=\"p-0 flex-display-container\">\n        <div className=\"px-0 panel-area\" ref={this.panelArea}>\n          <MessengerNav\n            user={this.props.user}\n            chatMsg={this.props.chatMsg}\n            hidePanelArea={this.hidePanelArea}\n          />\n        </div>\n        <div className=\"p-0 chat-area-container\" ref={this.chatArea}>\n          <ChatArea\n            user={this.props.user}\n            chatMsg={this.props.chatMsg}\n            chatInput={this.props.chatInput}\n            handleChange={this.props.handleChange}\n            handleChatInputSubmit={this.props.handleChatInputSubmit}\n            allUsers={this.props.allUsers}\n            {...this.props}\n            hideChatArea={this.hideChatArea}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { signup } from \"../services/auth\";\nimport { Alert, Form, Button, Container, Row } from \"react-bootstrap\";\n\nclass Signup extends Component {\n  state = {\n    username: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    let username = this.state.username;\n    let regex = /^[a-z0-9]+$/i;\n    let isValidUserName = regex.test(username);\n\n    let password = this.state.password;\n\n    let street = this.state.street.trim();\n    let city = this.state.city.trim();\n    let houseNumber = this.state.houseNumber.trim();\n\n    if (!isValidUserName) {\n      this.setState({\n        error: \"Username can contain only english letters or numbers\"\n      });\n      return;\n    }\n\n    if (username.length < 3 || username.length > 12) {\n      this.setState({\n        error: \"The length of username should be 3-12 characters\"\n      });\n      return;\n    }\n\n    if (password.length < 8) {\n      this.setState({\n        error: \"Password should contain at least 8 characters\"\n      });\n      return;\n    }\n\n    if (!street || !city || !houseNumber) {\n      this.setState({\n        error:\n          \"The street, city and house number input should contain valid characters \"\n      });\n      return;\n    }\n\n    signup(\n      username,\n      password,\n      street,\n      houseNumber,\n      city,\n      this.state.postalCode\n    ).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        this.props.setUser(data);\n\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"background-image\">\n        <div className=\"signup\">\n          <Container>\n            <h2>Signup</h2>\n\n            <Form onSubmit={this.handleSubmit}>\n              <Row>\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"username\">Username: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleChange}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"password\">Password: </Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"min. 8 characters\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    required={true}\n                  />\n                </Form.Group>\n              </Row>\n\n              <Row>\n                <Form.Group className=\"col-8 \">\n                  <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"street\"\n                    id=\"street\"\n                    value={this.state.street}\n                    onChange={this.handleChange}\n                    required={true}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"col-4 \">\n                  <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"houseNumber\"\n                    id=\"houseNumber\"\n                    onChange={this.handleChange}\n                    value={this.state.houseNumber}\n                    required={true}\n                  />\n                </Form.Group>\n              </Row>\n\n              <Row>\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"postalCode\" id=\"postal-code\">\n                    Postalcode:{\" \"}\n                  </Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    name=\"postalCode\"\n                    id=\"postalCode\"\n                    onChange={this.handleChange}\n                    value={this.state.postalCode}\n                    min=\"0\"\n                    required={true}\n                  />\n                </Form.Group>\n                <Form.Group className=\"col-6\">\n                  <Form.Label htmlFor=\"city\">City: </Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"city\"\n                    id=\"city\"\n                    onChange={this.handleChange}\n                    value={this.state.city}\n                    required={true}\n                  />\n                </Form.Group>\n              </Row>\n\n              {this.state.error && (\n                <Alert variant=\"danger\">{this.state.error}</Alert>\n              )}\n              <Button variant=\"danger\" type=\"submit\">\n                Sign up\n              </Button>\n            </Form>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { login } from \"../services/auth\";\nimport { Alert, Form, Button } from \"react-bootstrap\";\n\nclass Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    error: \"\"\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    login(this.state.username, this.state.password).then(data => {\n      if (data.message) {\n        // handle errors\n        this.setState({\n          error: data.message\n        });\n      } else {\n        // no error\n        // lift the data up to the App state\n        this.props.setUser(data);\n        // redirect to \"/\" (NewsFeed Page)\n        this.props.history.push(\"/\");\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"background-image\">\n        <div className=\"login-form\">\n          <h2>Login</h2>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group>\n              <Form.Label htmlFor=\"username\">Username: </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"username\"\n                id=\"username\"\n                value={this.state.username}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label htmlFor=\"password\">Password: </Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            {this.state.error && (\n              <Alert variant=\"danger\">{this.state.error}</Alert>\n            )}\n            <Button variant=\"danger\" type=\"submit\">\n              Log in\n            </Button>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default class AboutMe extends Component {\n  render() {\n    return (\n      <>\n        <h5\n          className=\"mt-md-5 mb-2 profile-detail-subhead\"\n          style={{ color: \"grey\" }}\n        >\n          About Me &nbsp;&nbsp;\n          {this.props.sameUser && !this.props.state.showAboutMeForm && (\n            <Button\n              onClick={() =>\n                this.props.toggleForm({\n                  showAboutMeForm: !this.props.state.showAboutMeForm\n                })\n              }\n              variant=\"outline-info\"\n            >{`\\u270E`}</Button>\n          )}\n        </h5>\n\n        {this.props.state.showAboutMeForm && (\n          <Form onSubmit={this.props.updateAboutMe}>\n            <Form.Group>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"aboutMe\"\n                onChange={this.props.handleChange}\n                value={this.props.state.aboutMe}\n              />\n            </Form.Group>\n            <div className=\"d-flex justify-content-end\">\n              <Button type=\"submit\" variant=\"outline-success\" className=\"mr-1\">\n                Add\n              </Button>\n              <Button\n                onClick={this.props.cancelEditAboutMe}\n                variant=\"outline-danger\"\n              >\n                Cancel\n              </Button>\n            </div>\n          </Form>\n        )}\n        {!this.props.state.showAboutMeForm && (\n          <p className=\"mt-3 mb-md-5\">\n            {this.props.state.aboutMe &&\n              this.props.state.aboutMe\n                .trim()\n                .split(\"\\n\")\n                .map((item, index) => {\n                  return (\n                    <span key={index}>\n                      {item}\n                      <br />\n                    </span>\n                  );\n                })}\n          </p>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default class ProfilePic extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"profile-page-img-container\">\n          <img className=\"user-pic\" src={this.props.imageUrl} alt=\"\" />\n          {this.props.canUpdateImg && <span>Preview</span>}\n        </div>\n        {this.props.sameUser && (\n          <form onSubmit={this.props.handleSubmitFile}>\n            <input\n              type=\"file\"\n              id=\"pic-input\"\n              onChange={this.props.handleFileChange}\n            />\n            {this.props.canUpdateImg && (\n              <Button type=\"submit\" variant=\"outline-info\">\n                Upload\n              </Button>\n            )}\n          </form>\n        )}\n        {this.props.photoMessage && (\n          <p style={{ color: \"red\" }}>{this.props.photoMessage}</p>\n        )}\n      </>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport default class OfferService extends Component {\n  render() {\n    let services = <></>;\n\n    // check if offerService is empty\n    if (this.props.offerService) {\n      services = [...this.props.offerService].map((el, index) => {\n        return (\n          <Fragment key={index}>\n            <div className=\"help-item-list\">\n              <li>\n                <span className=\"mr-2 help-item \">\n                  <i className=\"fas fa-icons\"></i>\n                </span>{\" \"}\n                <span>{el}</span>\n              </li>\n\n              {this.props.showOfferServiceForm && (\n                <button\n                  onClick={() => this.props.deleteService(el)}\n                >{`\\u00D7`}</button>\n              )}\n            </div>\n          </Fragment>\n        );\n      });\n    }\n\n    return (\n      <div className=\"my-md-5\">\n        <h3 className=\"profile-detail-subhead\">\n          I can help...{\" \"}\n          {this.props.sameUser && !this.props.showOfferServiceForm && (\n            <Button\n              onClick={() =>\n                this.props.toggleForm({\n                  showOfferServiceForm: !this.props.showOfferServiceForm\n                })\n              }\n              variant=\"outline-info\"\n            >\n              {`\\u270E`} Edit\n            </Button>\n          )}\n        </h3>\n\n        <ul className=\"pl-0\" style={{ listStyleType: \"none\" }}>\n          {services}\n        </ul>\n\n        {this.props.showOfferServiceForm && (\n          <Form onSubmit={this.props.handleSubmitOfferService}>\n            <Form.Group>\n              <Form.Control\n                id=\"help-input\"\n                type=\"text\"\n                name=\"serviceInput\"\n                onChange={this.props.handleChange}\n                value={this.props.serviceInput}\n              />\n            </Form.Group>\n            <div className=\"add-service-stuff-btn\">\n              <Button type=\"submit\" variant=\"outline-success\" className=\"mr-2\">\n                Add\n              </Button>\n              <Button\n                onClick={() =>\n                  this.props.toggleForm({\n                    showOfferServiceForm: !this.props.showOfferServiceForm\n                  })\n                }\n                variant=\"outline-info\"\n              >\n                Done\n              </Button>\n            </div>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst OfferStuff = props => {\n  let stuff = <></>;\n  if (props.offerStuff) {\n    stuff = [...props.offerStuff].map((el, index) => {\n      return (\n        <Fragment key={index}>\n          <div className=\"help-item-list\">\n            <li>\n              <span className=\"mr-2 toolbox\">\n                <i className=\"fas fa-toolbox\"></i>{\" \"}\n              </span>{\" \"}\n              <span>{el}</span>\n            </li>\n\n            {props.showOfferStuffForm && (\n              <button onClick={() => props.deleteStuff(el)}>{`\\u00D7`}</button>\n            )}\n          </div>\n        </Fragment>\n      );\n    });\n  }\n\n  return (\n    <div className=\"my-md-5\">\n      <h3 className=\"profile-detail-subhead\">\n        I can lend...{\" \"}\n        {props.sameUser && !props.showOfferStuffForm && (\n          <Button\n            onClick={() =>\n              props.toggleForm({\n                showOfferStuffForm: !props.showOfferStuffForm\n              })\n            }\n            variant=\"outline-info\"\n          >\n            {`\\u270E`} Edit\n          </Button>\n        )}\n      </h3>\n\n      <ul className=\"pl-0\" style={{ listStyleType: \"none\" }}>\n        {stuff}\n      </ul>\n\n      {props.showOfferStuffForm && (\n        <Form onSubmit={props.handleSubmitOfferStuff}>\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              name=\"stuffInput\"\n              id=\"stuff-input\"\n              onChange={props.handleChange}\n              value={props.stuffInput}\n            />\n          </Form.Group>\n          <div className=\"add-service-stuff-btn\">\n            <Button type=\"submit\" variant=\"outline-success\" className=\"mr-2\">\n              Add\n            </Button>\n            <Button\n              onClick={() =>\n                props.toggleForm({\n                  showOfferStuffForm: !props.showOfferStuffForm\n                })\n              }\n              variant=\"outline-info\"\n            >\n              Done\n            </Button>\n          </div>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nexport default OfferStuff;\n// rafce\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst ReferenceCard = props => {\n  let referenceList = [...props.reference].map((el, index) => {\n    let content = el.content.split(\"\\n\").map(function(item, key) {\n      return (\n        <span key={key}>\n          {item}\n          <br />\n        </span>\n      );\n    });\n\n    let stars = \"\\u2605\".repeat(el.rating);\n\n    return (\n      <Fragment key={index}>\n        <Row className=\"my-3\">\n          <Col className=\"mr-2\" xs={2} lg={1}>\n            {el.author.imageUrl && (\n              <img\n                className=\"user-pic mt-1\"\n                src={el.author.imageUrl}\n                alt=\"author_picture\"\n                width=\"40\"\n                height=\"40\"\n              />\n            )}\n          </Col>\n          <Col>\n            {el.author.username ? (\n              <Link\n                style={{ textDecoration: \"none\", color: \"black\" }}\n                to={`/${el.author.username}`}\n              >\n                <strong>{el.author.username}</strong>\n              </Link>\n            ) : (\n              <strong style={{ color: \"grey\", fontStyle: \"italic\" }}>\n                Deleted\n              </strong>\n            )}\n            <p className=\"mb-1\" style={{ color: \"#ffcc00\", fontSize: 20 }}>\n              {stars}\n            </p>\n            <p>{content}</p>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  });\n  return referenceList;\n};\n\nexport default ReferenceCard;\n","import React, { Fragment } from \"react\";\nimport { Button, Form, Alert, Container, Row, Col } from \"react-bootstrap\";\nimport ReactStars from \"react-stars\";\nimport ReferenceCard from \"./ReferenceCard\";\n\nconst Reference = props => {\n  const ratingChanged = rating => {\n    props.handleRatingChange(rating);\n  };\n\n  let createdRef = \"\";\n\n  // or let createdRef = React.createRef();\n  // and button property: ref={createdRef}\n  // or using e.target: e.target.id.name\n\n  return (\n    <>\n      <h3 className=\"mt-md-5 reference-heading h2-heading\">\n        Reference{\" \"}\n        {!props.sameUser && !props.showReferenceForm && props.user && (\n          <Button\n            onClick={() =>\n              props.toggleForm({\n                showReferenceForm: !props.showReferenceForm\n              })\n            }\n            variant=\"outline-info\"\n          >\n            {`\\u270E`} Add a reference\n          </Button>\n        )}\n      </h3>\n      <Container>\n        {props.showReferenceForm && !props.sameUser && (\n          <Fragment>\n            <Alert variant=\"warning\">\n              Your current credit: {props.authorCredits}\n            </Alert>\n            {props.showNotEnoughCredit && (\n              <Alert variant=\"warning\">\n                You don't have enough credit to transfer.\n              </Alert>\n            )}\n\n            {props.showNeedtoWriteSth && (\n              <Alert variant=\"warning\">You need to write something.</Alert>\n            )}\n\n            <Row className=\"my-3\">\n              <Col className=\"mr-2\" xs={2} lg={1}>\n                <img\n                  className=\"user-pic mt-1\"\n                  src={props.user.imageUrl}\n                  alt=\"author_picture\"\n                  width=\"40\"\n                  height=\"40\"\n                />\n              </Col>\n              <Col>\n                <Form onSubmit={e => props.addReference(e, createdRef)}>\n                  {props.showReferenceAlert && (\n                    <Alert variant=\"danger\">\n                      IMPORTANT!!\n                      <br />\n                      Are you sure you want to submit this reference?\n                      <br />\n                      Submitted reference CANNOT be modified or deleted.\n                      <br />\n                      {/* <Button type=\"submit\" variant=\"outline-danger\"> */}\n                      <Button\n                        type=\"submit\"\n                        ref={domEl => {\n                          createdRef = domEl;\n                        }}\n                        name=\"final_submit\"\n                        variant=\"outline-success\"\n                        className=\"mt-3\"\n                      >\n                        Confirm\n                      </Button>\n                      <Button\n                        onClick={() =>\n                          props.toggleForm({ showReferenceAlert: false })\n                        }\n                        variant=\"outline-danger\"\n                        className=\"mt-3 mx-2\"\n                      >\n                        Cancel\n                      </Button>\n                    </Alert>\n                  )}\n\n                  <Row>\n                    <Col md={6}>\n                      <Form.Group>\n                        <Form.Label>\n                          Give Credits to <strong>{props.profileOwner}</strong>{\" \"}\n                          (optional) :\n                        </Form.Label>\n                        <Form.Control\n                          type=\"number\"\n                          name=\"creditInput\"\n                          placeholder=\"Write a number\"\n                          min=\"0\"\n                          step=\"1\"\n                          onChange={props.handleCreditChange}\n                          value={props.creditInput}\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md={1}></Col>\n                    <Col md={5}>\n                      <Form.Label>Rating :</Form.Label>\n                      <ReactStars\n                        value={props.rating}\n                        count={5}\n                        onChange={ratingChanged}\n                        size={30}\n                        half={false}\n                        color2={\"#ffd700\"}\n                      />\n                    </Col>\n                  </Row>\n                  <Form.Group>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows=\"3\"\n                      name=\"referenceInput\"\n                      onChange={props.handleRefChange}\n                      value={props.referenceInput}\n                      required={true}\n                      placeholder=\"Write your reference here\"\n                    />\n                  </Form.Group>\n                  {!props.showReferenceAlert && (\n                    <div className=\"d-flex justify-content-end\">\n                      <Button type=\"submit\" variant=\"outline-success\">\n                        Add\n                      </Button>\n                      <Button\n                        onClick={props.cancelEditReference}\n                        variant=\"outline-danger\"\n                        className=\"mx-2\"\n                      >\n                        Cancel\n                      </Button>\n                    </div>\n                  )}\n                </Form>\n              </Col>\n            </Row>\n          </Fragment>\n        )}\n        <ReferenceCard reference={props.reference} />\n      </Container>\n    </>\n  );\n};\n\nexport default Reference;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Button, Alert, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport AboutMe from \"./AboutMe\";\nimport ProfilePic from \"./ProfilePic\";\nimport { handleUpload } from \"../../services/upload-img\";\nimport OfferService from \"./OfferService\";\nimport OfferStuff from \"./OfferStuff\";\nimport Reference from \"./Reference\";\n// import DeleteButton from \"../DeleteButton\";   disable del-account-function temporarily\n\nclass ProfileDetails extends Component {\n  state = {\n    _id: null,\n    username: \"\",\n    address: \"\",\n    street: \"\",\n    houseNumber: \"\",\n    city: \"\",\n    postalCode: \"\",\n    offerStuff: \"\",\n    offerService: \"\",\n    imageUrl: \"\",\n    aboutMe: \"\",\n    reference: \"\",\n    credits: \"\",\n    event: \"\",\n    following: \"\",\n    showAboutMeForm: false,\n    showAddressForm: false,\n    showOfferServiceForm: false,\n    showOfferStuffForm: false,\n    showReferenceForm: false,\n    showReferenceAlert: false,\n    showDeleteAlert: false,\n    showNotEnoughCredit: false,\n    showNeedtoWriteSth: false,\n    serviceInput: \"\",\n    stuffInput: \"\",\n    referenceInput: \"\",\n    creditInput: \"\",\n    authorCredits: this.props.user.credits,\n    rating: 0,\n    photoMessage: null,\n    addressInvalidMsg: null,\n    canUpdateImg: false,\n    originalImgUrl: \"\",\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.getData();\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  // get profile owner's data and update the state\n  getData = () => {\n    const username = this.props.match.params.username;\n\n    axios\n      .get(`/api/user/${username}`)\n      .then((response) => {\n        this.setState({\n          _id: response.data._id,\n          username: response.data.username,\n          address: response.data.address,\n          street: response.data.address.street,\n          houseNumber: response.data.address.houseNumber,\n          city: response.data.address.city,\n          postalCode: response.data.address.postalCode,\n          offerStuff: response.data.offerStuff,\n          offerService: response.data.offerService,\n          imageUrl: response.data.imageUrl,\n          aboutMe: response.data.aboutMe,\n          reference: response.data.reference.reverse(),\n          credits: response.data.credits,\n          event: response.data.event,\n          following: response.data.following,\n          originalImgUrl: response.data.imageUrl,\n        });\n      })\n\n      .catch((err) => {\n        console.log(err);\n        if (err.response.status === 404) {\n          this.setState({\n            error: err.response.data.message,\n          });\n        }\n      });\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  toggleForm = (obj) => {\n    this.setState(obj);\n  };\n\n  //Update Address\n  updateAddress = (event) => {\n    event.preventDefault();\n\n    let street = this.state.street.trim();\n    let city = this.state.city.trim();\n    let houseNumber = this.state.houseNumber.trim();\n    if (!street || !city || !houseNumber) {\n      this.setState({\n        addressInvalidMsg:\n          \"The street, city and house number input should contain valid characters \",\n      });\n      return;\n    }\n\n    axios\n      .put(`/api/user/address/${this.state.username}`, {\n        street: this.state.street,\n        houseNumber: this.state.houseNumber,\n        city: this.state.city,\n        postalCode: this.state.postalCode,\n      })\n      .then((response) => {\n        if (response.data.message) {\n          this.setState({ addressInvalidMsg: response.data.message });\n          return;\n        }\n\n        this.setState({\n          address: response.data.address,\n          street: response.data.address.street,\n          houseNumber: response.data.address.houseNumber,\n          city: response.data.address.city,\n          postalCode: response.data.address.postalCode,\n          addressInvalidMsg: \"\",\n        });\n        this.props.setUser(response.data);\n        this.toggleForm({ showAddressForm: !this.state.showAddressForm });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  cancelEditAddress = () => {\n    this.setState({ showAddressForm: false });\n  };\n\n  // AboutMe Functions\n  updateAboutMe = (event) => {\n    event.preventDefault();\n    axios\n      .put(`/api/user/${this.state.username}`, { aboutMe: this.state.aboutMe })\n      .then((response) => {\n        this.setState(\n          {\n            aboutMe: response.data.aboutMe,\n          },\n          () => {\n            this.toggleForm({ showAboutMeForm: !this.state.showAboutMeForm });\n          }\n        );\n      })\n      .catch((error) => console.log(error));\n  };\n\n  cancelEditAboutMe = () => {\n    this.getData();\n    this.toggleForm({ showAboutMeForm: !this.state.showAboutMeForm });\n  };\n\n  // update user's image\n  handleFileChange = (e) => {\n    let imgSizeLimit = 5000000; //5MB\n    let allowedFormat = [\"image/jpeg\", \"image/png\"];\n    let chosenFile = e.target.files[0];\n\n    if (!chosenFile) {\n      this.setState({\n        canUpdateImg: false,\n        imageUrl: this.state.originalImgUrl,\n      });\n      return;\n    }\n\n    if (chosenFile.size > imgSizeLimit) {\n      this.setState({\n        canUpdateImg: false,\n        photoMessage: \"Size of image should be less than 5MB\",\n        imageUrl: this.state.originalImgUrl,\n      });\n      return;\n    }\n\n    if (allowedFormat.indexOf(chosenFile.type) < 0) {\n      this.setState({\n        canUpdateImg: false,\n        photoMessage: \"Format of image should be jpeg or png\",\n        imageUrl: this.state.originalImgUrl,\n      });\n      return;\n    }\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    // imageUrl => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new thing in '/api/things/create' POST route\n\n    this.setState({ uploadOn: true, photoMessage: \"\" });\n\n    handleUpload(uploadData)\n      .then((response) => {\n        this.setState({\n          imageUrl: response.secure_url,\n          uploadOn: false,\n          canUpdateImg: true,\n          photoMessage: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  handleSubmitFile = (e) => {\n    e.preventDefault();\n\n    if (this.state.uploadOn) return; // do nothing if the file is still being uploaded\n    axios\n      .put(`/api/user/profile-pic/${this.state.username}`, {\n        imageUrl: this.state.imageUrl,\n      })\n      .then((response) => {\n        this.setState({\n          imageUrl: response.data.imageUrl,\n          photoMessage: \"Image has been updated successfully\",\n          canUpdateImg: false,\n        });\n        this.props.setUser(response.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  //offer Service functions\n  handleSubmitOfferService = (e) => {\n    e.preventDefault();\n    if (this.state.serviceInput !== \"\") {\n      axios\n        .put(`/api/user/offer-service/${this.state.username}`, {\n          offerService: this.state.serviceInput.trim(),\n        })\n        .then((response) => {\n          this.setState({\n            offerService: response.data.offerService,\n            serviceInput: \"\",\n          });\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  deleteService = (deleteItem) => {\n    axios\n      .put(`/api/user/offer-service-delete/${this.state.username}`, {\n        offerService: deleteItem,\n      })\n      .then((response) => {\n        this.setState({\n          offerService: response.data.offerService,\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  //offer Stuff functions\n  handleSubmitOfferStuff = (e) => {\n    e.preventDefault();\n    if (this.state.stuffInput) {\n      axios\n\n        .put(`/api/user/offer-stuff/${this.state.username}`, {\n          offerStuff: this.state.stuffInput.trim(),\n        })\n        .then((response) => {\n          this.setState({\n            offerStuff: response.data.offerStuff,\n            stuffInput: \"\",\n          });\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  deleteStuff = (deleteItem) => {\n    axios\n      .put(`/api/user/offer-stuff-delete/${this.state.username}`, {\n        offerStuff: deleteItem,\n      })\n      .then((response) => {\n        this.setState({\n          offerStuff: response.data.offerStuff,\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  // Reference\n\n  handleRefChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      showNeedtoWriteSth: false,\n    });\n  };\n\n  handleCreditChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n      showNotEnoughCredit: false,\n    });\n  };\n\n  handleRatingChange = (rating) => {\n    this.setState({\n      rating,\n    });\n  };\n\n  cancelEditReference = () => {\n    this.toggleForm({ showReferenceAlert: false, showReferenceForm: false });\n    this.setState({\n      rating: 0,\n      referenceInput: \"\",\n      creditInput: \"\",\n      showNotEnoughCredit: false,\n      showNeedtoWriteSth: false,\n    });\n  };\n\n  addReference = (e, ref) => {\n    e.preventDefault();\n\n    if (\n      parseInt(this.state.authorCredits, 10) -\n        parseInt(this.state.creditInput, 10) <\n      0\n    ) {\n      this.setState({ showNotEnoughCredit: true, showReferenceAlert: false });\n      return;\n    }\n\n    if (!this.state.referenceInput.trim()) {\n      this.setState({ showNeedtoWriteSth: true, showReferenceAlert: false });\n      return;\n    }\n\n    this.toggleForm({ showReferenceAlert: true });\n\n    if (ref.name === \"final_submit\") {\n      let recievedCredit = parseInt(this.state.creditInput, 10);\n\n      if (!this.state.creditInput) {\n        recievedCredit = 0;\n      }\n\n      this.submitReference(recievedCredit);\n    }\n  };\n\n  submitReference = (recievedCredit) => {\n    return axios\n      .post(\"api/reference\", {\n        content: this.state.referenceInput.trim(),\n        rating: this.state.rating,\n        recievedCredit,\n        profileOwner: this.state._id,\n      })\n      .then((response) => {\n        this.setState({\n          referenceInput: \"\",\n          creditInput: \"\",\n          rating: 0,\n          showReferenceAlert: false,\n          authorCredits: response.data.authorData.credits,\n          credits: response.data.profileOwnerData.credits,\n          reference: response.data.profileOwnerData.reference.reverse(),\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  //Delete Account\n  deleteAccount = () => {\n    axios\n      .delete(`/api/user/${this.state._id}`, { id: this.state._id })\n      .then((res) => {\n        this.props.history.push(\"/\");\n      })\n      .catch((err) => console.log(err));\n  };\n\n  toggleDelAlertFunction = () => {\n    this.setState({ showDeleteAlert: !this.state.showDeleteAlert });\n  };\n\n  render() {\n    //  disable del-account-function temporarily\n    // let alertMessage = (\n    //   <p>\n    //     IMPORTANT!! <br />\n    //     Are you sure you want to delete your account??\n    //   </p>\n    // );\n\n    let sameUser = false;\n    if (this.state._id === this.props.user._id) {\n      sameUser = true;\n    }\n\n    if (this.state.error) {\n      return <h1 className=\"profile-detail-page\">{this.state.error}</h1>;\n    }\n\n    return (\n      <Container className=\"my-md-5 px-lg-5 profile-detail-page\">\n        {/* disable del-account-function temporarily */}\n        {/* {sameUser && (\n          <DeleteButton\n            alertMessage={alertMessage}\n            toggleDelAlertFunction={this.toggleDelAlertFunction}\n            deleteFunction={this.deleteAccount}\n            showDeleteAlert={this.state.showDeleteAlert}\n          />\n        )} */}\n        <Row>\n          <Col md={5} className=\"my-4\" id=\"profile-left-top-container\">\n            <ProfilePic\n              user={this.props.user}\n              sameUser={sameUser}\n              imageUrl={this.state.imageUrl}\n              handleFileChange={this.handleFileChange}\n              handleSubmitFile={this.handleSubmitFile}\n              photoMessage={this.state.photoMessage}\n              canUpdateImg={this.state.canUpdateImg}\n            />\n\n            {sameUser && (\n              <>\n                <h5\n                  style={{ color: \"grey\" }}\n                  className=\"mt-md-4 profile-detail-subhead\"\n                >\n                  Address&nbsp;&nbsp;&nbsp;\n                  {!this.state.showAddressForm && (\n                    <Button\n                      onClick={() =>\n                        this.toggleForm({\n                          showAddressForm: !this.state.showAddressForm,\n                        })\n                      }\n                      variant=\"outline-info\"\n                    >{`\\u270E`}</Button>\n                  )}\n                </h5>\n\n                {this.state.showAddressForm && (\n                  <Form onSubmit={this.updateAddress}>\n                    <Row>\n                      {this.state.addressInvalidMsg && (\n                        <p className=\"warning col-12\">\n                          * {this.state.addressInvalidMsg}\n                        </p>\n                      )}\n\n                      <Form.Group className=\"col-7\">\n                        <Form.Label htmlFor=\"street\">Street: </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"street\"\n                          id=\"street\"\n                          value={this.state.street}\n                          onChange={this.handleChange}\n                          required={true}\n                        />\n                      </Form.Group>\n\n                      <Form.Group className=\"col-4\">\n                        <Form.Label htmlFor=\"houseNumber\">Nr.: </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"houseNumber\"\n                          id=\"houseNumber\"\n                          onChange={this.handleChange}\n                          value={this.state.houseNumber}\n                          required={true}\n                        />\n                      </Form.Group>\n                    </Row>\n\n                    <Row>\n                      <Form.Group className=\"col-5\">\n                        <Form.Label htmlFor=\"postalCode\">\n                          Postalcode:{\" \"}\n                        </Form.Label>\n                        <Form.Control\n                          type=\"number\"\n                          name=\"postalCode\"\n                          id=\"postalCode\"\n                          onChange={this.handleChange}\n                          value={this.state.postalCode}\n                          required={true}\n                          min=\"0\"\n                        />\n                      </Form.Group>\n                      <Form.Group className=\"col-6\">\n                        <Form.Label htmlFor=\"city\">City: </Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"city\"\n                          id=\"city\"\n                          onChange={this.handleChange}\n                          value={this.state.city}\n                          required={true}\n                        />\n                      </Form.Group>\n                    </Row>\n\n                    {this.state.error && (\n                      <Alert variant=\"danger\">{this.state.error}</Alert>\n                    )}\n\n                    <Button\n                      variant=\"outline-success\"\n                      type=\"submit\"\n                      className=\"mr-2\"\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      variant=\"outline-danger\"\n                      onClick={this.cancelEditAddress}\n                    >\n                      Cancel\n                    </Button>\n                  </Form>\n                )}\n\n                {!this.state.showAddressForm && (\n                  <>\n                    <p className=\"mb-0\">\n                      {this.state.address.formattedAddress}\n                    </p>\n                    <p\n                      className=\"mb-0\"\n                      style={{ color: \"grey\", fontStyle: \"italic\" }}\n                    >\n                      * Only you can see your address\n                    </p>\n                  </>\n                )}\n              </>\n            )}\n\n            <h5\n              className=\"mt-md-4 profile-detail-subhead\"\n              style={{ color: \"grey\" }}\n            >\n              Credit:{\" \"}\n              <span style={{ color: \"black\" }}>{this.state.credits}</span>\n            </h5>\n          </Col>\n\n          <Col md={7} className=\"my-md-4\">\n            <h1>\n              {this.state.username}\n              &nbsp;&nbsp;\n              {!sameUser && (\n                <Link\n                  to={`/messenger/${this.state._id}`}\n                  className=\"btn btn-outline-info\"\n                  onClick={() => {\n                    this.props.setChatArea(true);\n                  }}\n                >\n                  {`\\u2709`} Message me\n                </Link>\n              )}\n            </h1>\n\n            <AboutMe\n              sameUser={sameUser}\n              user={this.props.user}\n              state={this.state}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              cancelEditAboutMe={this.cancelEditAboutMe}\n              updateAboutMe={this.updateAboutMe}\n            />\n          </Col>\n\n          <Col md={5} id=\"lend-help-profile-box\">\n            <OfferStuff\n              sameUser={sameUser}\n              offerStuff={this.state.offerStuff}\n              showOfferStuffForm={this.state.showOfferStuffForm}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              stuffInput={this.state.stuffInput}\n              handleSubmitOfferStuff={this.handleSubmitOfferStuff}\n              deleteStuff={this.deleteStuff}\n            />\n            <p className=\"mt-md-5\"></p>\n            <OfferService\n              sameUser={sameUser}\n              offerService={this.state.offerService}\n              showOfferServiceForm={this.state.showOfferServiceForm}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              serviceInput={this.state.serviceInput}\n              handleSubmitOfferService={this.handleSubmitOfferService}\n              deleteService={this.deleteService}\n            />\n          </Col>\n          <Col md={7}>\n            <Reference\n              sameUser={sameUser}\n              user={this.props.user}\n              toggleForm={this.toggleForm}\n              handleChange={this.handleChange}\n              cancelEditReference={this.cancelEditReference}\n              addReference={this.addReference}\n              showReferenceForm={this.state.showReferenceForm}\n              showReferenceAlert={this.state.showReferenceAlert}\n              rating={this.state.rating}\n              referenceInput={this.state.referenceInput}\n              creditInput={this.state.creditInput}\n              reference={this.state.reference}\n              showNotEnoughCredit={this.state.showNotEnoughCredit}\n              showNeedtoWriteSth={this.state.showNeedtoWriteSth}\n              authorCredits={this.state.authorCredits}\n              profileOwner={this.state.username}\n              handleRefChange={this.handleRefChange}\n              handleCreditChange={this.handleCreditChange}\n              handleRatingChange={this.handleRatingChange}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default ProfileDetails;\n","import React, { Component } from \"react\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <p>\n          {`\\u24B8`} 2019 &nbsp;\n          <a\n            className=\"footer-link\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/in/johanna-geissler/\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-linkedin\"></i> Hanna Geißler\n          </a>\n          &nbsp;&nbsp;\n          <a\n            className=\"footer-link\"\n            rel=\"noopener noreferrer\"\n            href=\"https://www.linkedin.com/in/shanwong29/\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-linkedin\"></i> Kam Shan Wong\n          </a>\n        </p>\n        <p>\n          Full code in our &nbsp;{\" \"}\n          <a\n            className=\"footer-link\"\n            rel=\"noopener noreferrer\"\n            href=\"https://github.com/shanwong29/Kiez\"\n            target=\"_blank\"\n          >\n            <i className=\"fab fa-github\"></i> Github Repository\n          </a>\n        </p>\n      </footer>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport AddEvent from \"./components/events/AddEvent\";\nimport EventDetails from \"./components/events/EventDetails\";\nimport SearchResult from \"./components/SearchResult\";\nimport Messenger from \"./components/Messenger\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport ProfileDetails from \"./components/profiles/ProfileDetails\";\nimport Footer from \"./components/Footer\";\nimport axios from \"axios\";\n\nimport socketIOClient from \"socket.io-client\";\n\n// socket client for new messages\nconst endpoint = process.env.PORT; //socket\nconst socket = socketIOClient(endpoint);\n\nclass App extends React.Component {\n  state = {\n    user: this.props.user,\n    allUsers: [],\n    allEvents: [],\n    select: \"\",\n    searchInput: \"\",\n    selectInputfield: \"\",\n    searchInputfield: \"\",\n    showNewsfeed: true,\n    showMyEvents: false,\n    showEventsGoing: false,\n    showNextEvents: false,\n    // messenger\n    sender: this.props.user._id,\n    reciever: \"\",\n    chatMsg: [],\n    chatInput: \"\",\n    recieverAction: \"\",\n    showChatArea: false,\n  };\n\n  setChatArea = (setValue) => {\n    this.setState({ showChatArea: setValue });\n  };\n\n  handleChangeNav = (object) => {\n    this.setState(object);\n    this.getAllUser();\n    this.getAllEvents();\n  };\n\n  setUser = (user) => {\n    this.setState({\n      user: user,\n    });\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  componentDidMount() {\n    this.getAllUser();\n    this.getAllEvents();\n    this.getMsg();\n\n    socket.on(\"message\", (data) => {\n      this.getMsg();\n    });\n  }\n\n  getAllUser = () => {\n    axios\n      .get(\"/api/user\")\n      .then((response) => {\n        this.setState({\n          allUsers: response.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  getAllEvents = () => {\n    axios\n      .get(\"/api/events/myevents\")\n      .then((response) => {\n        this.setState({\n          allEvents: response.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  getMsg = () => {\n    axios\n      .get(\"/api/chat/chat-msg\")\n      .then((response) => {\n        this.setState({\n          chatMsg: response.data,\n          chatInput: \"\",\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleChatInputSubmit = (e, recieverId) => {\n    e.preventDefault();\n    if (!this.state.chatInput) {\n      return;\n    }\n    axios\n      .post(\"/api/chat/chat-msg\", {\n        chatMsg: this.state.chatInput,\n        reciever: recieverId,\n      })\n      .then((res) => {\n        socket.send(res.data);\n        this.getMsg();\n      })\n\n      .catch((err) => console.log(err));\n  };\n\n  handleQuery = (e, history) => {\n    e.preventDefault();\n    if (!this.state.selectInputfield) {\n      return;\n    }\n    this.getAllUser();\n    this.setState({\n      searchInput: this.state.searchInputfield,\n      select: this.state.selectInputfield,\n    });\n\n    if (history) {\n      history.push(\"/search-result\");\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Route\n          render={(routerProps) => {\n            // console.log(routerProps);\n            return (\n              <Navbar\n                user={this.state.user}\n                clearUser={this.setUser}\n                select={this.state.select}\n                searchInput={this.state.searchInput}\n                selectInputfield={this.state.selectInputfield}\n                searchInputfield={this.state.searchInputfield}\n                handleChange={this.handleChange}\n                handleQuery={this.handleQuery}\n                getAllUser={this.getAllUser}\n                history={routerProps.history}\n                handleChangeNav={this.handleChangeNav}\n                showNewsfeed={this.state.showNewsfeed}\n                showMyEvents={this.state.showMyEvents}\n                showEventsGoing={this.state.showEventsGoing}\n                showNextEvents={this.state.showNextEvents}\n              />\n            );\n          }}\n        />\n\n        <Switch>\n          <Route\n            exact\n            path=\"/\" //it s Home Page\n            render={(props) => {\n              if (this.state.user) {\n                return (\n                  <Home\n                    {...props}\n                    user={this.state.user}\n                    getAllEvents={this.getAllEvents}\n                    allEvents={this.state.allEvents}\n                    state={this.state}\n                    showNewsfeed={this.state.showNewsfeed}\n                    showMyEvents={this.state.showMyEvents}\n                    showEventsGoing={this.state.showEventsGoing}\n                    showNextEvents={this.state.showNextEvents}\n                    handleChangeNav={this.handleChangeNav}\n                    chatMsg={this.state.chatMsg}\n                  />\n                );\n              } else {\n                return <Redirect to=\"/signup\" />;\n              }\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/search-result\"\n            render={(routerProps) => {\n              if (this.state.user) {\n                return (\n                  <SearchResult\n                    {...routerProps}\n                    user={this.state.user}\n                    allUsers={this.state.allUsers}\n                    select={this.state.select}\n                    searchInput={this.state.searchInput}\n                  />\n                );\n              } else {\n                return <Redirect to=\"/signup\" />;\n              }\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/messenger/:neighborId\"\n            render={(props) => {\n              if (this.state.user) {\n                return (\n                  <Messenger\n                    {...props}\n                    allUsers={this.state.allUsers}\n                    user={this.state.user}\n                    chatMsg={this.state.chatMsg}\n                    chatInput={this.state.chatInput}\n                    handleChange={this.handleChange}\n                    handleChatInputSubmit={this.handleChatInputSubmit}\n                    getMsg={this.getMsg}\n                    setRecieverAction={this.setRecieverAction}\n                    setChatArea={this.setChatArea}\n                    showChatArea={this.state.showChatArea}\n                  />\n                );\n              } else {\n                return <Redirect to=\"/signup\" />;\n              }\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/signup\"\n            render={(props) => <Signup {...props} setUser={this.setUser} />}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) => <Login {...props} setUser={this.setUser} />}\n          />\n\n          <Route\n            exact\n            path=\"/:username\"\n            render={(props) => {\n              if (this.state.user) {\n                return (\n                  <ProfileDetails\n                    {...props}\n                    user={this.state.user}\n                    allUsers={this.state.allUsers}\n                    setUser={this.setUser}\n                    setChatArea={this.setChatArea}\n                  />\n                );\n              } else {\n                return <Redirect to=\"/signup\" />;\n              }\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/events/create\"\n            render={(props) => {\n              if (this.state.user) {\n                return <AddEvent {...props} getAllEvents={this.getAllEvents} />;\n              } else {\n                return <Redirect to=\"/signup\" />;\n              }\n            }}\n          />\n\n          <Route\n            exact\n            path=\"/events/:id\"\n            render={(props) => (\n              <EventDetails\n                {...props}\n                state={this.state}\n                user={this.state.user}\n                allUsers={this.state.allUsers}\n                getAllEvents={this.getAllEvents}\n              />\n            )}\n          />\n        </Switch>\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\"; // npm install boostrap\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport axios from \"axios\";\n\naxios.get(\"/api/auth/loggedin\").then(response => {\n  const user = response.data;\n\n  ReactDOM.render(\n    <BrowserRouter>\n      <App user={user} />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}